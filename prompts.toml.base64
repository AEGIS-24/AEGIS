CgpHZW5CUEZQcm9tcHQwID0gIiIiCntTeXN0ZW0gUm9sZX0KWW91IGFyZSBhbiBleHBlcnQgaW4g
dGhlIGZpZWxkIG9mIGNvbXB1dGVyIHNlY3VyaXR5IGFuZCBhcmUgcmVzcG9uc2libGUgZm9yIHVu
ZGVyc3RhbmRpbmcgbXkgaW50ZW50aW9ucyBhbmQgdWx0aW1hdGVseSBnZW5lcmF0aW5nIHRoZSBi
cGZ0cmFjZSBwcm9ncmFtLgpicGZ0cmFjZSBpcyBhIGhpZ2gtbGV2ZWwgdHJhY2luZyBsYW5ndWFn
ZSBhbmQgcnVudGltZSBmb3IgTGludXggYmFzZWQgb24gZUJQRi4gSXQgc3VwcG9ydHMgc3RhdGlj
IGFuZCBkeW5hbWljIHRyYWNpbmcgZm9yIGJvdGggdGhlIGtlcm5lbCBhbmQgdXNlci1zcGFjZS4K
CntTeW50YXggcnVsZXMgZm9yIGJwZnRyYWNlfQoKe2JwZnRyYWNlIExhbmd1YWdlfQoKUHJlcHJv
Y2Vzc29yIGFuZCB0eXBlIGRlZmluaXRpb25zIHRha2UgcGxhY2UgaW4gdGhlIHByZWFtYmxlOgoK
YGBgCiNpbmNsdWRlIDxsaW51eC9zb2NrZXQuaD4KI2RlZmluZSBSRUQgIlxcMDMzWzMxbSIKCnN0
cnVjdCBTIHsKICBpbnQgeDsKfQpgYGAKCkVhY2ggYWN0aW9uIGJsb2NrIGNvbnNpc3RzIG9mIHRo
cmVlIHBhcnRzOgoKYGBgCnByb2JlWyxwcm9iZV0KL3ByZWRpY2F0ZS8gewogIGFjdGlvbgp9CmBg
YAoKUHJvYmVzOiBBIHByb2JlIHNwZWNpZmllcyB0aGUgZXZlbnQgYW5kIGV2ZW50IHR5cGUgdG8g
YXR0YWNoIHRvby4gW1Byb2JlcyBsaXN0XShodHRwczovL2dpdGh1Yi5jb20vYnBmdHJhY2UvYnBm
dHJhY2UvYmxvYi9tYXN0ZXIvbWFuL2Fkb2MvYnBmdHJhY2UuYWRvYyNwcm9iZXMpLgoKUHJlZGlj
YXRlOiBUaGUgcHJlZGljYXRlIGlzIGFuIG9wdGlvbmFsIGNvbmRpdGlvbiB0aGF0IG11c3QgYmUg
bWV0IGZvciB0aGUgYWN0aW9uIHRvIGJlIGV4ZWN1dGVkLgoKQWN0aW9uOiBBY3Rpb25zIGFyZSB0
aGUgcHJvZ3JhbXMgdGhhdCBydW4gd2hlbiBhbiBldmVudCBmaXJlcyAoYW5kIHRoZSBwcmVkaWNh
dGUgaXMgbWV0KS4gQW4gYWN0aW9uIGlzIGEgc2VtaWNvbG9uIChgO2ApIHNlcGFyYXRlZCBsaXN0
IG9mIHN0YXRlbWVudHMgYW5kIGFsd2F5cyBlbmNsb3NlZCBieSBicmFja2V0cyBge31gLgoKCgpB
IGJhc2ljIHNjcmlwdCB0aGF0IHRyYWNlcyB0aGUgYG9wZW4oMilgIGFuZCBgb3BlbmF0KDIpYCBz
eXN0ZW0gY2FsbHMgY2FuIGJlIHdyaXR0ZW4gYXMgZm9sbG93czoKCmBgYApCRUdJTiB7Cglwcmlu
dGYoIlRyYWNpbmcgb3BlbiBzeXNjYWxscy4uLiBIaXQgQ3RybC1DIHRvIGVuZC5cbiIpOwp9Cgp0
cmFjZXBvaW50OnN5c2NhbGxzOnN5c19lbnRlcl9vcGVuLAp0cmFjZXBvaW50OnN5c2NhbGxzOnN5
c19lbnRlcl9vcGVuYXQgewoJcHJpbnRmKCIlLTZkICUtMTZzICVzXG4iLCBwaWQsIGNvbW0sIHN0
cihhcmdzLmZpbGVuYW1lKSk7Cn0KYGBgCgoKCkNvbmRpdGlvbmFsIGV4cHJlc3Npb25zIGFyZSBz
dXBwb3J0ZWQgaW4gdGhlIGZvcm0gb2YgaWYvZWxzZSBzdGF0ZW1lbnRzIGFuZCB0aGUgdGVybmFy
eSBvcGVyYXRvci4KCmBgYApjb25kaXRpb24gPyBpZlRydWUgOiBpZkZhbHNlCmBgYAoKVGhlIHRl
cm5hcnkgb3BlcmF0b3IgY2FuIGJlIHVzZWQgYXMgcGFydCBvZiBhbiBhc3NpZ25tZW50LgoKYGBg
CiRhID09IDEgPyBwcmludCgidHJ1ZSIpIDogcHJpbnQoImZhbHNlIik7CiRiID0gJGEgPiAwID8g
JGEgOiAtMTsKYGBgCgoKCklmL2Vsc2Ugc3RhdGVtZW50cywgbGlrZSB0aGUgb25lIGluIGBDYCwg
YXJlIHN1cHBvcnRlZC4KCmBgYAppZiAoY29uZGl0aW9uKSB7CiAgaWZibG9jawp9IGVsc2UgaWYg
KGNvbmRpdGlvbikgewogIGlmMmJsb2NrCn0gZWxzZSB7CiAgZWxzZWJsb2NrCn0KYGBgCgpOb3Rl
IHRoYXQgdGhlIGlmL2Vsc2UgYmxvY2sgbXVzdCBiZSBmb2xsb3dlZCBieSB7fS4gSGVyZSBpcyBh
biBpbmNvcnJlY3QgZXhhbXBsZQoKYGBgCi8vIFdyb25nIHN5bnRheCwgdGhlIGlmL2Vsc2UgYmxv
Y2sgbXVzdCBiZSBmb2xsb3dlZCBieSB7IH0KaWYgKGNvbmRpdGlvbikKICBpZmJsb2NrCmVsc2UK
ICBlbHNlYmxvY2sKYGBgCgoKW05VTEwgY2hlY2tdCgpUaGVyZSBpcyBubyBzdWNoIHRoaW5nIGFz
IE5VTEwgb3IgYFxcMGAgaW4gQnBmdHJhY2UsIGFuZCB0aGUgb25seSB3YXkgdG8gZGV0ZXJtaW5l
IGlmIGl0IGlzIGVtcHR5IGlzIHRvIGNvbXBhcmUgaXQgd2l0aCAwLgoKYGBgCmtmdW5jOnZtbGlu
dXg6aW5ldF9jc2tfbGlzdGVuX3N0YXJ0CnsKICAgICRpY3NrID0gKHN0cnVjdCBpbmV0X2Nvbm5l
Y3Rpb25fc29jayAqKWFyZ3Muc2s7CiAgICBpZiAoJGljc2stPmljc2tfdWxwX29wcyAhPSAwKSB7
ICAvLyBDb3JyZWN0IHdheQogICAgaWYgKCRpY3NrLT5pY3NrX3VscF9vcHMgIT0gTlVMTCkgeyAg
Ly8gV3Jvbmcgd2F5CiAgICBpZiAoJGljc2stPmljc2tfdWxwX29wcykgeyAgLy8gV3Jvbmcgd2F5
LCBwb2ludGVyIGluIGJwZnRyYWNlIG11c3QgY29tcGFyZSB3aXRoIDAKICAgICAgICAvLyAuLi4K
ICAgIH0KfQpgYGAKCgpbRmlsdGVyaW5nXQoKRmlsdGVycyAoYWxzbyBrbm93biBhcyBwcmVkaWNh
dGVzKSBjYW4gYmUgYWRkZWQgYWZ0ZXIgcHJvYmUgbmFtZXMuIFRoZSBwcm9iZSBzdGlsbCBmaXJl
cywgYnV0IGl0IHdpbGwgc2tpcCB0aGUgYWN0aW9uIHVubGVzcyB0aGUgZmlsdGVyIGlzIHRydWUu
CgpgYGAKa3Byb2JlOnZmc19yZWFkIC9hcmcyIDwgMTYvIHsKICBwcmludGYoInNtYWxsIHJlYWQ6
ICVkIGJ5dGUgYnVmZmVyXG4iLCBhcmcyKTsKfQoKa3Byb2JlOnZmc19yZWFkIC9jb21tID09ICJi
YXNoIi8gewogIHByaW50ZigicmVhZCBieSAlc1xuIiwgY29tbSk7Cn0KYGBgCgpbRGF0YSBUeXBl
c10KClRoZSBmb2xsb3dpbmcgZnVuZGFtZW50YWwgaW50ZWdlciB0eXBlcyBhcmUgcHJvdmlkZWQg
YnkgdGhlIGxhbmd1YWdlLiBJbnRlZ2VycyBhcmUgaW50ZXJuYWxseSByZXByZXNlbnRlZCBhcyA2
NCBiaXQgc2lnbmVkLiBJZiB5b3UgbmVlZCBhbm90aGVyIHJlcHJlc2VudGF0aW9uLCB5b3UgbWF5
IGNhc3QgdG8gdGhlIGZvbGxvd2luZyBidWlsdCBpbiB0eXBlczoKCi0gdWludDgKLSBpbnQ4Ci0g
dWludDE2Ci0gaW50MTYKLSB1aW50MzIKLSBpbnQzMgotIHVpbnQ2NAotIGludDY0CgoKYnBmdHJh
Y2Ugb25seSBzdXBwb3J0cyB0aGUgYWJvdmUgYmFzaWMgZGF0YSB0eXBlcywgd2hlbiB5b3UgbmVl
ZCB0byBkbyBiYXNpYyBkYXRhIHR5cGUgY29udmVyc2lvbiwgeW91IGNhbiBvbmx5IHVzZSB0aGUg
YWJvdmUgdHlwZXMuIEhlcmUgaXMgYW4gZXhhbXBsZSwganVzdCB0byBpbGx1c3RyYXRlIHRoZSBz
eW50YXguCmBgYAprcmV0cHJvYmU6dmZzX29wZW4KewogICAgJHJlcyA9ICh1bnNpZ25lZCBsb25n
KXJldHZhbDsgLy8gV3Jvbmcgc3ludGF4LCBicGZ0cmFjZSBvbmx5IHN1cHBvcnQgdHlwZSBsaWtl
IHVpbnQ2NCAuLi4KICAgICRyZXMgPSAodWludDY0KXJldHZhbDsgLy8gQ29ycmVjdCBzeW50YXgK
fQpgYGAKCkZvciBzdHJ1Y3R1cmUgbWVtYmVycywgeW91IG1heSBuZWVkIHRvIGNvbnZlcnQgdGhl
bSB0byB0aGUgYXBwcm9wcmlhdGUgdHlwZSBkZXBlbmRpbmcgb24gdGhlIGNvbnRleHQsIHdoaWNo
IG1heSBiZSB0aGUgYmFzaWMgdHlwZSBtZW50aW9uZWQgYWJvdmUsIG9yIGEgcG9pbnRlciB0byBh
IHN0cnVjdHVyZSBvciBvdGhlciB0eXBlLiBUaGUgZm9sbG93aW5nIGlzIGFuIGV4YW1wbGUuCgpg
YGBicGZ0cmFjZQprZnVuYzp1ZG1hYnVmX3ZtX2ZhdWx0CnsKICAgICR1YnVmID0gKHN0cnVjdCB1
ZG1hYnVmICopYXJncy0+dm1mLT52bWEtPnZtX3ByaXZhdGVfZGF0YTsKICAgICRwYWdlY291bnQg
PSAkdWJ1Zi0+cGFnZWNvdW50Owp9CmBgYAoKW2xvb3BzXQoKW2Zvcl0KClRoZSBjdXJyZW50IHZl
cnNpb24gb2YgYnBmdHJhY2UgZG9lcyBub3Qgc3VwcG9ydCB0aGUgZm9yIGxvb3Agc3ludGF4LiBD
dXJyZW50bHksIGl0IGlzIG5vdCBwb3NzaWJsZSB0byB0cmF2ZXJzZSBhIG1hcC4KClt3aGlsZV0K
ClNpbmNlIGtlcm5lbCA1LjMgQlBGIHN1cHBvcnRzIGxvb3BzIGFzIGxvbmcgYXMgdGhlIHZlcmlm
aWVyIGNhbiBwcm92ZSB0aGV54oCZcmUgYm91bmRlZCBhbmQgZml0IHdpdGhpbiB0aGUgaW5zdHJ1
Y3Rpb24gbGltaXQuCgpJbiBicGZ0cmFjZSwgbG9vcHMgYXJlIGF2YWlsYWJsZSB0aHJvdWdoIHRo
ZSBgd2hpbGVgIHN0YXRlbWVudC4KCmBgYAp3aGlsZSAoY29uZGl0aW9uKSB7CiAgYmxvY2s7Cn0K
YGBgCgpXaXRoaW4gYSB3aGlsZS1sb29wIHRoZSBmb2xsb3dpbmcgY29udHJvbCBmbG93IHN0YXRl
bWVudHMgY2FuIGJlIHVzZWQ6CgotIGNvbnRpbnVlOiBza2lwIHByb2Nlc3Npbmcgb2YgdGhlIHJl
c3Qgb2YgdGhlIGJsb2NrIGFuZCBqdW1wIGJhY2sgdG8gdGhlIGV2YWx1YXRpb24gb2YgdGhlIGNv
bmRpdGlvbmFsCi0gYnJlYWs6IFRlcm1pbmF0ZSB0aGUgbG9vcAoKCmBgYAppOnM6MSB7CiAgJGkg
PSAwOwogIHdoaWxlICgkaSA8PSAxMDApIHsKICAgIHByaW50ZigiJWQgIiwgJGkpOwogICAgaWYg
KCRpID4gNSkgewogICAgICBicmVhazsKICAgIH0KICAgICRpKysKICB9CiAgcHJpbnRmKCJcbiIp
Owp9CmBgYAoKCgpbT3BlcmF0b3JzXQoKT3BlcmF0b3JzIGFuZCBQb2ludGVycyBpbiBicGZ0cmFj
ZSBhcmUgc2ltaWxhciB0byB0aG9zZSBmb3VuZCBpbiBgQ2AuCgpgQ2AgbGlrZSBzdHJ1Y3RzIGFy
ZSBzdXBwb3J0ZWQgYnkgYnBmdHJhY2UuIEZpZWxkcyBhcmUgYWNjZXNzZWQgd2l0aCB0aGUgYC5g
IG9wZXJhdG9yLiBGaWVsZHMgb2YgYSBwb2ludGVyIHRvIGEgc3RydWN0IGNhbiBiZSBhY2Nlc3Nl
ZCB3aXRoIHRoZSBgLT5gIG9wZXJhdG9yLgoKCgpbVHlwZSBjb252ZXJzaW9uXQoKSW50ZWdlciBh
bmQgcG9pbnRlciB0eXBlcyBjYW4gYmUgY29udmVydGVkIHVzaW5nIGV4cGxpY2l0IHR5cGUgY29u
dmVyc2lvbiB3aXRoIGFuIGV4cHJlc3Npb24gbGlrZToKCmBgYAokeSA9ICh1aW50MzIpICR6Owok
cHkgPSAoaW50MTYgKikgJHB6OwpgYGAKCkludGVnZXIgY2FzdHMgdG8gYSBoaWdoZXIgcmFuayBh
cmUgc2lnbiBleHRlbmRlZC4gQ29udmVyc2lvbiB0byBhIGxvd2VyIHJhbmsgaXMgZG9uZSBieSB6
ZXJvaW5nIGxlYWRpbmcgYml0cy4KCkl0IGlzIGFsc28gcG9zc2libGUgdG8gY2FzdCBiZXR3ZWVu
IGludGVnZXJzIGFuZCBpbnRlZ2VyIGFycmF5cyB1c2luZyB0aGUgc2FtZSBzeW50YXg6CgpgYGAK
JGEgPSAodWludDhbOF0pIDEyMzQ1OwokeCA9ICh1aW50NjQpICRhOwpgYGAKCkJvdGggdGhlIGNh
c3QgYW5kIHRoZSBkZXN0aW5hdGlvbiB0eXBlIG11c3QgaGF2ZSB0aGUgc2FtZSBzaXplLiBXaGVu
IGNhc3RpbmcgdG8gYW4gYXJyYXksIGl0IGlzIHBvc3NpYmxlIHRvIG9taXQgdGhlIHNpemUgd2hp
Y2ggd2lsbCBiZSBkZXRlcm1pbmVkIGF1dG9tYXRpY2FsbHkgZnJvbSB0aGUgc2l6ZSBvZiB0aGUg
Y2FzdCB2YWx1ZS4KCkludGVnZXJzIGFyZSBpbnRlcm5hbGx5IHJlcHJlc2VudGVkIGFzIDY0IGJp
dCBzaWduZWQuIElmIHlvdSBuZWVkIGFub3RoZXIgcmVwcmVzZW50YXRpb24sIHlvdSBtYXkgY2Fz
dCB0byB0aGUgc3VwcG9ydGVkIFtEYXRhIFR5cGVzXShodHRwczovL2dpdGh1Yi5jb20vYnBmdHJh
Y2UvYnBmdHJhY2UvYmxvYi9tYXN0ZXIvbWFuL2Fkb2MvYnBmdHJhY2UuYWRvYyNkYXRhLXR5cGVz
KS4KCltBcnJheSBhY2Nlc3NdCgpCcGZ0cmFjZSBkb2VzIG5vdCBzdXBwb3J0IHRoZSB1c2Ugb2Yg
dmFyaWFibGVzIGFzIGluZGV4ZXMgb2YgYXJyYXlzLgoKSGVyZSBpcyBhbiBleGFtcGxlIG9mIHRo
ZSB3cm9uZyBhcnJheSBhY2Nlc3Mgc3ludGF4LgpgYGAKdHJhY2Vwb2ludDpzeXNjYWxsczpzeXNf
ZW50ZXJfZXhlY3ZlICAKewogICAgJGkgPSAwOwogICAgd2hpbGUgKGFyZ3MtPmFyZ3ZbJGldICE9
IDApIHsgIC8vIFdyb25nLCBCcGZ0cmFjZSBkb2VzIG5vdCBzdXBwb3J0IHRoaXMgc3ludGF4LCBs
aWtlIGBhcmdzLT5hcmd2WyRpXWAKICAgICAgICAkaSsrOwogICAgfQogICAgJGxhc3RfYXJnID0g
c3RyKGFyZ3MtPmFyZ3ZbJGktMV0pOyAgLy8gV3JvbmcsIEJwZnRyYWNlIGRvZXMgbm90IHN1cHBv
cnQgdGhpcyBzeW50YXgsIGxpa2UgYGFyZ3MtPmFyZ3ZbJGkgLSAxXWAKfQpgYGAKClRoZSBzeW50
YWN0aWNhbGx5IGNvcnJlY3QgYnBmdHJhY2UgdGhhdCBpcyBzZW1hbnRpY2FsbHkgZXF1aXZhbGVu
dCB0byB0aGUgYWJvdmUgaXMgYXMgZm9sbG93cy4KYGBgCnRyYWNlcG9pbnQ6c3lzY2FsbHM6c3lz
X2VudGVyX2V4ZWN2ZQp7CgogICAgJGkgPSAwOwogICAgd2hpbGUgKCooYXJncy0+YXJndiArICRp
KSAhPSAwICYmICRpIDwgMTI4KSB7ICAvLyBUaGUgY29ycmVjdCB3YXkgaXMgYCooYXJncy0+YXJn
diArICRpKWAgLCByYXRoZXIgdGhhbiBgYXJncy0+YXJndlskaV1gLiBgJGkgPCAxMjhgIGlzIGFk
ZGVkIHRvIHByZXZlbnQgaW5maW5pdGUgbG9vcHMuCiAgICAgICAgJGkrKzsKICAgIH0KICAgICRs
YXN0X2FyZyA9IHN0cigqKGFyZ3MtPmFyZ3YgKyAkaSAtIDEpKTsKfQpgYGAKCk1vcmVldmVyLCBC
ZWNhdXNlIGVicGYgcHJvZ3JhbXMgZ28gdGhyb3VnaCBhIHZhbGlkYXRvciwgdGhlcmUgY2FuJ3Qg
YmUgcG90ZW50aWFsbHkgaW5maW5pdGUgbG9vcHMgaW4gdGhlaXIgcHJvZ3JhbXMuIFRodXMsIHRo
ZSBsb29wIGNvbmRpdGlvbiBtdXN0IGJlIGJvdW5kZWQuIFRoZSB3aGlsZSBsb29wIGNvbmRpdGlv
biBpbiB0aGUgYWJvdmUgcHJvZ3JhbSBzaG91bGQgYmUgYWRkZWQgdG8gdGhlIGAkaSA8IDEyOGAg
Y2hlY2suCgoKVGhlIGFycmF5IGluZGV4IG9wZXJhdG9yIFtdIG9ubHkgYWNjZXB0cyBsaXRlcmFs
IGludGVnZXIgaW5kaWNlcy4gVGhlIGZvbGxvd2luZyBicGZ0cmFjZSBwcm9ncmFtIGlzIGNvcnJl
Y3QuCmBgYAp0cmFjZXBvaW50OnN5c2NhbGxzOnN5c19lbnRlcl9leGVjdmUgIAp7CiAgICAkYXJn
MDAgPSBzdHIoYXJncy0+YXJndlswXSk7CiAgICAkYXJnMDEgPSBzdHIoYXJncy0+YXJndlsxXSk7
CiAgICAkYXJnMDIgPSBzdHIoYXJncy0+YXJndlsyXSk7Cn0KYGBgCgoKW1ZhcmlhYmxlcyBhbmQg
TWFwc10KCmJwZnRyYWNlIGtub3dzIHR3byB0eXBlcyBvZiB2YXJpYWJsZXMsICdzY3JhdGNoJyBh
bmQgJ21hcCcuCgonc2NyYXRjaCcgdmFyaWFibGVzIGFyZSBrZXB0IG9uIHRoZSBCUEYgc3RhY2sg
YW5kIG9ubHkgZXhpc3RzIGR1cmluZyB0aGUgZXhlY3V0aW9uIG9mIHRoZSBhY3Rpb24gYmxvY2sg
YW5kIGNhbm5vdCBiZSBhY2Nlc3NlZCBvdXRzaWRlIG9mIHRoZSBwcm9ncmFtLiBTY3JhdGNoIHZh
cmlhYmxlIG5hbWVzIGFsd2F5cyBzdGFydCB3aXRoIGEgYCRgLCBlLmcuIGAkbXl2YXJgLgoKJ21h
cCcgdmFyaWFibGVzIHVzZSBCUEYgJ21hcHMnLiBUaGVzZSBleGlzdCBmb3IgdGhlIGxpZmV0aW1l
IG9mIGBicGZ0cmFjZWAgaXRzZWxmIGFuZCBjYW4gYmUgYWNjZXNzZWQgZnJvbSBhbGwgYWN0aW9u
IGJsb2NrcyBhbmQgdXNlci1zcGFjZS4gTWFwIG5hbWVzIGFsd2F5cyBzdGFydCB3aXRoIGEgYEBg
LCBlLmcuIGBAbXltYXBgLgoKQWxsIHZhbGlkIGlkZW50aWZpZXJzIGNhbiBiZSB1c2VkIGFzIGBu
YW1lYC4KClRoZSBkYXRhIHR5cGUgb2YgYSB2YXJpYWJsZSBpcyBhdXRvbWF0aWNhbGx5IGRldGVy
bWluZWQgZHVyaW5nIGZpcnN0IGFzc2lnbm1lbnQgYW5kIGNhbm5vdCBiZSBjaGFuZ2VkIGFmdGVy
d2FyZHMKCgoKQXNzb2NpYXRpdmUgYXJyYXlzIGFyZSBhIGNvbGxlY3Rpb24gb2YgZWxlbWVudHMg
aW5kZXhlZCBieSBhIGtleSwgc2ltaWxhciB0byB0aGUgaGFzaCB0YWJsZXMgZm91bmQgaW4gbGFu
Z3VhZ2VzIGxpa2UgQysrIChgc3RkOjptYXBgKSBhbmQgUHl0aG9uIChgZGljdGApLiBUaGV54oCZ
cmUgYSB2YXJpYW50IG9mICdtYXAnIHZhcmlhYmxlcy4KCmBgYApAbmFtZVtrZXldID0gZXhwcmVz
c2lvbgpAbmFtZVtrZXkxLGtleTJdID0gZXhwcmVzc2lvbgpgYGAKClRoZSBmb2xsb3dpbmcgc25p
cHBldCBjcmVhdGVzIGEgbWFwIHdpdGgga2V5IHNpZ25hdHVyZSBgW2ludDY0LCBzdHJpbmdbMTZd
XWAgYW5kIGEgdmFsdWUgdHlwZSBvZiBgaW50NjRgOgoKYGBgCkBbcGlkLCBjb21tXSsrCmBgYAoK
CgpQZXItVGhyZWFkIFZhcmlhYmxlcwoKVGhlc2UgY2FuIGJlIGltcGxlbWVudGVkIGFzIGFuIGFz
c29jaWF0aXZlIGFycmF5IGtleWVkIG9uIHRoZSB0aHJlYWQgSUQgb3IgcHJvY2VzcyBJRC4gRm9y
IGV4YW1wbGUsIEBzdGFydFt0aWRdIG9yIEBzdGFydFtwaWRdOgoKYGBgCmtwcm9iZTpkb19uYW5v
c2xlZXAgewogIEBzdGFydFt0aWRdID0gbnNlY3M7Cn0KCmtyZXRwcm9iZTpkb19uYW5vc2xlZXAg
L0BzdGFydFt0aWRdICE9IDAvIHsKICBwcmludGYoInNsZXB0IGZvciAlZCBtc1xuIiwgKG5zZWNz
IC0gQHN0YXJ0W3RpZF0pIC8gMTAwMDAwMCk7CiAgZGVsZXRlKEBzdGFydFt0aWRdKTsKfQpgYGAK
CgoKW0J1aWx0aW5zXQoKQnVpbHRpbnMgYXJlIHNwZWNpYWwgdmFyaWFibGVzIGJ1aWx0IGludG8g
dGhlIGxhbmd1YWdlLiBVbmxpa2Ugc2NyYXRjaCBhbmQgbWFwIHZhcmlhYmxlcyB0aGV5IGRvbuKA
mXQgbmVlZCBhICQgb3IgQCBhcyBwcmVmaXggKGV4Y2VwdCBmb3IgdGhlIHBvc2l0aW9uYWwgcGFy
YW1ldGVycykuIFRoZSAnS2VybmVsJyBjb2x1bW4gaW5kaWNhdGVzIHRoZSBtaW5pbXVtIGtlcm5l
bCB2ZXJzaW9uIHJlcXVpcmVkIGFuZCB0aGUgJ0JQRiBIZWxwZXInIGNvbHVtbiBpbmRpY2F0ZXMg
dGhlIHJhdyBCUEYgaGVscGVyIGZ1bmN0aW9uIHVzZWQgZm9yIHRoaXMgYnVpbHRpbi4KCgoKLSBh
cmcwLCBhcmcxLCDigKZhcmduCiAgLSBpbnQ2NAogIC0gVGhlIG51bWJlcmluZyBzdGFydHMgZnJv
bSAwLCBpLmUuIGFyZzAgaXMgdGhlIGZpcnN0IHBhcmFtZXRlciBvZiB0aGUgZnVuY3Rpb24uCiAg
LSAobisxKXRoIGFyZ3VtZW50IHBhc3NlZCB0byB0aGUgZnVuY3Rpb24gYmVpbmcgdHJhY2VkLiBU
aGVzZSBhcmUgZXh0cmFjdGVkIGZyb20gdGhlIENQVSByZWdpc3RlcnMuIFRoZSBhbW91bnQgb2Yg
YXJncyBwYXNzZWQgaW4gcmVnaXN0ZXJzIGRlcGVuZHMgb24gdGhlIENQVSBhcmNoaXRlY3R1cmUu
IChrcHJvYmVzLCB1cHJvYmVzLCB1c2R0KS4KCi0gYXJncwogIC0gc3RydWN0IGFyZ3MKICAtIFRo
ZSBzdHJ1Y3Qgb2YgYWxsIGFyZ3VtZW50cyBvZiB0aGUgdHJhY2VkIGZ1bmN0aW9uLiBBdmFpbGFi
bGUgaW4gdHJhY2Vwb2ludCwga2Z1bmMsIGFuZCB1cHJvYmUgKHdpdGggRFdBUkYpIHByb2Jlcy4g
VXNlIGFyZ3MueCB0byBhY2Nlc3MgYXJndW1lbnQgeCBvciBhcmdzIHRvIGdldCBhIHJlY29yZCB3
aXRoIGFsbCBhcmd1bWVudHMuCgotIGNvbW0KICAtIHN0cmluZ1sxNl0KICAtIE5hbWUgb2YgdGhl
IGN1cnJlbnQgdGhyZWFkCgotIGN1cnRhc2sKICAtIFBvaW50ZXIgdG8gc3RydWN0IHRhc2tfc3Ry
dWN0IG9mIHRoZSBjdXJyZW50IHRhc2sKLSBwaWQKICAtIFByb2Nlc3MgSUQgb2YgdGhlIGN1cnJl
bnQgdGhyZWFkIChha2EgdGhyZWFkIGdyb3VwIElEKSwgYXMgc2VlbiBmcm9tIHRoZSBpbml0IG5h
bWVzcGFjZQoKCgpbQnVpbHRpbnMgRnVuY3Rpb25zXQoKLSBrYWRkcihjaGFyICpuYW1lKSA6IFJl
c29sdmUga2VybmVsIHN5bWJvbCBuYW1lCi0ga3B0cih2b2lkICpwKSA6IEFubm90YXRlIGFzIGtl
cm5lbHNwYWNlIHBvaW50ZXIKLSBrc3ltKHZvaWQgKnApIDogUmVzb2x2ZSBrZXJuZWwgYWRkcmVz
cwotIG5zZWNzKCkgOiBUaW1lc3RhbXBzIGFuZCBUaW1lIERlbHRhcwotIG9mZnNldG9mKHN0cnVj
dCwgZWxlbWVudCkgOiBPZmZzZXQgb2YgZWxlbWVudCBpbiBzdHJ1Y3R1cmUKLSBwYXRoKHN0cnVj
dCBwYXRoICpwYXRoKSA6IFJldHVybiBmdWxsIHBhdGgKLSBwcmludGYoY2hhciAqZm10LCDigKYp
IDogUHJpbnQgZm9ybWF0dGVkCi0gcmVnKGNoYXIgKm5hbWUpIDogUmV0dXJucyB0aGUgdmFsdWUg
c3RvcmVkIGluIHRoZSBuYW1lZCByZWdpc3RlcgotIHNpZ25hbChjaGFyW10gc2lnbmFsIHwgdTMy
IHNpZ25hbCkgOiBTZW5kIGEgc2lnbmFsIHRvIHRoZSBjdXJyZW50IHByb2Nlc3MKClNlbmQgYSBz
aWduYWwgdG8gdGhlIHByb2Nlc3MgYmVpbmcgdHJhY2VkLiBUaGUgc2lnbmFsIGNhbiBlaXRoZXIg
YmUgaWRlbnRpZmllZCBieSBuYW1lLCBlLmcuIGBTSUdTVE9QYCBvciBieSBJRCwgZS5nLiBgMTlg
IGFzIGZvdW5kIGluIGBraWxsIC1sYC4KCmBgYAprcHJvYmU6X194NjRfc3lzX2V4ZWN2ZQovY29t
bSA9PSAiYmFzaCIvIHsKICBzaWduYWwoNSk7Cn0KYGBgCgoKCi0gc2l6ZW9mKOKApikgOiBSZXR1
cm4gc2l6ZSBvZiBhIHR5cGUgb3IgZXhwcmVzc2lvbgotIHN0cihjaGFyICpzIFssIGludCBsZW5n
dGhdKSA6IFJldHVybnMgdGhlIHN0cmluZyBwb2ludGVkIHRvIGJ5IHMKLSBzdHJjb250YWlucyhj
b25zdCBjaGFyICpoYXlzdGFjaywgY29uc3QgY2hhciAqbmVlZGxlKSA6IENvbXBhcmVzIHdoZXRo
ZXIgdGhlIHN0cmluZyBoYXlzdGFjayBjb250YWlucyB0aGUgc3RyaW5nIG5lZWRsZS4KLSBzdHJm
dGltZShjaGFyICpmb3JtYXQsIGludCBuc2VjcykgOiBSZXR1cm4gYSBmb3JtYXR0ZWQgdGltZXN0
YW1wCgpgYGAKc3RyZnRpbWUoIiVGICVULiVmIiwgbnNlY3MpCnByaW50ZigiJXNcbiIsIHN0cmZ0
aW1lKCIlRiAlVC4lZiIsIG5zZWNzKSk7CmBgYAoKCgoKCntwcm9iZXN9CgpicGZ0cmFjZSBzdXBw
b3J0cyB2YXJpb3VzIHByb2JlIHR5cGVzIHdoaWNoIGFsbG93IHRoZSB1c2VyIHRvIGF0dGFjaCBC
UEYgcHJvZ3JhbXMgdG8gZGlmZmVyZW50IHR5cGVzIG9mIGV2ZW50cy4gRWFjaCBwcm9iZSBzdGFy
dHMgd2l0aCBhIHByb3ZpZGVyIChlLmcuIGtwcm9iZSkgZm9sbG93ZWQgYnkgYSBjb2xvbiAoOikg
c2VwYXJhdGVkIGxpc3Qgb2Ygb3B0aW9ucy4gCgoKCltpbnRlcnZhbF0KCi0gaW50ZXJ2YWw6IHVz
IDpjb3VudAoKLSBpbnRlcnZhbDptczpjb3VudAoKLSBpbnRlcnZhbDpzOmNvdW50CgotIGludGVy
dmFsOmh6OnJhdGUKCgoKVGhlIGludGVydmFsIHByb2JlIGZpcmVzIGF0IGEgZml4ZWQgaW50ZXJ2
YWwgYXMgc3BlY2lmaWVkIGJ5IGl0cyB0aW1lIHNwZWMuCgpUaGlzIHByb2dyYW1lIHByaW50cyB0
aGUgcmF0ZSBvZiBzeXNjYWxscyBwZXIgc2Vjb25kLgoKYGBgCnRyYWNlcG9pbnQ6cmF3X3N5c2Nh
bGxzOnN5c19lbnRlciB7IEBzeXNjYWxscyA9IGNvdW50KCk7IH0KaW50ZXJ2YWw6czoxIHsgcHJp
bnQoQHN5c2NhbGxzKTsgY2xlYXIoQHN5c2NhbGxzKTsgfQpgYGAKCgoKW2tmdW5jIGFuZCBrcmV0
ZnVuY10KCgoKLSBga2Z1bmNbOm1vZHVsZV06Zm5gCi0gYGtyZXRmdW5jWzptb2R1bGVdOmZuYAoK
Cgpga2Z1bmNgcyBhdHRhY2ggdG8ga2VybmVsIGZ1bmN0aW9ucyBzaW1pbGFyIHRvIFtrcHJvYmUg
YW5kIGtyZXRwcm9iZV0oaHR0cHM6Ly9naXRodWIuY29tL2JwZnRyYWNlL2JwZnRyYWNlL2Jsb2Iv
bWFzdGVyL21hbi9hZG9jL2JwZnRyYWNlLmFkb2MjcHJvYmVzLWtwcm9iZSkuIFRoZXkgbWFrZSB1
c2Ugb2YgZUJQRiB0cmFtcG9saW5lcyB3aGljaCBhbGxvdyBrZXJuZWwgY29kZSB0byBjYWxsIGlu
dG8gQlBGIHByb2dyYW1zIHdpdGggbmVhciB6ZXJvIG92ZXJoZWFkLiBga2Z1bmNgIGFuZCBga3Jl
dGZ1bmNgIGFyZSBhbGlhc2VkIGFzIGBmZW50cnlgIGFuZCBgZmV4aXRgIHRvIG1hdGNoIGhvdyB0
aGVzZSBhcmUgcmVmZXJlbmNlZCBpbiB0aGUga2VybmVsLgoKYGtmdW5jYHMgbWFrZSB1c2Ugb2Yg
QlRGIHR5cGUgaW5mb3JtYXRpb24gdG8gZGVyaXZlIHRoZSB0eXBlIG9mIGZ1bmN0aW9uIGFyZ3Vt
ZW50cyBhdCBjb21waWxlIHRpbWUuIFRoaXMgcmVtb3ZlcyB0aGUgbmVlZCBmb3IgbWFudWFsIHR5
cGUgY2FzdGluZyBhbmQgbWFrZXMgdGhlIGNvZGUgbW9yZSByZXNpbGllbnQgYWdhaW5zdCBzbWFs
bCBzaWduYXR1cmUgY2hhbmdlcyBpbiB0aGUga2VybmVsLiBUaGUgZnVuY3Rpb24gYXJndW1lbnRz
IGFyZSBhdmFpbGFibGUgaW4gdGhlIGBhcmdzYCBzdHJ1Y3Qgd2hpY2ggY2FuIGJlIGluc3BlY3Rl
ZCBieSBkb2luZyB2ZXJib3NlIGxpc3RpbmcgKHNlZSBbTGlzdGluZyBQcm9iZXNdKGh0dHBzOi8v
Z2l0aHViLmNvbS9icGZ0cmFjZS9icGZ0cmFjZS9ibG9iL21hc3Rlci9tYW4vYWRvYy9icGZ0cmFj
ZS5hZG9jI2xpc3RpbmctcHJvYmVzKSkuIFRoZXNlIGFyZ3VtZW50cyBhcmUgYWxzbyBhdmFpbGFi
bGUgaW4gdGhlIHJldHVybiBwcm9iZSAoYGtyZXRmdW5jYCksIHVubGlrZSBga3JldHByb2JlYC4K
CgoKYGBgCmtmdW5jOng4Nl9wbXVfc3RvcCB7CiAgcHJpbnRmKCJwbXUgJXMgc3RvcFxuIiwgc3Ry
KGFyZ3MuZXZlbnQtPnBtdS0+bmFtZSkpOwp9CgovLyBUaGUgZmdldCBmdW5jdGlvbiB0YWtlcyBv
bmUgYXJndW1lbnQgYXMgZmlsZSBkZXNjcmlwdG9yIGFuZCB5b3UgY2FuIGFjY2VzcyBpdCB2aWEg
YXJncy5mZCBhbmQgdGhlIHJldHVybiB2YWx1ZSBpcyBhY2Nlc3NpYmxlIHZpYSByZXR2YWw6Cmty
ZXRmdW5jOmZnZXQgewogIHByaW50ZigiZmQgJWQgbmFtZSAlc1xuIiwgYXJncy5mZCwgc3RyKHJl
dHZhbC0+Zl9wYXRoLmRlbnRyeS0+ZF9uYW1lLm5hbWUpKTsKfQpgYGAKCgoKW2twcm9iZSBhbmQg
a3JldHByb2JlXQoKLSBga3Byb2JlWzptb2R1bGVdOmZuYAotIGBrcmV0cHJvYmVbOm1vZHVsZV06
Zm5gCgoKCmBrcHJvYmVgcyBhbGxvdyBmb3IgZHluYW1pYyBpbnN0cnVtZW50YXRpb24gb2Yga2Vy
bmVsIGZ1bmN0aW9ucy4gRWFjaCB0aW1lIHRoZSBzcGVjaWZpZWQga2VybmVsIGZ1bmN0aW9uIGlz
IGV4ZWN1dGVkIHRoZSBhdHRhY2hlZCBCUEYgcHJvZ3JhbXMgYXJlIHJhbi4gRnVuY3Rpb24gYXJn
dW1lbnRzIGFyZSBhdmFpbGFibGUgdGhyb3VnaCB0aGUgYGFyZ05gIGZvciByZWdpc3RlciBhcmdz
LiAKCmJwZnRyYWNlIGRvZXMgbm90IGRldGVjdCB0aGUgZnVuY3Rpb24gc2lnbmF0dXJlIHNvIGl0
IGlzIG5vdCBhd2FyZSBvZiB0aGUgYXJndW1lbnQgY291bnQgb3IgdGhlaXIgdHlwZS4gSXQgaXMg
dXAgdG8gdGhlIHVzZXIgdG8gcGVyZm9ybSBbVHlwZSBjb252ZXJzaW9uXShodHRwczovL2dpdGh1
Yi5jb20vYnBmdHJhY2UvYnBmdHJhY2UvYmxvYi9tYXN0ZXIvbWFuL2Fkb2MvYnBmdHJhY2UuYWRv
YyN0eXBlLWNvbnZlcnNpb24pIHdoZW4gbmVlZGVkLCBlLmcuCgpgYGAKI2luY2x1ZGUgPGxpbnV4
L3BhdGguaD4KI2luY2x1ZGUgPGxpbnV4L2RjYWNoZS5oPgoKa3Byb2JlOnZmc19vcGVuCnsKCXBy
aW50Zigib3BlbiBwYXRoOiAlc1xuIiwgc3RyKCgoc3RydWN0IHBhdGggKilhcmcwKS0+ZGVudHJ5
LT5kX25hbWUubmFtZSkpOwp9CmBgYAoKSGVyZSBhcmcwIHdhcyBjYXN0IGFzIGEgKHN0cnVjdCBw
YXRoICopLCBzaW5jZSB0aGF0IGlzIHRoZSBmaXJzdCBhcmd1bWVudCB0byB2ZnNfb3Blbi4gVGhl
IHN0cnVjdCBzdXBwb3J0IGlzIHRoZSBzYW1lIGFzIGJjYyBhbmQgYmFzZWQgb24gYXZhaWxhYmxl
IGtlcm5lbCBoZWFkZXJzLiBUaGlzIG1lYW5zIHRoYXQgbWFueSwgYnV0IG5vdCBhbGwsIHN0cnVj
dHMgd2lsbCBiZSBhdmFpbGFibGUsIGFuZCB5b3UgbWF5IG5lZWQgdG8gbWFudWFsbHkgZGVmaW5l
IHN0cnVjdHMuIFRoZSBudW1iZXJpbmcgc3RhcnRzIGZyb20gMCwgaS5lLiBhcmcwIGlzIHRoZSBm
aXJzdCBwYXJhbWV0ZXIgb2YgdGhlIGZ1bmN0aW9uLgoKSWYgdGhlIGtlcm5lbCBoYXMgQlRGIChC
UEYgVHlwZSBGb3JtYXQpIGRhdGEsIGFsbCBrZXJuZWwgc3RydWN0cyBhcmUgYWx3YXlzIGF2YWls
YWJsZSB3aXRob3V0IGRlZmluaW5nIHRoZW0uIEZvciBleGFtcGxlOgoKYGBgCmtwcm9iZTp2ZnNf
b3BlbiB7CiAgcHJpbnRmKCJvcGVuIHBhdGg6ICVzXG4iLCBzdHIoKChzdHJ1Y3QgcGF0aCAqKWFy
ZzApLT5kZW50cnktPmRfbmFtZS5uYW1lKSk7Cn0KYGBgCgoKCmBrcmV0cHJvYmVgIHMgdHJpZ2dl
ciBvbiB0aGUgcmV0dXJuIGZyb20gYSBrZXJuZWwgZnVuY3Rpb24uIFJldHVybiBwcm9iZXMgZG8g
bm90IGhhdmUgYWNjZXNzIHRvIHRoZSBmdW5jdGlvbiAoaW5wdXQpIGFyZ3VtZW50cywgb25seSB0
byB0aGUgcmV0dXJuIHZhbHVlICh0aHJvdWdoIGByZXR2YWxgKS4gQSBjb21tb24gcGF0dGVybiB0
byB3b3JrIGFyb3VuZCB0aGlzIGlzIGJ5IHN0b3JpbmcgdGhlIGFyZ3VtZW50cyBpbiBhIG1hcCBv
biBmdW5jdGlvbiBlbnRyeSBhbmQgcmV0cmlldmluZyBpbiB0aGUgcmV0dXJuIHByb2JlOgoKYGBg
Cmtwcm9iZTpkX2xvb2t1cAp7CgkkbmFtZSA9IChzdHJ1Y3QgcXN0ciAqKWFyZzE7CglAZm5hbWVb
dGlkXSA9ICRuYW1lLT5uYW1lOwp9CgprcmV0cHJvYmU6ZF9sb29rdXAKL0BmbmFtZVt0aWRdLwp7
CglwcmludGYoIiUtOGQgJS02ZCAlLTE2cyBNICVzXG4iLCBlbGFwc2VkIC8gMWU2LCBwaWQsIGNv
bW0sCgkgICAgc3RyKEBmbmFtZVt0aWRdKSk7Cn0KYGBgCgoKCgoKW3RyYWNlcG9pbnRdCgotIGB0
cmFjZXBvaW50OnN1YnN5czpldmVudGAKClRyYWNlcG9pbnRzIGFyZSBob29rcyBpbnRvIGV2ZW50
cyBpbiB0aGUga2VybmVsLiBUcmFjZXBvaW50cyBhcmUgZGVmaW5lZCBpbiB0aGUga2VybmVsIHNv
dXJjZSBhbmQgY29tcGlsZWQgaW50byB0aGUga2VybmVsIGJpbmFyeSB3aGljaCBtYWtlcyB0aGVt
IGEgZm9ybSBvZiBzdGF0aWMgdHJhY2luZy4gVW5saWtlIGBrcHJvYmVgIHMsIG5ldyB0cmFjZXBv
aW50cyBjYW5ub3QgYmUgYWRkZWQgd2l0aG91dCBtb2RpZnlpbmcgdGhlIGtlcm5lbC4KClRoZSBh
ZHZhbnRhZ2Ugb2YgdHJhY2Vwb2ludHMgaXMgdGhhdCB0aGV5IGdlbmVyYWxseSBwcm92aWRlIGEg
bW9yZSBzdGFibGUgaW50ZXJmYWNlIHRoYW4gYGtwcm9iZWAgcyBkbywgdGhleSBkbyBub3QgZGVw
ZW5kIG9uIHRoZSBleGlzdGVuY2Ugb2YgYSBrZXJuZWwgZnVuY3Rpb24uCgpgYGAKdHJhY2Vwb2lu
dDpzeXNjYWxsczpzeXNfZW50ZXJfb3BlbmF0IHsKICBwcmludGYoIiVzICVzXG4iLCBjb21tLCBz
dHIoYXJncy5maWxlbmFtZSkpOwp9CmBgYAoKCgpbdXByb2JlLCB1cmV0cHJvYmVdCgotIGB1cHJv
YmU6YmluYXJ5OmZ1bmNgCi0gYHVwcm9iZTpiaW5hcnk6ZnVuYytvZmZzZXRgCi0gYHVwcm9iZTpi
aW5hcnk6b2Zmc2V0YAotIGB1cmV0cHJvYmU6YmluYXJ5OmZ1bmNgCgoKCmB1cHJvYmVgIHMgb3Ig
dXNlci1zcGFjZSBwcm9iZXMgYXJlIHRoZSB1c2VyLXNwYWNlIGVxdWl2YWxlbnQgb2YgYGtwcm9i
ZWAgcy4gVGhlIHNhbWUgbGltaXRhdGlvbnMgdGhhdCBhcHBseSBba3Byb2JlIGFuZCBrcmV0cHJv
YmVdKGh0dHBzOi8vZ2l0aHViLmNvbS9icGZ0cmFjZS9icGZ0cmFjZS9ibG9iL21hc3Rlci9tYW4v
YWRvYy9icGZ0cmFjZS5hZG9jI3Byb2Jlcy1rcHJvYmUpIGFsc28gYXBwbHkgdG8gYHVwcm9iZWAg
cyBhbmQgYHVyZXRwcm9iZWAgcywgbmFtZWx5OiBhcmd1bWVudHMgYXJlIGF2YWlsYWJsZSB2aWEg
dGhlIGBhcmdOYCBhbmQgYHNhcmdOYCBidWlsdGlucyBhbmQgY2FuIG9ubHkgYmUgYWNjZXNzZWQg
d2l0aCBhIHVwcm9iZSAoYHNhcmdOYCBpcyBtb3JlIGNvbW1vbiBmb3Igb2xkZXIgdmVyc2lvbnMg
b2YgZ29sYW5nKS4gcmV0dmFsIGlzIHRoZSByZXR1cm4gdmFsdWUgZm9yIHRoZSBpbnN0cnVtZW50
ZWQgZnVuY3Rpb24gYW5kIGNhbiBvbmx5IGJlIGFjY2Vzc2VkIHdpdGggYSB1cmV0cHJvYmUuCgoK
CmBgYAp1cHJvYmU6L2Jpbi9iYXNoOnJlYWRsaW5lIHsgcHJpbnRmKCJhcmcwOiAlZFxuIiwgYXJn
MCk7IH0KYGBgCgpXaGF0IGRvZXMgYXJnMCBvZiByZWFkbGluZSgpIGluIC9iaW4vYmFzaCBjb250
YWluPyBJIGRvbuKAmXQga25vdywgc28gSeKAmWxsIG5lZWQgdG8gbG9vayBhdCB0aGUgYmFzaCBz
b3VyY2UgY29kZSB0byBmaW5kIG91dCB3aGF0IGl0cyBhcmd1bWVudHMgYXJlLiBUaGUgbnVtYmVy
aW5nIHN0YXJ0cyBmcm9tIDAsIGkuZS4gYXJnMCBpcyB0aGUgZmlyc3QgcGFyYW1ldGVyIG9mIHRo
ZSBmdW5jdGlvbi4KCldoZW4gdHJhY2luZyBsaWJyYXJpZXMsIGl0IGlzIHN1ZmZpY2llbnQgdG8g
c3BlY2lmeSB0aGUgbGlicmFyeSBuYW1lIGluc3RlYWQgb2YgYSBmdWxsIHBhdGguIFRoZSBwYXRo
IHdpbGwgYmUgdGhlbiBhdXRvbWF0aWNhbGx5IHJlc29sdmVkIHVzaW5nIGAvZXRjL2xkLnNvLmNh
Y2hlYDoKCmBgYAp1cHJvYmU6bGliYzptYWxsb2MgeyBwcmludGYoIkFsbG9jYXRlZCAlZCBieXRl
c1xuIiwgYXJnMCk7IH0KYGBgCgp7U21hbGwgZ3VpZGV9CgpJZiB5b3Ugd2FudCB0byBtb25pdG9y
IHRoZSBgd3JpdGVgIHN5c3RlbSBjYWxscyB0byBgL3Byb2Mvc2VsZi9zZXRncm91cHNgLCBgL3By
b2Mvc2VsZi91aWRfbWFwYCwgYW5kIGAvcHJvYy9zZWxmL2dpZF9tYXBgIGZpbGVzLiBZb3Ugc2hv
dWxkIG5vdCBiZSBhdHRhY2hlZCB0byB0aGUgd3JpdGUgc3lzY2FsbCwgYnV0IHNob3VsZCBiZSBt
b25pdG9yaW5nIHRoZSBvcGVuIHN5c2NhbGwuIFdoZW4geW91IHVzZSB0aGUgYHdyaXRlYCBzeXNj
YWxsLCB0aGUgYXJndW1lbnRzIGluY2x1ZGUgYSBmaWxlIGRlc2NyaXB0b3IgKGFuIGludGVnZXIg
dGhhdCByZWZlcnMgdG8gYW4gb3BlbiBmaWxlKSBhbmQgdGhlIGRhdGEgdG8gd3JpdGUuIFRoZSBm
aWxlIGRlc2NyaXB0b3IgaXMganVzdCBhIHJlZmVyZW5jZSB0byBhbiBvcGVuIGZpbGUsIGFuZCBp
dCBkb2VzbuKAmXQgdGVsbCB5b3Ugd2hpY2ggZmlsZSBpcyBiZWluZyB3cml0dGVuIHRvLgpUaGUg
c2FtZSBhcHBsaWVzIHRvIHRoZSBgcmVhZGAgc3lzdGVtIGNhbGwuCgpgYGAKdHJhY2Vwb2ludDpz
eXNjYWxsczpzeXNfZW50ZXJfb3BlbiwKdHJhY2Vwb2ludDpzeXNjYWxsczpzeXNfZW50ZXJfb3Bl
bmF0Ci8qCiAgICBpbnQgX19zeXNjYWxsX25yOwogICAgaW50IGRmZDsKICAgIGNvbnN0IGNoYXIg
KmZpbGVuYW1lOwogICAgaW50IGZsYWdzOwogICAgdW1vZGVfdCBtb2RlOwoqLwovKiBDaGVjayBp
ZiB0aGUgZmlsZW5hbWUgbWF0Y2hlcyBhbnkgb2YgdGhlIHRhcmdldCBwYXRocyAqLwooc3RyKGFy
Z3MtPmZpbGVuYW1lKSA9PSAiL3Byb2Mvc2VsZi9zZXRncm91cHMiIHx8CiBzdHIoYXJncy0+Zmls
ZW5hbWUpID09ICIvcHJvYy9zZWxmL3VpZF9tYXAiICAgfHwKIHN0cihhcmdzLT5maWxlbmFtZSkg
PT0gIi9wcm9jL3NlbGYvZ2lkX21hcCIpCi8KewogICAgLyogQ2hlY2sgaWYgdGhlIGZsYWdzIGlu
ZGljYXRlIGEgcG90ZW50aWFsbHkgbW9kaWZ5aW5nIG9wZXJhdGlvbiAqLwogICAgaWYgKGFyZ3Mt
PmZsYWdzICYgKE9fV1JPTkxZIHwgT19SRFdSIHwgT19DUkVBVCB8IE9fVFJVTkMgfCBPX0FQUEVO
RCkpIHsKICAgICAgICAvLyBZb3UgY2FuIGFkZCBtb3JlIGxvZ2ljIGhlcmUgYXMgbmVlZGVkCiAg
ICB9Cn0KYGBgCgoKCntUYXJnZXR9CkknbSBnb2luZyB0byBnaXZlIHlvdSBpbmZvcm1hdGlvbiBh
Ym91dCBhIENWRSB2dWxuZXJhYmlsaXR5LCBhbmQgeW91J3JlIGdvaW5nIHRvIGdlbmVyYXRlIGEg
YnBmdHJhY2UgcHJvZ3JhbSBiYXNlZCBvbiB0aGF0IGluZm9ybWF0aW9uIHRvIG1vbml0b3Igd2hl
dGhlciB0aGUgdnVsbmVyYWJpbGl0eSBpcyBiZWluZyBleHBsb2l0ZWQgb24gdGhlIHN5c3RlbS4K
ClVzZSBwcmludGYgdG8gYWxlcnQgb25seSB3aGVuIGl0IGRldGVjdHMgdGhhdCBhIHZ1bG5lcmFi
aWxpdHkgbWF5IGJlIGV4cGxvaXRlZCwgYW5kIGluY2x1ZGUgY3ZlLWlkLCBwcm9jZXNzIHBpZCxj
b21tIGluZm9ybWF0aW9uIGluIGl0LgoKSGVyZSBpcyBhbiBleGFtcGxlLiBZb3UgY2FuIGFsc28g
Y2hvb3NlIHRvIG91dHB1dCBtb3JlIGluZm9ybWF0aW9uLgpgYGAKcHJpbnRmKCJDVkUtWFhYLVhY
WFhYIG1heWJlIHRyaWdnZXJlZCBieSBwaWRbJWRdIGNvbW1bJXNdXG4iLCBwaWQsIGNvbW0pOwpg
YGAKCk90aGVyIHRoYW4gdGhhdCwgZG8gbm90IHVzZSBwcmludGYgdG8gb3V0cHV0IHVubmVjZXNz
YXJ5IGluZm9ybWF0aW9uLgoKCntDVkUgaW5mb3JtYXRpb259CgpbW0NWRS1JRF1dCgpbRGVzY3Jp
cHRpb25dCltbQ1ZFLURFU0NSSVBUSU9OXV0KCgpbUGF0Y2hdCltbQ1ZFLVBBVENIXV0KCgpbUG9D
L0V4cF0KW1tDVkUtUE9DXV0KCgp7VGlwc30KW1tDVkUtVElQU11dCgpUcnkgbm90IHRvIG1vbml0
b3IgY29tbW9uIHN5c3RlbSBjYWxscywgYXMgdGhlIGZhbHNlIHBvc2l0aXZlIHJhdGUgd2lsbCBi
ZSBoaWdoZXIuIElmIHlvdSBkbyBtb25pdG9yLCB0cnkgdG8gbW9uaXRvciBjYWxscyB3aXRoIHNw
ZWNpZmljIHBhcmFtZXRlcnMuCgpUaGUgZm9sbG93aW5nIGFyZSBzb21lIG9mIHRoZSBtb3N0IGNv
bW1vbiBzeXN0ZW0gY2FsbHM6CgpjbG9ja19uYW5vc2xlZXAscmVhZCxwb2xsLGNsb2NrX2dldHRp
bWUsbW1hcCxydF9zaWdhY3Rpb24sZXBvbGxfcHdhaXQsbmFub3NsZWVwLGZjbnRsLHdyaXRlLHJ0
X3NpZ3Byb2NtYXNrLHdyaXRldixtdW5tYXAsbXByb3RlY3QsbmV3ZnN0YXQsbHNlZWsscHJjdGws
cmVhZGxpbmthdCxnZXR0aWQscmVhZGxpbmssYWNjZXNzLHJlY3Ztc2cscHJlYWQ2NCxicmssZ2V0
ZGVudHM2NCxtYWR2aXNlLHNpZ2FsdHN0YWNrLG9wZW4sc2VuZG1zZyxpb2N0bCxzY2hlZF95aWVs
ZCxzZWNjb21wLGZ1dGV4LG9wZW5hdCxjbG9zZSxuZXdmc3RhdGF0LG5ld3N0YXQsbmV3bHN0YXQs
Z2V0cGlkLHNldF9yb2J1c3RfbGlzdCx3YWl0NAoKCntEZWZlY3RpdmUgZnVuY3Rpb24gY29udGV4
dH0KW1tDVkUtQ09OVEVYVF1dCgoKCntHZW5lcmF0ZWQgYnBmdHJhY2UgY29kZX0KTm93IGdlbmVy
YXRlIG9ubHkgdGhlIGJwZnRyYWNlIGNvZGUgdGhhdCBtb25pdG9ycyB0aGUgdnVsbmVyYWJpbGl0
eSwgYW5kIGRvIG5vdCBvdXRwdXQgYW55IGluZm9ybWF0aW9uIG90aGVyIHRoYW4gdGhlIGNvZGUu
CiIiIgoKCgpHZXRGdW5jTmFtZVByb21wdDAgPSAiIiIKe1N5c3RlbSBSb2xlfQpZb3UgYXJlIGFu
IGV4cGVyaWVuY2VkIGtlcm5lbC1yZWxhdGVkIGRldmVsb3BlciB3aXRoIGV4dGVuc2l2ZSBleHBl
cmllbmNlIHN1Ym1pdHRpbmcgcGF0Y2hlcyB0byB0aGUga2VybmVsIGZvcnVtcywgYW5kIHlvdSBz
cGVjaWFsaXplIGluIHVuZGVyc3RhbmRpbmcgYW5kIGV4dHJhY3RpbmcgZnVuY3Rpb24tcmVsYXRl
ZCBpbmZvcm1hdGlvbiBmcm9tIHRleHQgb3IgcGF0Y2guCgoKCntUYXNrfQoKWW91ciB0YXNrIGlz
IHRvIGV4dHJhY3QgdGhlIG5hbWUgb2YgdGhlIHByb2JsZW1hdGljLCBidWdneSBmdW5jdGlvbiBu
YW1lIGZyb20gdGhlIENWRSB2dWxuZXJhYmlsaXR5IGRlc2NyaXB0aW9uIGluZm9ybWF0aW9uIG9y
IHRoZSBwYXRjaCBvZiBpdC4KCgoKe0V4YW1wbGV9CgpbRXhhbXBsZSAxXQoKCiJJbiB0aGUgTGlu
dXgga2VybmVsLCB0aGUgZm9sbG93aW5nIHZ1bG5lcmFiaWxpdHkgaGFzIGJlZW4gcmVzb2x2ZWQ6
IHBlcmYgYnBmOiBBdm9pZCBtZW1vcnkgbGVhayBmcm9tIHBlcmZfZW52X19pbnNlcnRfYnRmKCkg
cGVyZl9lbnZfX2luc2VydF9idGYoKSBkb2Vzbid0IGluc2VydCBpZiBhIGR1cGxpY2F0ZSBCVEYg
aWQgaXMgZW5jb3VudGVyZWQgYW5kIHRoaXMgY2F1c2VzIGEgbWVtb3J5IGxlYWsuIE1vZGlmeSB0
aGUgZnVuY3Rpb24gdG8gcmV0dXJuIGEgc3VjY2Vzcy9lcnJvciB2YWx1ZSBhbmQgdGhlbiBmcmVl
IHRoZSBtZW1vcnkgaWYgaW5zZXJ0aW9uIGRpZG4ndCBoYXBwZW4uIHYyLiBBZGRzIGEgcmV0dXJu
IC0xIHdoZW4gdGhlIGluc2VydGlvbiBlcnJvciBvY2N1cnMgaW4gcGVyZl9lbnZfX2ZldGNoX2J0
Zi4gVGhpcyBkb2Vzbid0IGFmZmVjdCBhbnl0aGluZyBhcyB0aGUgcmVzdWx0IGlzIG5ldmVyIGNo
ZWNrZWQuCiIKClRoZSBwZXJmX2Vudl9faW5zZXJ0X2J0ZiBmdW5jdGlvbiBpcyBmbGF3ZWQsIGku
ZS4sIGJ1Z2d5IGNvZGUuIFNvLCAgWW91IG9ubHkgbmVlZCB0byBvdXRwdXQgInBlcmZfZW52X19p
bnNlcnRfYnRmIi4KCgpbRXhhbXBsZSAyXQoKCiJJbiB0aGUgTGludXgga2VybmVsLCB0aGUgZm9s
bG93aW5nIHZ1bG5lcmFiaWxpdHkgaGFzIGJlZW4gcmVzb2x2ZWQ6IGlvbW11OiBGaXggcG90ZW50
aWFsIHVzZS1hZnRlci1mcmVlIGR1cmluZyBwcm9iZSBLYXNhbiBoYXMgcmVwb3J0ZWQgdGhlIGZv
bGxvd2luZyB1c2UgYWZ0ZXIgZnJlZSBvbiBkZXYtPmlvbW11LiB3aGVuIGEgZGV2aWNlIHByb2Jl
IGZhaWxzIGFuZCBpdCBpcyBpbiBwcm9jZXNzIG9mIGZyZWVpbmcgZGV2LT5pb21tdSBpbiBkZXZf
aW9tbXVfZnJlZSBmdW5jdGlvbiwgYSBkZWZlcnJlZF9wcm9iZV93b3JrX2Z1bmMgcnVucyBpbiBw
YXJhbGxlbCBhbmQgdHJpZXMgdG8gYWNjZXNzIGRldi0+aW9tbXUtPmZ3c3BlYyBpbiBvZl9pb21t
dV9jb25maWd1cmUgcGF0aCB0aHVzIGNhdXNpbmcgdXNlIGFmdGVyIGZyZWUuIEJVRzogS0FTQU46
IHVzZS1hZnRlci1mcmVlIGluIG9mX2lvbW11X2NvbmZpZ3VyZSsweGI0LzB4NGE0IFJlYWQgb2Yg
c2l6ZSA4IGF0IGFkZHIgZmZmZmZmODdhMmYxYWNiOCBieSB0YXNrIGt3b3JrZXIvdTE2OjIvMTUz
IFdvcmtxdWV1ZTogZXZlbnRzX3VuYm91bmQgZGVmZXJyZWRfcHJvYmVfd29ya19mdW5jIENhbGwg
dHJhY2U6IGR1bXBfYmFja3RyYWNlKzB4MC8weDMzYyBzaG93X3N0YWNrKzB4MTgvMHgyNCBkdW1w
X3N0YWNrX2x2bCsweDE2Yy8weDFlMCBwcmludF9hZGRyZXNzX2Rlc2NyaXB0aW9uKzB4ODQvMHgz
OWMgX19rYXNhbl9yZXBvcnQrMHgxODQvMHgzMDgga2FzYW5fcmVwb3J0KzB4NTAvMHg3OCBfX2Fz
YW5fbG9hZDgrMHhjMC8weGM0IG9mX2lvbW11X2NvbmZpZ3VyZSsweGI0LzB4NGE0IG9mX2RtYV9j
b25maWd1cmVfaWQrMHgyZmMvMHg0ZDQgcGxhdGZvcm1fZG1hX2NvbmZpZ3VyZSsweDQwLzB4NWMg
cmVhbGx5X3Byb2JlKzB4MWI0LzB4Yjc0IGRyaXZlcl9wcm9iZV9kZXZpY2UrMHgxMWMvMHgyMjgg
X19kZXZpY2VfYXR0YWNoX2RyaXZlcisweDE0Yy8weDMwNCBidXNfZm9yX2VhY2hfZHJ2KzB4MTI0
LzB4MWIwIF9fZGV2aWNlX2F0dGFjaCsweDI1Yy8weDMzNCBkZXZpY2VfaW5pdGlhbF9wcm9iZSsw
eDI0LzB4MzQgYnVzX3Byb2JlX2RldmljZSsweDc4LzB4MTM0IGRlZmVycmVkX3Byb2JlX3dvcmtf
ZnVuYysweDEzMC8weDFhOCBwcm9jZXNzX29uZV93b3JrKzB4NGM4LzB4OTcwIHdvcmtlcl90aHJl
YWQrMHg1YzgvMHhhZWMga3RocmVhZCsweDFmOC8weDIyMCByZXRfZnJvbV9mb3JrKzB4MTAvMHgx
OCBBbGxvY2F0ZWQgYnkgdGFzayAxOiBfX19fa2FzYW5fa21hbGxvYysweGQ0LzB4MTE0IF9fa2Fz
YW5fa21hbGxvYysweDEwLzB4MWMga21lbV9jYWNoZV9hbGxvY190cmFjZSsweGU0LzB4M2Q0IF9f
aW9tbXVfcHJvYmVfZGV2aWNlKzB4OTAvMHgzOTQgcHJvYmVfaW9tbXVfZ3JvdXArMHg3MC8weDlj
IGJ1c19mb3JfZWFjaF9kZXYrMHgxMWMvMHgxOWMgYnVzX2lvbW11X3Byb2JlKzB4YjgvMHg3ZDQg
YnVzX3NldF9pb21tdSsweGNjLzB4MTNjIGFybV9zbW11X2J1c19pbml0KzB4NDQvMHgxMzAgW2Fy
bV9zbW11XSBhcm1fc21tdV9kZXZpY2VfcHJvYmUrMHhiODgvMHhjNTQgW2FybV9zbW11XSBwbGF0
Zm9ybV9kcnZfcHJvYmUrMHhlNC8weDEzYyByZWFsbHlfcHJvYmUrMHgyYzgvMHhiNzQgZHJpdmVy
X3Byb2JlX2RldmljZSsweDExYy8weDIyOCBkZXZpY2VfZHJpdmVyX2F0dGFjaCsweGYwLzB4MTZj
IF9fZHJpdmVyX2F0dGFjaCsweDgwLzB4MzIwIGJ1c19mb3JfZWFjaF9kZXYrMHgxMWMvMHgxOWMg
ZHJpdmVyX2F0dGFjaCsweDM4LzB4NDggYnVzX2FkZF9kcml2ZXIrMHgxZGMvMHgzYTQgZHJpdmVy
X3JlZ2lzdGVyKzB4MThjLzB4MjQ0IF9fcGxhdGZvcm1fZHJpdmVyX3JlZ2lzdGVyKzB4ODgvMHg5
YyBpbml0X21vZHVsZSsweDY0LzB4ZmY0IFthcm1fc21tdV0gZG9fb25lX2luaXRjYWxsKzB4MTdj
LzB4MmYwIGRvX2luaXRfbW9kdWxlKzB4ZTgvMHgzNzggbG9hZF9tb2R1bGUrMHgzZjgwLzB4NGE0
MCBfX3NlX3N5c19maW5pdF9tb2R1bGUrMHgxYTAvMHgxZTQgX19hcm02NF9zeXNfZmluaXRfbW9k
dWxlKzB4NDQvMHg1OCBlbDBfc3ZjX2NvbW1vbisweDEwMC8weDI2NCBkb19lbDBfc3ZjKzB4Mzgv
MHhhNCBlbDBfc3ZjKzB4MjAvMHgzMCBlbDBfc3luY19oYW5kbGVyKzB4NjgvMHhhYyBlbDBfc3lu
YysweDE2MC8weDE4MCBGcmVlZCBieSB0YXNrIDE6IGthc2FuX3NldF90cmFjaysweDRjLzB4ODQg
a2FzYW5fc2V0X2ZyZWVfaW5mbysweDI4LzB4NGMgX19fX2thc2FuX3NsYWJfZnJlZSsweDEyMC8w
eDE1YyBfX2thc2FuX3NsYWJfZnJlZSsweDE4LzB4Mjggc2xhYl9mcmVlX2ZyZWVsaXN0X2hvb2sr
MHgyMDQvMHgyZmMga2ZyZWUrMHhmYy8weDNhNCBfX2lvbW11X3Byb2JlX2RldmljZSsweDI4NC8w
eDM5NCBwcm9iZV9pb21tdV9ncm91cCsweDcwLzB4OWMgYnVzX2Zvcl9lYWNoX2RldisweDExYy8w
eDE5YyBidXNfaW9tbXVfcHJvYmUrMHhiOC8weDdkNCBidXNfc2V0X2lvbW11KzB4Y2MvMHgxM2Mg
YXJtX3NtbXVfYnVzX2luaXQrMHg0NC8weDEzMCBbYXJtX3NtbXVdIGFybV9zbW11X2RldmljZV9w
cm9iZSsweGI4OC8weGM1NCBbYXJtX3NtbXVdIHBsYXRmb3JtX2Rydl9wcm9iZSsweGU0LzB4MTNj
IHJlYWxseV9wcm9iZSsweDJjOC8weGI3NCBkcml2ZXJfcHJvYmVfZGV2aWNlKzB4MTFjLzB4MjI4
IGRldmljZV9kcml2ZXJfYXR0YWNoKzB4ZjAvMHgxNmMgX19kcml2ZXJfYXR0YWNoKzB4ODAvMHgz
MjAgYnVzX2Zvcl9lYWNoX2RldisweDExYy8weDE5YyBkcml2ZXJfYXR0YWNoKzB4MzgvMHg0OCBi
dXNfYWRkX2RyaXZlcisweDFkYy8weDNhNCBkcml2ZXJfcmVnaXN0ZXIrMHgxOGMvMHgyNDQgX19w
bGF0Zm9ybV9kcml2ZXJfcmVnaXN0ZXIrMHg4OC8weDljIGluaXRfbW9kdWxlKzB4NjQvMHhmZjQg
W2FybV9zbW11XSBkb19vbmVfaW5pdGNhbGwrMHgxN2MvMHgyZjAgZG9faW5pdF9tb2R1bGUrMHhl
OC8weDM3OCBsb2FkX21vZHVsZSsweDNmODAvMHg0YTQwIF9fc2Vfc3lzX2Zpbml0X21vZHVsZSsw
eDFhMC8weDFlNCBfX2FybTY0X3N5c19maW5pdF9tb2R1bGUrMHg0NC8weDU4IGVsMF9zdmNfY29t
bW9uKzB4MTAwLzB4MjY0IGRvX2VsMF9zdmMrMHgzOC8weGE0IGVsMF9zdmMrMHgyMC8weDMwIGVs
MF9zeW5jX2hhbmRsZXIrMHg2OC8weGFjIGVsMF9zeW5jKzB4MTYwLzB4MTgwIEZpeCB0aGlzIGJ5
IHNldHRpbmcgZGV2LT5pb21tdSB0byBOVUxMIGZpcnN0IGFuZCB0aGVuIGZyZWVpbmcgZGV2X2lv
bW11IHN0cnVjdHVyZSBpbiBkZXZfaW9tbXVfZnJlZSBmdW5jdGlvbi4iCgoKRnJvbSAid2hlbiBh
IGRldmljZSBwcm9iZSBmYWlscyBhbmQgaXQgaXMgaW4gcHJvY2VzcyBvZiBmcmVlaW5nIGRldi0+
aW9tbXUgaW4gZGV2X2lvbW11X2ZyZWUgZnVuY3Rpb24iIGFuZCAiRml4IHRoaXMgYnkgc2V0dGlu
ZyBkZXYtPmlvbW11IHRvIE5VTEwgZmlyc3QgYW5kIHRoZW4gZnJlZWluZyBkZXZfaW9tbXUgc3Ry
dWN0dXJlIGluIGRldl9pb21tdV9mcmVlIGZ1bmN0aW9uIiwgeW91IGtub3cgdGhhdCB0aGVyZSBp
cyBhIHByb2JsZW0gd2l0aCB0aGUgZGV2X2lvbW11X2ZyZWUgZnVuY3Rpb24sIHNvIHlvdSBvbmx5
IG5lZWQgdG8gb3V0cHV0ICJkZXZfaW9tbXVfZnJlZSIgLgoKCltFeGFtcGxlIDNdCgoKIkluIHRo
ZSBMaW51eCBrZXJuZWwsIHRoZSBmb2xsb3dpbmcgdnVsbmVyYWJpbGl0eSBoYXMgYmVlbiByZXNv
bHZlZDogbnZtZS1sb29wOiBmaXggbWVtb3J5IGxlYWsgaW4gbnZtZV9sb29wX2NyZWF0ZV9jdHJs
KCkgV2hlbiBjcmVhdGluZyBsb29wIGN0cmwgaW4gbnZtZV9sb29wX2NyZWF0ZV9jdHJsKCksIGlm
IG52bWVfaW5pdF9jdHJsKCkgZmFpbHMsIHRoZSBsb29wIGN0cmwgc2hvdWxkIGJlIGZyZWVkIGJl
Zm9yZSBqdW1waW5nIHRvIHRoZSAib3V0IiBsYWJlbC4iCgoKCkZyb20gdGhlIGRlc2NyaXB0aW9u
LCB5b3UgY2FuIHNlZSB0aGF0IHRoZSBudm1lX2xvb3BfY3JlYXRlX2N0cmwgZnVuY3Rpb24gaGFk
IGJlZW4gZml4ZWQsIHNvIHRoZXJlIGlzIGEgcHJvYmxlbSB3aXRoIHRoZSBudm1lX2xvb3BfY3Jl
YXRlX2N0cmwgZnVuY3Rpb24sIGFuZCB5b3Ugb25seSBuZWVkIHRvIG91dHB1dCAibnZtZV9sb29w
X2NyZWF0ZV9jdHJsIiAuCgoKCgpbRXhhbXBsZSA0XQoKIkludGVnZXIgT3ZlcmZsb3cgb3IgV3Jh
cGFyb3VuZCB2dWxuZXJhYmlsaXR5IGluIG9wZW5FdWxlciBrZXJuZWwgb24gTGludXggKGZpbGVz
eXN0ZW0gbW9kdWxlcykgYWxsb3dzIEZvcmNlZCBJbnRlZ2VyIE92ZXJmbG93LlRoaXMgaXNzdWUg
YWZmZWN0cyBvcGVuRXVsZXIga2VybmVsOiBmcm9tIDQuMTkuOTAgYmVmb3JlIDQuMTkuOTAtMjQw
MS4zLCBmcm9tIDUuMTAuMC02MC4xOC4wIGJlZm9yZSA1LjEwLjAtMTgzLjAuMC4iCgoKClRoZXJl
IGlzIG5vIGluZm9ybWF0aW9uIGluIHRoZSBkZXNjcmlwdGlvbiBhYm91dCB3aGljaCBmdW5jdGlv
biBpcyBoYXZpbmcgcHJvYmxlbXMsIGFuZCB5b3UgY2FuJ3QgdGVsbCB3aGljaCBmdW5jdGlvbiBp
cyBoYXZpbmcgcHJvYmxlbXMuIFlvdSBvbmx5IG5lZWQgdG8gb3V0cHV0ICJETyBOT1QgS05PVyIu
CgoKCltFeGFtcGxlIDVdCgoKIkluIHRoZSBMaW51eCBrZXJuZWwsIHRoZSBmb2xsb3dpbmcgdnVs
bmVyYWJpbGl0eSBoYXMgYmVlbiByZXNvbHZlZDogZHJtL3ZycjogU2V0IFZSUiBjYXBhYmxlIHBy
b3Agb25seSBpZiBpdCBpcyBhdHRhY2hlZCB0byBjb25uZWN0b3IgVlJSIGNhcGFibGUgcHJvcGVy
dHkgaXMgbm90IGF0dGFjaGVkIGJ5IGRlZmF1bHQgdG8gdGhlIGNvbm5lY3RvciBJdCBpcyBhdHRh
Y2hlZCBvbmx5IGlmIFZSUiBpcyBzdXBwb3J0ZWQuIFNvIGlmIHRoZSBkcml2ZXIgdHJpZXMgdG8g
Y2FsbCBkcm0gY29yZSBzZXQgcHJvcCBmdW5jdGlvbiB3aXRob3V0IGl0IGJlaW5nIGF0dGFjaGVk
IHRoYXQgY2F1c2VzIE5VTEwgZGVyZWZlcmVuY2UuIgoKCkZyb20gdGhlIGRlc2NyaXB0aW9uLCBv
bmx5IHRoZSBuYW1lIG9mIHRoZSBtb2R1bGUgd2hlcmUgdGhlIGJ1Z2d5IGZ1bmN0aW9uIGlzIGxv
Y2F0ZWQgaXMgZ2l2ZW4gd2hpY2ggaXMgJ2RybS92cnInLCBidXQgbm90IHRoZSBuYW1lIG9mIHRo
ZSBidWdneSBmdW5jdGlvbiBpdHNlbGYsIHNvIHlvdSBuZWVkIHRvIG91dHB1dCAgIkRPIE5PVCBL
Tk9XIi4KCgoKW0V4YW1wbGUgNl0KCmBgYApkaWZmIC0tZ2l0IGEvZHJpdmVycy9uZXQvY2FuL2Rl
di9za2IuYyBiL2RyaXZlcnMvbmV0L2Nhbi9kZXYvc2tiLmMKLS0tIGEvZHJpdmVycy9uZXQvY2Fu
L2Rldi9za2IuYworKysgYi9kcml2ZXJzL25ldC9jYW4vZGV2L3NrYi5jCkBAIC00OSw3ICs0OSwx
MSBAQCBpbnQgY2FuX3B1dF9lY2hvX3NrYihzdHJ1Y3Qgc2tfYnVmZiAqc2tiLCBzdHJ1Y3QgbmV0
X2RldmljZSAqZGV2LAogewogCXN0cnVjdCBjYW5fcHJpdiAqcHJpdiA9IG5ldGRldl9wcml2KGRl
dik7CiAKLQlCVUdfT04oaWR4ID49IHByaXYtPmVjaG9fc2tiX21heCk7CisJaWYgKGlkeCA+PSBw
cml2LT5lY2hvX3NrYl9tYXgpIHsKKwkJbmV0ZGV2X2VycihkZXYsICIlczogQlVHISBUcnlpbmcg
dG8gYWNjZXNzIGNhbl9wcml2OjplY2hvX3NrYiBvdXQgb2YgYm91bmRzICgldS9tYXggJXUpXG4i
LAorCQkJICAgX19mdW5jX18sIGlkeCwgcHJpdi0+ZWNob19za2JfbWF4KTsKKwkJcmV0dXJuIC1F
SU5WQUw7CisJfQogCiAJLyogY2hlY2sgZmxhZyB3aGV0aGVyIHRoaXMgcGFja2V0IGhhcyB0byBi
ZSBsb29wZWQgYmFjayAqLwogCWlmICghKGRldi0+ZmxhZ3MgJiBJRkZfRUNITykgfHwKYGBgCgoK
VGhlIHByb3ZpZGVkIGNvZGUgc25pcHBldCBpcyBhIHBhdGNoLCB3aGljaCBtZWFucyBpdCBpcyBh
IGRpZmYgc2hvd2luZyBjaGFuZ2VzIGJldHdlZW4gdHdvIHZlcnNpb25zIG9mIGEgY29kZSBmaWxl
LlRoZSBmdW5jdGlvbiBiZWluZyBtb2RpZmllZCBpbiB0aGUgcGF0Y2ggaXMgY2FuX3B1dF9lY2hv
X3NrYi4gQmFzZWQgb24gdGhlIGFib3ZlIGFuYWx5c2lzLCB0aGUgbmFtZSBvZiB0aGUgcHJvYmxl
bWF0aWMgZnVuY3Rpb24gaXMgY2FuX3B1dF9lY2hvX3NrYi4gU28geW91IG5lZWQgdG8gb3V0cHV0
ICJjYW5fcHV0X2VjaG9fc2tiIi4KCgoKe1RhcmdldCBDVkUgSW5mb3JtYXRpb259CgpbW0NWRS1J
RF1dCgoKCltEZXNjcmlwdGlvbl0KCltbQ1ZFLURFU0NSSVBUSU9OXV0KCgoKW1BhdGNoXQoKW1tD
VkUtUEFUQ0hdXQoKCgp7R2VuZXJhdGV9CgpOb3cgYWNjb3JkaW5nIHRvIHtUYXJnZXQgQ1ZFIElu
Zm9ybWF0aW9ufSAsIE91dHB1dCB0aGUgbmFtZSBvZiB0aGUgYnVnZ3kgZnVuY3Rpb24uIElmIHlv
dSBjYW4ndCBnZXQgdGhlIG5hbWUgb2YgdGhlIGJ1Z2d5IGZ1bmN0aW9uLCBqdXN0IG91dHB1dCAi
RE8gTk9UIEtOT1ciLgoiIiIKCgoKRGVidWdCUEZQcm9tcHQwID0gIiIiCntTeXN0ZW0gUm9sZX0K
WW91IGFyZSBhbiBleHBlcnQgaW4gdGhlIGZpZWxkIG9mIGNvbXB1dGVyIHNlY3VyaXR5IGFuZCBh
cmUgcmVzcG9uc2libGUgZm9yIHVuZGVyc3RhbmRpbmcgbXkgaW50ZW50aW9ucyBhbmQgdWx0aW1h
dGVseSBkZWJ1Z2luZyB0aGUgZ2l2ZW4gYnBmdHJhY2UgcHJvZ3JhbSBhbmQgdGhlbiBnZW5lcmF0
aW5nIHRoZSBuZXcgY29ycmVjdCBicGZ0cmFjZSBwcm9ncmFtLgpicGZ0cmFjZSBpcyBhIGhpZ2gt
bGV2ZWwgdHJhY2luZyBsYW5ndWFnZSBhbmQgcnVudGltZSBmb3IgTGludXggYmFzZWQgb24gZUJQ
Ri4gSXQgc3VwcG9ydHMgc3RhdGljIGFuZCBkeW5hbWljIHRyYWNpbmcgZm9yIGJvdGggdGhlIGtl
cm5lbCBhbmQgdXNlci1zcGFjZS4KCntTeW50YXggcnVsZXMgZm9yIGJwZnRyYWNlfQoKe2JwZnRy
YWNlIExhbmd1YWdlfQoKUHJlcHJvY2Vzc29yIGFuZCB0eXBlIGRlZmluaXRpb25zIHRha2UgcGxh
Y2UgaW4gdGhlIHByZWFtYmxlOgoKYGBgCiNpbmNsdWRlIDxsaW51eC9zb2NrZXQuaD4KI2RlZmlu
ZSBSRUQgIlxcMDMzWzMxbSIKCnN0cnVjdCBTIHsKICBpbnQgeDsKfQpgYGAKCkVhY2ggYWN0aW9u
IGJsb2NrIGNvbnNpc3RzIG9mIHRocmVlIHBhcnRzOgoKYGBgCnByb2JlWyxwcm9iZV0KL3ByZWRp
Y2F0ZS8gewogIGFjdGlvbgp9CmBgYAoKUHJvYmVzOiBBIHByb2JlIHNwZWNpZmllcyB0aGUgZXZl
bnQgYW5kIGV2ZW50IHR5cGUgdG8gYXR0YWNoIHRvby4gW1Byb2JlcyBsaXN0XShodHRwczovL2dp
dGh1Yi5jb20vYnBmdHJhY2UvYnBmdHJhY2UvYmxvYi9tYXN0ZXIvbWFuL2Fkb2MvYnBmdHJhY2Uu
YWRvYyNwcm9iZXMpLgoKUHJlZGljYXRlOiBUaGUgcHJlZGljYXRlIGlzIGFuIG9wdGlvbmFsIGNv
bmRpdGlvbiB0aGF0IG11c3QgYmUgbWV0IGZvciB0aGUgYWN0aW9uIHRvIGJlIGV4ZWN1dGVkLgoK
QWN0aW9uOiBBY3Rpb25zIGFyZSB0aGUgcHJvZ3JhbXMgdGhhdCBydW4gd2hlbiBhbiBldmVudCBm
aXJlcyAoYW5kIHRoZSBwcmVkaWNhdGUgaXMgbWV0KS4gQW4gYWN0aW9uIGlzIGEgc2VtaWNvbG9u
IChgO2ApIHNlcGFyYXRlZCBsaXN0IG9mIHN0YXRlbWVudHMgYW5kIGFsd2F5cyBlbmNsb3NlZCBi
eSBicmFja2V0cyBge31gLgoKCgpBIGJhc2ljIHNjcmlwdCB0aGF0IHRyYWNlcyB0aGUgYG9wZW4o
MilgIGFuZCBgb3BlbmF0KDIpYCBzeXN0ZW0gY2FsbHMgY2FuIGJlIHdyaXR0ZW4gYXMgZm9sbG93
czoKCmBgYApCRUdJTiB7CglwcmludGYoIlRyYWNpbmcgb3BlbiBzeXNjYWxscy4uLiBIaXQgQ3Ry
bC1DIHRvIGVuZC5cbiIpOwp9Cgp0cmFjZXBvaW50OnN5c2NhbGxzOnN5c19lbnRlcl9vcGVuLAp0
cmFjZXBvaW50OnN5c2NhbGxzOnN5c19lbnRlcl9vcGVuYXQgewoJcHJpbnRmKCIlLTZkICUtMTZz
ICVzXG4iLCBwaWQsIGNvbW0sIHN0cihhcmdzLmZpbGVuYW1lKSk7Cn0KYGBgCgoKCkNvbmRpdGlv
bmFsIGV4cHJlc3Npb25zIGFyZSBzdXBwb3J0ZWQgaW4gdGhlIGZvcm0gb2YgaWYvZWxzZSBzdGF0
ZW1lbnRzIGFuZCB0aGUgdGVybmFyeSBvcGVyYXRvci4KCmBgYApjb25kaXRpb24gPyBpZlRydWUg
OiBpZkZhbHNlCmBgYAoKVGhlIHRlcm5hcnkgb3BlcmF0b3IgY2FuIGJlIHVzZWQgYXMgcGFydCBv
ZiBhbiBhc3NpZ25tZW50LgoKYGBgCiRhID09IDEgPyBwcmludCgidHJ1ZSIpIDogcHJpbnQoImZh
bHNlIik7CiRiID0gJGEgPiAwID8gJGEgOiAtMTsKYGBgCgoKCklmL2Vsc2Ugc3RhdGVtZW50cywg
bGlrZSB0aGUgb25lIGluIGBDYCwgYXJlIHN1cHBvcnRlZC4KCmBgYAppZiAoY29uZGl0aW9uKSB7
CiAgaWZibG9jawp9IGVsc2UgaWYgKGNvbmRpdGlvbikgewogIGlmMmJsb2NrCn0gZWxzZSB7CiAg
ZWxzZWJsb2NrCn0KYGBgCgpOb3RlIHRoYXQgdGhlIGlmL2Vsc2UgYmxvY2sgbXVzdCBiZSBmb2xs
b3dlZCBieSB7fS4gSGVyZSBpcyBhbiBpbmNvcnJlY3QgZXhhbXBsZQoKYGBgCi8vIFdyb25nIHN5
bnRheCwgdGhlIGlmL2Vsc2UgYmxvY2sgbXVzdCBiZSBmb2xsb3dlZCBieSB7IH0KaWYgKGNvbmRp
dGlvbikKICBpZmJsb2NrCmVsc2UKICBlbHNlYmxvY2sKYGBgCgoKW05VTEwgY2hlY2tdCgpUaGVy
ZSBpcyBubyBzdWNoIHRoaW5nIGFzIE5VTEwgb3IgYFxcMGAgaW4gQnBmdHJhY2UsIGFuZCB0aGUg
b25seSB3YXkgdG8gZGV0ZXJtaW5lIGlmIGl0IGlzIGVtcHR5IGlzIHRvIGNvbXBhcmUgaXQgd2l0
aCAwLgoKYGBgCmtmdW5jOnZtbGludXg6aW5ldF9jc2tfbGlzdGVuX3N0YXJ0CnsKICAgICRpY3Nr
ID0gKHN0cnVjdCBpbmV0X2Nvbm5lY3Rpb25fc29jayAqKWFyZ3Muc2s7CiAgICBpZiAoJGljc2st
Pmljc2tfdWxwX29wcyAhPSAwKSB7ICAvLyBDb3JyZWN0IHdheQogICAgaWYgKCRpY3NrLT5pY3Nr
X3VscF9vcHMgIT0gTlVMTCkgeyAgLy8gV3Jvbmcgd2F5CiAgICBpZiAoJGljc2stPmljc2tfdWxw
X29wcykgeyAgLy8gV3Jvbmcgd2F5LCBwb2ludGVyIGluIGJwZnRyYWNlIG11c3QgY29tcGFyZSB3
aXRoIDAKICAgICAgICAvLyAuLi4KICAgIH0KfQpgYGAKCgpbRmlsdGVyaW5nXQoKRmlsdGVycyAo
YWxzbyBrbm93biBhcyBwcmVkaWNhdGVzKSBjYW4gYmUgYWRkZWQgYWZ0ZXIgcHJvYmUgbmFtZXMu
IFRoZSBwcm9iZSBzdGlsbCBmaXJlcywgYnV0IGl0IHdpbGwgc2tpcCB0aGUgYWN0aW9uIHVubGVz
cyB0aGUgZmlsdGVyIGlzIHRydWUuCgpgYGAKa3Byb2JlOnZmc19yZWFkIC9hcmcyIDwgMTYvIHsK
ICBwcmludGYoInNtYWxsIHJlYWQ6ICVkIGJ5dGUgYnVmZmVyXG4iLCBhcmcyKTsKfQoKa3Byb2Jl
OnZmc19yZWFkIC9jb21tID09ICJiYXNoIi8gewogIHByaW50ZigicmVhZCBieSAlc1xuIiwgY29t
bSk7Cn0KYGBgCgpbRGF0YSBUeXBlc10KClRoZSBmb2xsb3dpbmcgZnVuZGFtZW50YWwgaW50ZWdl
ciB0eXBlcyBhcmUgcHJvdmlkZWQgYnkgdGhlIGxhbmd1YWdlLiBJbnRlZ2VycyBhcmUgaW50ZXJu
YWxseSByZXByZXNlbnRlZCBhcyA2NCBiaXQgc2lnbmVkLiBJZiB5b3UgbmVlZCBhbm90aGVyIHJl
cHJlc2VudGF0aW9uLCB5b3UgbWF5IGNhc3QgdG8gdGhlIGZvbGxvd2luZyBidWlsdCBpbiB0eXBl
czoKCi0gdWludDgKLSBpbnQ4Ci0gdWludDE2Ci0gaW50MTYKLSB1aW50MzIKLSBpbnQzMgotIHVp
bnQ2NAotIGludDY0CgoKYnBmdHJhY2Ugb25seSBzdXBwb3J0cyB0aGUgYWJvdmUgYmFzaWMgZGF0
YSB0eXBlcywgd2hlbiB5b3UgbmVlZCB0byBkbyBiYXNpYyBkYXRhIHR5cGUgY29udmVyc2lvbiwg
eW91IGNhbiBvbmx5IHVzZSB0aGUgYWJvdmUgdHlwZXMuIEhlcmUgaXMgYW4gZXhhbXBsZSwganVz
dCB0byBpbGx1c3RyYXRlIHRoZSBzeW50YXguCmBgYAprcmV0cHJvYmU6dmZzX29wZW4KewogICAg
JHJlcyA9ICh1bnNpZ25lZCBsb25nKXJldHZhbDsgLy8gV3Jvbmcgc3ludGF4LCBicGZ0cmFjZSBv
bmx5IHN1cHBvcnQgdHlwZSBsaWtlIHVpbnQ2NCAuLi4KICAgICRyZXMgPSAodWludDY0KXJldHZh
bDsgLy8gQ29ycmVjdCBzeW50YXgKfQpgYGAKCkZvciBzdHJ1Y3R1cmUgbWVtYmVycywgeW91IG1h
eSBuZWVkIHRvIGNvbnZlcnQgdGhlbSB0byB0aGUgYXBwcm9wcmlhdGUgdHlwZSBkZXBlbmRpbmcg
b24gdGhlIGNvbnRleHQsIHdoaWNoIG1heSBiZSB0aGUgYmFzaWMgdHlwZSBtZW50aW9uZWQgYWJv
dmUsIG9yIGEgcG9pbnRlciB0byBhIHN0cnVjdHVyZSBvciBvdGhlciB0eXBlLiBUaGUgZm9sbG93
aW5nIGlzIGFuIGV4YW1wbGUuCgpgYGBicGZ0cmFjZQprZnVuYzp1ZG1hYnVmX3ZtX2ZhdWx0CnsK
ICAgICR1YnVmID0gKHN0cnVjdCB1ZG1hYnVmICopYXJncy0+dm1mLT52bWEtPnZtX3ByaXZhdGVf
ZGF0YTsKICAgICRwYWdlY291bnQgPSAkdWJ1Zi0+cGFnZWNvdW50Owp9CmBgYAoKW2xvb3BzXQoK
W2Zvcl0KClRoZSBjdXJyZW50IHZlcnNpb24gb2YgYnBmdHJhY2UgZG9lcyBub3Qgc3VwcG9ydCB0
aGUgZm9yIGxvb3Agc3ludGF4LiBDdXJyZW50bHksIGl0IGlzIG5vdCBwb3NzaWJsZSB0byB0cmF2
ZXJzZSBhIG1hcC4KClt3aGlsZV0KClNpbmNlIGtlcm5lbCA1LjMgQlBGIHN1cHBvcnRzIGxvb3Bz
IGFzIGxvbmcgYXMgdGhlIHZlcmlmaWVyIGNhbiBwcm92ZSB0aGV54oCZcmUgYm91bmRlZCBhbmQg
Zml0IHdpdGhpbiB0aGUgaW5zdHJ1Y3Rpb24gbGltaXQuCgpJbiBicGZ0cmFjZSwgbG9vcHMgYXJl
IGF2YWlsYWJsZSB0aHJvdWdoIHRoZSBgd2hpbGVgIHN0YXRlbWVudC4KCmBgYAp3aGlsZSAoY29u
ZGl0aW9uKSB7CiAgYmxvY2s7Cn0KYGBgCgpXaXRoaW4gYSB3aGlsZS1sb29wIHRoZSBmb2xsb3dp
bmcgY29udHJvbCBmbG93IHN0YXRlbWVudHMgY2FuIGJlIHVzZWQ6CgotIGNvbnRpbnVlOiBza2lw
IHByb2Nlc3Npbmcgb2YgdGhlIHJlc3Qgb2YgdGhlIGJsb2NrIGFuZCBqdW1wIGJhY2sgdG8gdGhl
IGV2YWx1YXRpb24gb2YgdGhlIGNvbmRpdGlvbmFsCi0gYnJlYWs6IFRlcm1pbmF0ZSB0aGUgbG9v
cAoKCmBgYAppOnM6MSB7CiAgJGkgPSAwOwogIHdoaWxlICgkaSA8PSAxMDApIHsKICAgIHByaW50
ZigiJWQgIiwgJGkpOwogICAgaWYgKCRpID4gNSkgewogICAgICBicmVhazsKICAgIH0KICAgICRp
KysKICB9CiAgcHJpbnRmKCJcbiIpOwp9CmBgYAoKCgpbT3BlcmF0b3JzXQoKT3BlcmF0b3JzIGFu
ZCBQb2ludGVycyBpbiBicGZ0cmFjZSBhcmUgc2ltaWxhciB0byB0aG9zZSBmb3VuZCBpbiBgQ2Au
CgpgQ2AgbGlrZSBzdHJ1Y3RzIGFyZSBzdXBwb3J0ZWQgYnkgYnBmdHJhY2UuIEZpZWxkcyBhcmUg
YWNjZXNzZWQgd2l0aCB0aGUgYC5gIG9wZXJhdG9yLiBGaWVsZHMgb2YgYSBwb2ludGVyIHRvIGEg
c3RydWN0IGNhbiBiZSBhY2Nlc3NlZCB3aXRoIHRoZSBgLT5gIG9wZXJhdG9yLgoKCgpbVHlwZSBj
b252ZXJzaW9uXQoKSW50ZWdlciBhbmQgcG9pbnRlciB0eXBlcyBjYW4gYmUgY29udmVydGVkIHVz
aW5nIGV4cGxpY2l0IHR5cGUgY29udmVyc2lvbiB3aXRoIGFuIGV4cHJlc3Npb24gbGlrZToKCmBg
YAokeSA9ICh1aW50MzIpICR6OwokcHkgPSAoaW50MTYgKikgJHB6OwpgYGAKCkludGVnZXIgY2Fz
dHMgdG8gYSBoaWdoZXIgcmFuayBhcmUgc2lnbiBleHRlbmRlZC4gQ29udmVyc2lvbiB0byBhIGxv
d2VyIHJhbmsgaXMgZG9uZSBieSB6ZXJvaW5nIGxlYWRpbmcgYml0cy4KCkl0IGlzIGFsc28gcG9z
c2libGUgdG8gY2FzdCBiZXR3ZWVuIGludGVnZXJzIGFuZCBpbnRlZ2VyIGFycmF5cyB1c2luZyB0
aGUgc2FtZSBzeW50YXg6CgpgYGAKJGEgPSAodWludDhbOF0pIDEyMzQ1OwokeCA9ICh1aW50NjQp
ICRhOwpgYGAKCkJvdGggdGhlIGNhc3QgYW5kIHRoZSBkZXN0aW5hdGlvbiB0eXBlIG11c3QgaGF2
ZSB0aGUgc2FtZSBzaXplLiBXaGVuIGNhc3RpbmcgdG8gYW4gYXJyYXksIGl0IGlzIHBvc3NpYmxl
IHRvIG9taXQgdGhlIHNpemUgd2hpY2ggd2lsbCBiZSBkZXRlcm1pbmVkIGF1dG9tYXRpY2FsbHkg
ZnJvbSB0aGUgc2l6ZSBvZiB0aGUgY2FzdCB2YWx1ZS4KCkludGVnZXJzIGFyZSBpbnRlcm5hbGx5
IHJlcHJlc2VudGVkIGFzIDY0IGJpdCBzaWduZWQuIElmIHlvdSBuZWVkIGFub3RoZXIgcmVwcmVz
ZW50YXRpb24sIHlvdSBtYXkgY2FzdCB0byB0aGUgc3VwcG9ydGVkIFtEYXRhIFR5cGVzXShodHRw
czovL2dpdGh1Yi5jb20vYnBmdHJhY2UvYnBmdHJhY2UvYmxvYi9tYXN0ZXIvbWFuL2Fkb2MvYnBm
dHJhY2UuYWRvYyNkYXRhLXR5cGVzKS4KCltBcnJheSBhY2Nlc3NdCgpCcGZ0cmFjZSBkb2VzIG5v
dCBzdXBwb3J0IHRoZSB1c2Ugb2YgdmFyaWFibGVzIGFzIGluZGV4ZXMgb2YgYXJyYXlzLgoKSGVy
ZSBpcyBhbiBleGFtcGxlIG9mIHRoZSB3cm9uZyBhcnJheSBhY2Nlc3Mgc3ludGF4LgpgYGAKdHJh
Y2Vwb2ludDpzeXNjYWxsczpzeXNfZW50ZXJfZXhlY3ZlICAKewogICAgJGkgPSAwOwogICAgd2hp
bGUgKGFyZ3MtPmFyZ3ZbJGldICE9IDApIHsgIC8vIFdyb25nLCBCcGZ0cmFjZSBkb2VzIG5vdCBz
dXBwb3J0IHRoaXMgc3ludGF4LCBsaWtlIGBhcmdzLT5hcmd2WyRpXWAKICAgICAgICAkaSsrOwog
ICAgfQogICAgJGxhc3RfYXJnID0gc3RyKGFyZ3MtPmFyZ3ZbJGktMV0pOyAgLy8gV3JvbmcsIEJw
ZnRyYWNlIGRvZXMgbm90IHN1cHBvcnQgdGhpcyBzeW50YXgsIGxpa2UgYGFyZ3MtPmFyZ3ZbJGkg
LSAxXWAKfQpgYGAKClRoZSBzeW50YWN0aWNhbGx5IGNvcnJlY3QgYnBmdHJhY2UgdGhhdCBpcyBz
ZW1hbnRpY2FsbHkgZXF1aXZhbGVudCB0byB0aGUgYWJvdmUgaXMgYXMgZm9sbG93cy4KYGBgCnRy
YWNlcG9pbnQ6c3lzY2FsbHM6c3lzX2VudGVyX2V4ZWN2ZQp7CgogICAgJGkgPSAwOwogICAgd2hp
bGUgKCooYXJncy0+YXJndiArICRpKSAhPSAwICYmICRpIDwgMTI4KSB7ICAvLyBUaGUgY29ycmVj
dCB3YXkgaXMgYCooYXJncy0+YXJndiArICRpKWAgLCByYXRoZXIgdGhhbiBgYXJncy0+YXJndlsk
aV1gLiBgJGkgPCAxMjhgIGlzIGFkZGVkIHRvIHByZXZlbnQgaW5maW5pdGUgbG9vcHMuCiAgICAg
ICAgJGkrKzsKICAgIH0KICAgICRsYXN0X2FyZyA9IHN0cigqKGFyZ3MtPmFyZ3YgKyAkaSAtIDEp
KTsKfQpgYGAKCk1vcmVldmVyLCBCZWNhdXNlIGVicGYgcHJvZ3JhbXMgZ28gdGhyb3VnaCBhIHZh
bGlkYXRvciwgdGhlcmUgY2FuJ3QgYmUgcG90ZW50aWFsbHkgaW5maW5pdGUgbG9vcHMgaW4gdGhl
aXIgcHJvZ3JhbXMuIFRodXMsIHRoZSBsb29wIGNvbmRpdGlvbiBtdXN0IGJlIGJvdW5kZWQuIFRo
ZSB3aGlsZSBsb29wIGNvbmRpdGlvbiBpbiB0aGUgYWJvdmUgcHJvZ3JhbSBzaG91bGQgYmUgYWRk
ZWQgdG8gdGhlIGAkaSA8IDEyOGAgY2hlY2suCgoKVGhlIGFycmF5IGluZGV4IG9wZXJhdG9yIFtd
IG9ubHkgYWNjZXB0cyBsaXRlcmFsIGludGVnZXIgaW5kaWNlcy4gVGhlIGZvbGxvd2luZyBicGZ0
cmFjZSBwcm9ncmFtIGlzIGNvcnJlY3QuCmBgYAp0cmFjZXBvaW50OnN5c2NhbGxzOnN5c19lbnRl
cl9leGVjdmUgIAp7CiAgICAkYXJnMDAgPSBzdHIoYXJncy0+YXJndlswXSk7CiAgICAkYXJnMDEg
PSBzdHIoYXJncy0+YXJndlsxXSk7CiAgICAkYXJnMDIgPSBzdHIoYXJncy0+YXJndlsyXSk7Cn0K
YGBgCgoKW1ZhcmlhYmxlcyBhbmQgTWFwc10KCmJwZnRyYWNlIGtub3dzIHR3byB0eXBlcyBvZiB2
YXJpYWJsZXMsICdzY3JhdGNoJyBhbmQgJ21hcCcuCgonc2NyYXRjaCcgdmFyaWFibGVzIGFyZSBr
ZXB0IG9uIHRoZSBCUEYgc3RhY2sgYW5kIG9ubHkgZXhpc3RzIGR1cmluZyB0aGUgZXhlY3V0aW9u
IG9mIHRoZSBhY3Rpb24gYmxvY2sgYW5kIGNhbm5vdCBiZSBhY2Nlc3NlZCBvdXRzaWRlIG9mIHRo
ZSBwcm9ncmFtLiBTY3JhdGNoIHZhcmlhYmxlIG5hbWVzIGFsd2F5cyBzdGFydCB3aXRoIGEgYCRg
LCBlLmcuIGAkbXl2YXJgLgoKJ21hcCcgdmFyaWFibGVzIHVzZSBCUEYgJ21hcHMnLiBUaGVzZSBl
eGlzdCBmb3IgdGhlIGxpZmV0aW1lIG9mIGBicGZ0cmFjZWAgaXRzZWxmIGFuZCBjYW4gYmUgYWNj
ZXNzZWQgZnJvbSBhbGwgYWN0aW9uIGJsb2NrcyBhbmQgdXNlci1zcGFjZS4gTWFwIG5hbWVzIGFs
d2F5cyBzdGFydCB3aXRoIGEgYEBgLCBlLmcuIGBAbXltYXBgLgoKQWxsIHZhbGlkIGlkZW50aWZp
ZXJzIGNhbiBiZSB1c2VkIGFzIGBuYW1lYC4KClRoZSBkYXRhIHR5cGUgb2YgYSB2YXJpYWJsZSBp
cyBhdXRvbWF0aWNhbGx5IGRldGVybWluZWQgZHVyaW5nIGZpcnN0IGFzc2lnbm1lbnQgYW5kIGNh
bm5vdCBiZSBjaGFuZ2VkIGFmdGVyd2FyZHMKCgoKQXNzb2NpYXRpdmUgYXJyYXlzIGFyZSBhIGNv
bGxlY3Rpb24gb2YgZWxlbWVudHMgaW5kZXhlZCBieSBhIGtleSwgc2ltaWxhciB0byB0aGUgaGFz
aCB0YWJsZXMgZm91bmQgaW4gbGFuZ3VhZ2VzIGxpa2UgQysrIChgc3RkOjptYXBgKSBhbmQgUHl0
aG9uIChgZGljdGApLiBUaGV54oCZcmUgYSB2YXJpYW50IG9mICdtYXAnIHZhcmlhYmxlcy4KCmBg
YApAbmFtZVtrZXldID0gZXhwcmVzc2lvbgpAbmFtZVtrZXkxLGtleTJdID0gZXhwcmVzc2lvbgpg
YGAKClRoZSBmb2xsb3dpbmcgc25pcHBldCBjcmVhdGVzIGEgbWFwIHdpdGgga2V5IHNpZ25hdHVy
ZSBgW2ludDY0LCBzdHJpbmdbMTZdXWAgYW5kIGEgdmFsdWUgdHlwZSBvZiBgaW50NjRgOgoKYGBg
CkBbcGlkLCBjb21tXSsrCmBgYAoKCgpQZXItVGhyZWFkIFZhcmlhYmxlcwoKVGhlc2UgY2FuIGJl
IGltcGxlbWVudGVkIGFzIGFuIGFzc29jaWF0aXZlIGFycmF5IGtleWVkIG9uIHRoZSB0aHJlYWQg
SUQgb3IgcHJvY2VzcyBJRC4gRm9yIGV4YW1wbGUsIEBzdGFydFt0aWRdIG9yIEBzdGFydFtwaWRd
OgoKYGBgCmtwcm9iZTpkb19uYW5vc2xlZXAgewogIEBzdGFydFt0aWRdID0gbnNlY3M7Cn0KCmty
ZXRwcm9iZTpkb19uYW5vc2xlZXAgL0BzdGFydFt0aWRdICE9IDAvIHsKICBwcmludGYoInNsZXB0
IGZvciAlZCBtc1xuIiwgKG5zZWNzIC0gQHN0YXJ0W3RpZF0pIC8gMTAwMDAwMCk7CiAgZGVsZXRl
KEBzdGFydFt0aWRdKTsKfQpgYGAKCgoKW0J1aWx0aW5zXQoKQnVpbHRpbnMgYXJlIHNwZWNpYWwg
dmFyaWFibGVzIGJ1aWx0IGludG8gdGhlIGxhbmd1YWdlLiBVbmxpa2Ugc2NyYXRjaCBhbmQgbWFw
IHZhcmlhYmxlcyB0aGV5IGRvbuKAmXQgbmVlZCBhICQgb3IgQCBhcyBwcmVmaXggKGV4Y2VwdCBm
b3IgdGhlIHBvc2l0aW9uYWwgcGFyYW1ldGVycykuIFRoZSAnS2VybmVsJyBjb2x1bW4gaW5kaWNh
dGVzIHRoZSBtaW5pbXVtIGtlcm5lbCB2ZXJzaW9uIHJlcXVpcmVkIGFuZCB0aGUgJ0JQRiBIZWxw
ZXInIGNvbHVtbiBpbmRpY2F0ZXMgdGhlIHJhdyBCUEYgaGVscGVyIGZ1bmN0aW9uIHVzZWQgZm9y
IHRoaXMgYnVpbHRpbi4KCgoKLSBhcmcwLCBhcmcxLCDigKZhcmduCiAgLSBpbnQ2NAogIC0gVGhl
IG51bWJlcmluZyBzdGFydHMgZnJvbSAwLCBpLmUuIGFyZzAgaXMgdGhlIGZpcnN0IHBhcmFtZXRl
ciBvZiB0aGUgZnVuY3Rpb24uCiAgLSAobisxKXRoIGFyZ3VtZW50IHBhc3NlZCB0byB0aGUgZnVu
Y3Rpb24gYmVpbmcgdHJhY2VkLiBUaGVzZSBhcmUgZXh0cmFjdGVkIGZyb20gdGhlIENQVSByZWdp
c3RlcnMuIFRoZSBhbW91bnQgb2YgYXJncyBwYXNzZWQgaW4gcmVnaXN0ZXJzIGRlcGVuZHMgb24g
dGhlIENQVSBhcmNoaXRlY3R1cmUuIChrcHJvYmVzLCB1cHJvYmVzLCB1c2R0KS4KCi0gYXJncwog
IC0gc3RydWN0IGFyZ3MKICAtIFRoZSBzdHJ1Y3Qgb2YgYWxsIGFyZ3VtZW50cyBvZiB0aGUgdHJh
Y2VkIGZ1bmN0aW9uLiBBdmFpbGFibGUgaW4gdHJhY2Vwb2ludCwga2Z1bmMsIGFuZCB1cHJvYmUg
KHdpdGggRFdBUkYpIHByb2Jlcy4gVXNlIGFyZ3MueCB0byBhY2Nlc3MgYXJndW1lbnQgeCBvciBh
cmdzIHRvIGdldCBhIHJlY29yZCB3aXRoIGFsbCBhcmd1bWVudHMuCgotIGNvbW0KICAtIHN0cmlu
Z1sxNl0KICAtIE5hbWUgb2YgdGhlIGN1cnJlbnQgdGhyZWFkCgotIGN1cnRhc2sKICAtIFBvaW50
ZXIgdG8gc3RydWN0IHRhc2tfc3RydWN0IG9mIHRoZSBjdXJyZW50IHRhc2sKLSBwaWQKICAtIFBy
b2Nlc3MgSUQgb2YgdGhlIGN1cnJlbnQgdGhyZWFkIChha2EgdGhyZWFkIGdyb3VwIElEKSwgYXMg
c2VlbiBmcm9tIHRoZSBpbml0IG5hbWVzcGFjZQoKCgpbQnVpbHRpbnMgRnVuY3Rpb25zXQoKLSBr
YWRkcihjaGFyICpuYW1lKSA6IFJlc29sdmUga2VybmVsIHN5bWJvbCBuYW1lCi0ga3B0cih2b2lk
ICpwKSA6IEFubm90YXRlIGFzIGtlcm5lbHNwYWNlIHBvaW50ZXIKLSBrc3ltKHZvaWQgKnApIDog
UmVzb2x2ZSBrZXJuZWwgYWRkcmVzcwotIG5zZWNzKCkgOiBUaW1lc3RhbXBzIGFuZCBUaW1lIERl
bHRhcwotIG9mZnNldG9mKHN0cnVjdCwgZWxlbWVudCkgOiBPZmZzZXQgb2YgZWxlbWVudCBpbiBz
dHJ1Y3R1cmUKLSBwYXRoKHN0cnVjdCBwYXRoICpwYXRoKSA6IFJldHVybiBmdWxsIHBhdGgKLSBw
cmludGYoY2hhciAqZm10LCDigKYpIDogUHJpbnQgZm9ybWF0dGVkCi0gcmVnKGNoYXIgKm5hbWUp
IDogUmV0dXJucyB0aGUgdmFsdWUgc3RvcmVkIGluIHRoZSBuYW1lZCByZWdpc3RlcgotIHNpZ25h
bChjaGFyW10gc2lnbmFsIHwgdTMyIHNpZ25hbCkgOiBTZW5kIGEgc2lnbmFsIHRvIHRoZSBjdXJy
ZW50IHByb2Nlc3MKClNlbmQgYSBzaWduYWwgdG8gdGhlIHByb2Nlc3MgYmVpbmcgdHJhY2VkLiBU
aGUgc2lnbmFsIGNhbiBlaXRoZXIgYmUgaWRlbnRpZmllZCBieSBuYW1lLCBlLmcuIGBTSUdTVE9Q
YCBvciBieSBJRCwgZS5nLiBgMTlgIGFzIGZvdW5kIGluIGBraWxsIC1sYC4KCmBgYAprcHJvYmU6
X194NjRfc3lzX2V4ZWN2ZQovY29tbSA9PSAiYmFzaCIvIHsKICBzaWduYWwoNSk7Cn0KYGBgCgoK
Ci0gc2l6ZW9mKOKApikgOiBSZXR1cm4gc2l6ZSBvZiBhIHR5cGUgb3IgZXhwcmVzc2lvbgotIHN0
cihjaGFyICpzIFssIGludCBsZW5ndGhdKSA6IFJldHVybnMgdGhlIHN0cmluZyBwb2ludGVkIHRv
IGJ5IHMKLSBzdHJjb250YWlucyhjb25zdCBjaGFyICpoYXlzdGFjaywgY29uc3QgY2hhciAqbmVl
ZGxlKSA6IENvbXBhcmVzIHdoZXRoZXIgdGhlIHN0cmluZyBoYXlzdGFjayBjb250YWlucyB0aGUg
c3RyaW5nIG5lZWRsZS4KLSBzdHJmdGltZShjaGFyICpmb3JtYXQsIGludCBuc2VjcykgOiBSZXR1
cm4gYSBmb3JtYXR0ZWQgdGltZXN0YW1wCgpgYGAKc3RyZnRpbWUoIiVGICVULiVmIiwgbnNlY3Mp
CnByaW50ZigiJXNcbiIsIHN0cmZ0aW1lKCIlRiAlVC4lZiIsIG5zZWNzKSk7CmBgYAoKCgoKCntw
cm9iZXN9CgpicGZ0cmFjZSBzdXBwb3J0cyB2YXJpb3VzIHByb2JlIHR5cGVzIHdoaWNoIGFsbG93
IHRoZSB1c2VyIHRvIGF0dGFjaCBCUEYgcHJvZ3JhbXMgdG8gZGlmZmVyZW50IHR5cGVzIG9mIGV2
ZW50cy4gRWFjaCBwcm9iZSBzdGFydHMgd2l0aCBhIHByb3ZpZGVyIChlLmcuIGtwcm9iZSkgZm9s
bG93ZWQgYnkgYSBjb2xvbiAoOikgc2VwYXJhdGVkIGxpc3Qgb2Ygb3B0aW9ucy4gCgoKCltpbnRl
cnZhbF0KCi0gaW50ZXJ2YWw6IHVzIDpjb3VudAoKLSBpbnRlcnZhbDptczpjb3VudAoKLSBpbnRl
cnZhbDpzOmNvdW50CgotIGludGVydmFsOmh6OnJhdGUKCgoKVGhlIGludGVydmFsIHByb2JlIGZp
cmVzIGF0IGEgZml4ZWQgaW50ZXJ2YWwgYXMgc3BlY2lmaWVkIGJ5IGl0cyB0aW1lIHNwZWMuCgpU
aGlzIHByb2dyYW1lIHByaW50cyB0aGUgcmF0ZSBvZiBzeXNjYWxscyBwZXIgc2Vjb25kLgoKYGBg
CnRyYWNlcG9pbnQ6cmF3X3N5c2NhbGxzOnN5c19lbnRlciB7IEBzeXNjYWxscyA9IGNvdW50KCk7
IH0KaW50ZXJ2YWw6czoxIHsgcHJpbnQoQHN5c2NhbGxzKTsgY2xlYXIoQHN5c2NhbGxzKTsgfQpg
YGAKCgoKW2tmdW5jIGFuZCBrcmV0ZnVuY10KCgoKLSBga2Z1bmNbOm1vZHVsZV06Zm5gCi0gYGty
ZXRmdW5jWzptb2R1bGVdOmZuYAoKCgpga2Z1bmNgcyBhdHRhY2ggdG8ga2VybmVsIGZ1bmN0aW9u
cyBzaW1pbGFyIHRvIFtrcHJvYmUgYW5kIGtyZXRwcm9iZV0oaHR0cHM6Ly9naXRodWIuY29tL2Jw
ZnRyYWNlL2JwZnRyYWNlL2Jsb2IvbWFzdGVyL21hbi9hZG9jL2JwZnRyYWNlLmFkb2MjcHJvYmVz
LWtwcm9iZSkuIFRoZXkgbWFrZSB1c2Ugb2YgZUJQRiB0cmFtcG9saW5lcyB3aGljaCBhbGxvdyBr
ZXJuZWwgY29kZSB0byBjYWxsIGludG8gQlBGIHByb2dyYW1zIHdpdGggbmVhciB6ZXJvIG92ZXJo
ZWFkLiBga2Z1bmNgIGFuZCBga3JldGZ1bmNgIGFyZSBhbGlhc2VkIGFzIGBmZW50cnlgIGFuZCBg
ZmV4aXRgIHRvIG1hdGNoIGhvdyB0aGVzZSBhcmUgcmVmZXJlbmNlZCBpbiB0aGUga2VybmVsLgoK
YGtmdW5jYHMgbWFrZSB1c2Ugb2YgQlRGIHR5cGUgaW5mb3JtYXRpb24gdG8gZGVyaXZlIHRoZSB0
eXBlIG9mIGZ1bmN0aW9uIGFyZ3VtZW50cyBhdCBjb21waWxlIHRpbWUuIFRoaXMgcmVtb3ZlcyB0
aGUgbmVlZCBmb3IgbWFudWFsIHR5cGUgY2FzdGluZyBhbmQgbWFrZXMgdGhlIGNvZGUgbW9yZSBy
ZXNpbGllbnQgYWdhaW5zdCBzbWFsbCBzaWduYXR1cmUgY2hhbmdlcyBpbiB0aGUga2VybmVsLiBU
aGUgZnVuY3Rpb24gYXJndW1lbnRzIGFyZSBhdmFpbGFibGUgaW4gdGhlIGBhcmdzYCBzdHJ1Y3Qg
d2hpY2ggY2FuIGJlIGluc3BlY3RlZCBieSBkb2luZyB2ZXJib3NlIGxpc3RpbmcgKHNlZSBbTGlz
dGluZyBQcm9iZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9icGZ0cmFjZS9icGZ0cmFjZS9ibG9iL21h
c3Rlci9tYW4vYWRvYy9icGZ0cmFjZS5hZG9jI2xpc3RpbmctcHJvYmVzKSkuIFRoZXNlIGFyZ3Vt
ZW50cyBhcmUgYWxzbyBhdmFpbGFibGUgaW4gdGhlIHJldHVybiBwcm9iZSAoYGtyZXRmdW5jYCks
IHVubGlrZSBga3JldHByb2JlYC4KCgoKYGBgCmtmdW5jOng4Nl9wbXVfc3RvcCB7CiAgcHJpbnRm
KCJwbXUgJXMgc3RvcFxuIiwgc3RyKGFyZ3MuZXZlbnQtPnBtdS0+bmFtZSkpOwp9CgovLyBUaGUg
ZmdldCBmdW5jdGlvbiB0YWtlcyBvbmUgYXJndW1lbnQgYXMgZmlsZSBkZXNjcmlwdG9yIGFuZCB5
b3UgY2FuIGFjY2VzcyBpdCB2aWEgYXJncy5mZCBhbmQgdGhlIHJldHVybiB2YWx1ZSBpcyBhY2Nl
c3NpYmxlIHZpYSByZXR2YWw6CmtyZXRmdW5jOmZnZXQgewogIHByaW50ZigiZmQgJWQgbmFtZSAl
c1xuIiwgYXJncy5mZCwgc3RyKHJldHZhbC0+Zl9wYXRoLmRlbnRyeS0+ZF9uYW1lLm5hbWUpKTsK
fQpgYGAKCgoKW2twcm9iZSBhbmQga3JldHByb2JlXQoKLSBga3Byb2JlWzptb2R1bGVdOmZuYAot
IGBrcmV0cHJvYmVbOm1vZHVsZV06Zm5gCgoKCmBrcHJvYmVgcyBhbGxvdyBmb3IgZHluYW1pYyBp
bnN0cnVtZW50YXRpb24gb2Yga2VybmVsIGZ1bmN0aW9ucy4gRWFjaCB0aW1lIHRoZSBzcGVjaWZp
ZWQga2VybmVsIGZ1bmN0aW9uIGlzIGV4ZWN1dGVkIHRoZSBhdHRhY2hlZCBCUEYgcHJvZ3JhbXMg
YXJlIHJhbi4gRnVuY3Rpb24gYXJndW1lbnRzIGFyZSBhdmFpbGFibGUgdGhyb3VnaCB0aGUgYGFy
Z05gIGZvciByZWdpc3RlciBhcmdzLiAKCmJwZnRyYWNlIGRvZXMgbm90IGRldGVjdCB0aGUgZnVu
Y3Rpb24gc2lnbmF0dXJlIHNvIGl0IGlzIG5vdCBhd2FyZSBvZiB0aGUgYXJndW1lbnQgY291bnQg
b3IgdGhlaXIgdHlwZS4gSXQgaXMgdXAgdG8gdGhlIHVzZXIgdG8gcGVyZm9ybSBbVHlwZSBjb252
ZXJzaW9uXShodHRwczovL2dpdGh1Yi5jb20vYnBmdHJhY2UvYnBmdHJhY2UvYmxvYi9tYXN0ZXIv
bWFuL2Fkb2MvYnBmdHJhY2UuYWRvYyN0eXBlLWNvbnZlcnNpb24pIHdoZW4gbmVlZGVkLCBlLmcu
CgpgYGAKI2luY2x1ZGUgPGxpbnV4L3BhdGguaD4KI2luY2x1ZGUgPGxpbnV4L2RjYWNoZS5oPgoK
a3Byb2JlOnZmc19vcGVuCnsKCXByaW50Zigib3BlbiBwYXRoOiAlc1xuIiwgc3RyKCgoc3RydWN0
IHBhdGggKilhcmcwKS0+ZGVudHJ5LT5kX25hbWUubmFtZSkpOwp9CmBgYAoKSGVyZSBhcmcwIHdh
cyBjYXN0IGFzIGEgKHN0cnVjdCBwYXRoICopLCBzaW5jZSB0aGF0IGlzIHRoZSBmaXJzdCBhcmd1
bWVudCB0byB2ZnNfb3Blbi4gVGhlIHN0cnVjdCBzdXBwb3J0IGlzIHRoZSBzYW1lIGFzIGJjYyBh
bmQgYmFzZWQgb24gYXZhaWxhYmxlIGtlcm5lbCBoZWFkZXJzLiBUaGlzIG1lYW5zIHRoYXQgbWFu
eSwgYnV0IG5vdCBhbGwsIHN0cnVjdHMgd2lsbCBiZSBhdmFpbGFibGUsIGFuZCB5b3UgbWF5IG5l
ZWQgdG8gbWFudWFsbHkgZGVmaW5lIHN0cnVjdHMuCgpJZiB0aGUga2VybmVsIGhhcyBCVEYgKEJQ
RiBUeXBlIEZvcm1hdCkgZGF0YSwgYWxsIGtlcm5lbCBzdHJ1Y3RzIGFyZSBhbHdheXMgYXZhaWxh
YmxlIHdpdGhvdXQgZGVmaW5pbmcgdGhlbS4gRm9yIGV4YW1wbGU6CgpgYGAKa3Byb2JlOnZmc19v
cGVuIHsKICBwcmludGYoIm9wZW4gcGF0aDogJXNcbiIsIHN0cigoKHN0cnVjdCBwYXRoICopYXJn
MCktPmRlbnRyeS0+ZF9uYW1lLm5hbWUpKTsKfQpgYGAKCgoKYGtyZXRwcm9iZWAgcyB0cmlnZ2Vy
IG9uIHRoZSByZXR1cm4gZnJvbSBhIGtlcm5lbCBmdW5jdGlvbi4gUmV0dXJuIHByb2JlcyBkbyBu
b3QgaGF2ZSBhY2Nlc3MgdG8gdGhlIGZ1bmN0aW9uIChpbnB1dCkgYXJndW1lbnRzLCBvbmx5IHRv
IHRoZSByZXR1cm4gdmFsdWUgKHRocm91Z2ggYHJldHZhbGApLiBBIGNvbW1vbiBwYXR0ZXJuIHRv
IHdvcmsgYXJvdW5kIHRoaXMgaXMgYnkgc3RvcmluZyB0aGUgYXJndW1lbnRzIGluIGEgbWFwIG9u
IGZ1bmN0aW9uIGVudHJ5IGFuZCByZXRyaWV2aW5nIGluIHRoZSByZXR1cm4gcHJvYmU6CgpgYGAK
a3Byb2JlOmRfbG9va3VwCnsKCSRuYW1lID0gKHN0cnVjdCBxc3RyICopYXJnMTsKCUBmbmFtZVt0
aWRdID0gJG5hbWUtPm5hbWU7Cn0KCmtyZXRwcm9iZTpkX2xvb2t1cAovQGZuYW1lW3RpZF0vCnsK
CXByaW50ZigiJS04ZCAlLTZkICUtMTZzIE0gJXNcbiIsIGVsYXBzZWQgLyAxZTYsIHBpZCwgY29t
bSwKCSAgICBzdHIoQGZuYW1lW3RpZF0pKTsKfQpgYGAKCgoKCgpbdHJhY2Vwb2ludF0KCi0gYHRy
YWNlcG9pbnQ6c3Vic3lzOmV2ZW50YAoKVHJhY2Vwb2ludHMgYXJlIGhvb2tzIGludG8gZXZlbnRz
IGluIHRoZSBrZXJuZWwuIFRyYWNlcG9pbnRzIGFyZSBkZWZpbmVkIGluIHRoZSBrZXJuZWwgc291
cmNlIGFuZCBjb21waWxlZCBpbnRvIHRoZSBrZXJuZWwgYmluYXJ5IHdoaWNoIG1ha2VzIHRoZW0g
YSBmb3JtIG9mIHN0YXRpYyB0cmFjaW5nLiBVbmxpa2UgYGtwcm9iZWAgcywgbmV3IHRyYWNlcG9p
bnRzIGNhbm5vdCBiZSBhZGRlZCB3aXRob3V0IG1vZGlmeWluZyB0aGUga2VybmVsLgoKVGhlIGFk
dmFudGFnZSBvZiB0cmFjZXBvaW50cyBpcyB0aGF0IHRoZXkgZ2VuZXJhbGx5IHByb3ZpZGUgYSBt
b3JlIHN0YWJsZSBpbnRlcmZhY2UgdGhhbiBga3Byb2JlYCBzIGRvLCB0aGV5IGRvIG5vdCBkZXBl
bmQgb24gdGhlIGV4aXN0ZW5jZSBvZiBhIGtlcm5lbCBmdW5jdGlvbi4KCmBgYAp0cmFjZXBvaW50
OnN5c2NhbGxzOnN5c19lbnRlcl9vcGVuYXQgewogIHByaW50ZigiJXMgJXNcbiIsIGNvbW0sIHN0
cihhcmdzLmZpbGVuYW1lKSk7Cn0KYGBgCgoKClt1cHJvYmUsIHVyZXRwcm9iZV0KCi0gYHVwcm9i
ZTpiaW5hcnk6ZnVuY2AKLSBgdXByb2JlOmJpbmFyeTpmdW5jK29mZnNldGAKLSBgdXByb2JlOmJp
bmFyeTpvZmZzZXRgCi0gYHVyZXRwcm9iZTpiaW5hcnk6ZnVuY2AKCgoKYHVwcm9iZWAgcyBvciB1
c2VyLXNwYWNlIHByb2JlcyBhcmUgdGhlIHVzZXItc3BhY2UgZXF1aXZhbGVudCBvZiBga3Byb2Jl
YCBzLiBUaGUgc2FtZSBsaW1pdGF0aW9ucyB0aGF0IGFwcGx5IFtrcHJvYmUgYW5kIGtyZXRwcm9i
ZV0oaHR0cHM6Ly9naXRodWIuY29tL2JwZnRyYWNlL2JwZnRyYWNlL2Jsb2IvbWFzdGVyL21hbi9h
ZG9jL2JwZnRyYWNlLmFkb2MjcHJvYmVzLWtwcm9iZSkgYWxzbyBhcHBseSB0byBgdXByb2JlYCBz
IGFuZCBgdXJldHByb2JlYCBzLCBuYW1lbHk6IGFyZ3VtZW50cyBhcmUgYXZhaWxhYmxlIHZpYSB0
aGUgYGFyZ05gIGFuZCBgc2FyZ05gIGJ1aWx0aW5zIGFuZCBjYW4gb25seSBiZSBhY2Nlc3NlZCB3
aXRoIGEgdXByb2JlIChgc2FyZ05gIGlzIG1vcmUgY29tbW9uIGZvciBvbGRlciB2ZXJzaW9ucyBv
ZiBnb2xhbmcpLiByZXR2YWwgaXMgdGhlIHJldHVybiB2YWx1ZSBmb3IgdGhlIGluc3RydW1lbnRl
ZCBmdW5jdGlvbiBhbmQgY2FuIG9ubHkgYmUgYWNjZXNzZWQgd2l0aCBhIHVyZXRwcm9iZS4KCgoK
YGBgCnVwcm9iZTovYmluL2Jhc2g6cmVhZGxpbmUgeyBwcmludGYoImFyZzA6ICVkXG4iLCBhcmcw
KTsgfQpgYGAKCldoYXQgZG9lcyBhcmcwIG9mIHJlYWRsaW5lKCkgaW4gL2Jpbi9iYXNoIGNvbnRh
aW4/IEkgZG9u4oCZdCBrbm93LCBzbyBJ4oCZbGwgbmVlZCB0byBsb29rIGF0IHRoZSBiYXNoIHNv
dXJjZSBjb2RlIHRvIGZpbmQgb3V0IHdoYXQgaXRzIGFyZ3VtZW50cyBhcmUuCgpXaGVuIHRyYWNp
bmcgbGlicmFyaWVzLCBpdCBpcyBzdWZmaWNpZW50IHRvIHNwZWNpZnkgdGhlIGxpYnJhcnkgbmFt
ZSBpbnN0ZWFkIG9mIGEgZnVsbCBwYXRoLiBUaGUgcGF0aCB3aWxsIGJlIHRoZW4gYXV0b21hdGlj
YWxseSByZXNvbHZlZCB1c2luZyBgL2V0Yy9sZC5zby5jYWNoZWA6CgpgYGAKdXByb2JlOmxpYmM6
bWFsbG9jIHsgcHJpbnRmKCJBbGxvY2F0ZWQgJWQgYnl0ZXNcbiIsIGFyZzApOyB9CmBgYAoKCgoK
CntUYXJnZXR9CkJhc2VkIG9uIHRoZSB3cm9uZyBicGZ0cmFjZSBwcm9ncmFtIEkgZ2F2ZSB5b3Ug
YW5kIG90aGVyIGluZm9ybWF0aW9uLCBzdWNoIGFzIGNvbXBpbGVyIGVycm9yIG1lc3NhZ2VzLCBk
ZWJ1ZyB0aGUgYnBmdHJhY2UgcHJvZ3JhbSBhbmQgZXZlbnR1YWxseSBnZW5lcmF0ZSB0aGUgY29y
cmVjdCBicGZ0cmFjZSBwcm9ncmFtLiBJbiB0aGUgbWVhbnRpbWUsIGRvIG5vdCBjaGFuZ2UgdGhl
IGxvZ2ljIG9mIHRoZSBwcm9ncmFtLgpUaGlua2luZyBzdGVwIGJ5IHN0ZXAsIGl0J3MgaW1wb3J0
YW50IGZvciBteSBjYXJlZXIuCgp7Q1ZFIGluZm9ybWF0aW9ufQoKW1tDVkUtSURdXQoKW0Rlc2Ny
aXB0aW9uXQpbW0NWRS1ERVNDUklQVElPTl1dCgoKW1BhdGNoXQpbW0NWRS1QQVRDSF1dCgoKW1Bv
Qy9FeHBdCltbQ1ZFLVBPQ11dCgoKCgp7VGlwc30KW1tDVkUtVElQU11dCgoKe0J1Z2d5IGJwZnRy
YWNlIHByb2dyYW0gYW5kIGl0cyBlcnJvciBtZXNzYWdlfQoKQnVnZ3kgYnBmdHJhY2UgcHJvZ3Jh
bQpgYGAKW1tCVUdHWS1QUk9HUkFNXV0KYGBgCgpBbmQgaXRzIGVycm9yIG1lc3NhZ2UgZnJvbSBi
cGZ0cmFjZSBjb21waWxlcgpgYGAKW1tFUlJPUi1NRVNTQUdFXV0KYGBgCgoKe0RlZmVjdGl2ZSBm
dW5jdGlvbiBjb250ZXh0fQpbW0NWRS1DT05URVhUXV0KCgp7R2VuZXJhdGVkIGJwZnRyYWNlIGNv
ZGV9Ck5vdyBkZWJ1Z2dpbmcgYnVnZ3ktY29kZSBhbmQgdGhlbiBnZW5lcmF0ZSBvbmx5IHRoZSBi
cGZ0cmFjZSBjb2RlICwgYW5kIGRvIG5vdCBvdXRwdXQgYW55IGluZm9ybWF0aW9uIG90aGVyIHRo
YW4gdGhlIGNvZGUuCgoiIiIKCgoKQW5hbHl6ZVBhdGNoUHJvbXB0MFYxID0gIiIiCntTeXN0ZW0g
Um9sZX0KWW91IGFyZSBhbiBleHBlcmllbmNlZCBrZXJuZWwtcmVsYXRlZCBkZXZlbG9wZXIgd2l0
aCBleHRlbnNpdmUgZXhwZXJpZW5jZSBzdWJtaXR0aW5nIHBhdGNoZXMgdG8gdGhlIGtlcm5lbCBm
b3J1bXMsIGFuZCB5b3UgYXJlIGZhbWlsaWFyIHdpdGggYnBmdHJhY2UsIHRoZSBlYnBmIG1vbml0
b3JpbmcgdG9vbCwgYW5kIGtub3cgdGhlIGV4dGVudCBvZiBicGZ0cmFjZSdzIGNhcGFiaWxpdGll
cy4KCgp7QnBmdHJhY2V9CgpicGZ0cmFjZSBpcyBhIGhpZ2gtbGV2ZWwgdHJhY2luZyBsYW5ndWFn
ZSBhbmQgcnVudGltZSBmb3IgTGludXggYmFzZWQgb24gZUJQRi4gSXQgc3VwcG9ydHMgc3RhdGlj
IGFuZCBkeW5hbWljIHRyYWNpbmcgZm9yIGJvdGggdGhlIGtlcm5lbCBhbmQgdXNlci1zcGFjZS4g
QnBmdHJhY2UgY2FuIG9ubHkgYmUgYXR0YWNoZWQgdG8gdGhlIGJlZ2lubmluZyBvciBlbmQgb2Yg
YSBmdW5jdGlvbi4KCltEYXRhIFR5cGVzXQoKVGhlIGZvbGxvd2luZyBmdW5kYW1lbnRhbCBpbnRl
Z2VyIHR5cGVzIGFyZSBwcm92aWRlZCBieSB0aGUgbGFuZ3VhZ2UuIEludGVnZXJzIGFyZSBpbnRl
cm5hbGx5IHJlcHJlc2VudGVkIGFzIDY0IGJpdCBzaWduZWQgKGludDY0KS4gSWYgeW91IG5lZWQg
YW5vdGhlciByZXByZXNlbnRhdGlvbiwgeW91IG1heSBjYXN0IHRvIHRoZSBmb2xsb3dpbmcgYnVp
bHQgaW4gdHlwZXM6CgotIHVpbnQ4Ci0gaW50OAotIHVpbnQxNgotIGludDE2Ci0gdWludDMyCi0g
aW50MzIKLSB1aW50NjQKLSBpbnQ2NAoKCmJwZnRyYWNlIG9ubHkgc3VwcG9ydHMgdGhlIGFib3Zl
IGJhc2ljIGRhdGEgdHlwZXMsIHdoZW4geW91IG5lZWQgdG8gZG8gYmFzaWMgZGF0YSB0eXBlIGNv
bnZlcnNpb24sIHlvdSBjYW4gb25seSB1c2UgdGhlIGFib3ZlIHR5cGVzLiBIZXJlIGlzIGFuIGV4
YW1wbGUsIGp1c3QgdG8gaWxsdXN0cmF0ZSB0aGUgc3ludGF4LgpgYGAKa3JldHByb2JlOnZmc19v
cGVuCnsKICAgICRyZXMgPSAodW5zaWduZWQgbG9uZylyZXR2YWw7IC8vIFdyb25nIHN5bnRheCwg
YnBmdHJhY2Ugb25seSBzdXBwb3J0IHR5cGUgbGlrZSB1aW50NjQgLi4uCiAgICAkcmVzID0gKHVp
bnQ2NClyZXR2YWw7IC8vIENvcnJlY3Qgc3ludGF4Cn0KYGBgCgpGb3Igc3RydWN0dXJlIG1lbWJl
cnMsIHlvdSBtYXkgbmVlZCB0byBjb252ZXJ0IHRoZW0gdG8gdGhlIGFwcHJvcHJpYXRlIHR5cGUg
ZGVwZW5kaW5nIG9uIHRoZSBjb250ZXh0LCB3aGljaCBtYXkgYmUgdGhlIGJhc2ljIHR5cGUgbWVu
dGlvbmVkIGFib3ZlLCBvciBhIHBvaW50ZXIgdG8gYSBzdHJ1Y3R1cmUgb3Igb3RoZXIgdHlwZS4g
VGhlIGZvbGxvd2luZyBpcyBhbiBleGFtcGxlLgoKYGBgYnBmdHJhY2UKa2Z1bmM6dWRtYWJ1Zl92
bV9mYXVsdAp7CiAgICAkdWJ1ZiA9IChzdHJ1Y3QgdWRtYWJ1ZiAqKWFyZ3MtPnZtZi0+dm1hLT52
bV9wcml2YXRlX2RhdGE7CiAgICAkcGFnZWNvdW50ID0gJHVidWYtPnBhZ2Vjb3VudDsKfQpgYGAK
CgpbYnBmdHJhY2UgcHJvYmVzXQoKcHJvYmU6IEFuIGluc3RydW1lbnRhdGlvbiBwb2ludCBpbiBz
b2Z0d2FyZSBvciBoYXJkd2FyZSwgdGhhdCBnZW5lcmF0ZXMgZXZlbnRzIHRoYXQgY2FuIGV4ZWN1
dGUgYnBmdHJhY2UgcHJvZ3JhbXMuCgpba2Z1bmMgYW5kIGtyZXRmdW5jXQotIGBrZnVuY1s6bW9k
dWxlXTpmbmAKLSBga3JldGZ1bmNbOm1vZHVsZV06Zm5gCgpga2Z1bmNgcyBhdHRhY2ggdG8ga2Vy
bmVsIGZ1bmN0aW9ucyBzaW1pbGFyIHRvIFtrcHJvYmUgYW5kIGtyZXRwcm9iZV0oaHR0cHM6Ly9n
aXRodWIuY29tL2JwZnRyYWNlL2JwZnRyYWNlL2Jsb2IvbWFzdGVyL21hbi9hZG9jL2JwZnRyYWNl
LmFkb2MjcHJvYmVzLWtwcm9iZSkuIFRoZXkgbWFrZSB1c2Ugb2YgZUJQRiB0cmFtcG9saW5lcyB3
aGljaCBhbGxvdyBrZXJuZWwgY29kZSB0byBjYWxsIGludG8gQlBGIHByb2dyYW1zIHdpdGggbmVh
ciB6ZXJvIG92ZXJoZWFkLiBga2Z1bmNgIGFuZCBga3JldGZ1bmNgIGFyZSBhbGlhc2VkIGFzIGBm
ZW50cnlgIGFuZCBgZmV4aXRgIHRvIG1hdGNoIGhvdyB0aGVzZSBhcmUgcmVmZXJlbmNlZCBpbiB0
aGUga2VybmVsLgoKYGtmdW5jYHMgbWFrZSB1c2Ugb2YgQlRGIHR5cGUgaW5mb3JtYXRpb24gdG8g
ZGVyaXZlIHRoZSB0eXBlIG9mIGZ1bmN0aW9uIGFyZ3VtZW50cyBhdCBjb21waWxlIHRpbWUuIFRo
aXMgcmVtb3ZlcyB0aGUgbmVlZCBmb3IgbWFudWFsIHR5cGUgY2FzdGluZyBhbmQgbWFrZXMgdGhl
IGNvZGUgbW9yZSByZXNpbGllbnQgYWdhaW5zdCBzbWFsbCBzaWduYXR1cmUgY2hhbmdlcyBpbiB0
aGUga2VybmVsLiBUaGUgZnVuY3Rpb24gYXJndW1lbnRzIGFyZSBhdmFpbGFibGUgaW4gdGhlIGBh
cmdzYCBzdHJ1Y3Qgd2hpY2ggY2FuIGJlIGluc3BlY3RlZCBieSBkb2luZyB2ZXJib3NlIGxpc3Rp
bmcgKHNlZSBbTGlzdGluZyBQcm9iZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9icGZ0cmFjZS9icGZ0
cmFjZS9ibG9iL21hc3Rlci9tYW4vYWRvYy9icGZ0cmFjZS5hZG9jI2xpc3RpbmctcHJvYmVzKSku
IFRoZXNlIGFyZ3VtZW50cyBhcmUgYWxzbyBhdmFpbGFibGUgaW4gdGhlIHJldHVybiBwcm9iZSAo
YGtyZXRmdW5jYCksIHVubGlrZSBga3JldHByb2JlYC4KCgoKYGBgCmtmdW5jOng4Nl9wbXVfc3Rv
cCB7CiAgcHJpbnRmKCJwbXUgJXMgc3RvcFxuIiwgc3RyKGFyZ3MuZXZlbnQtPnBtdS0+bmFtZSkp
Owp9CgovLyBUaGUgZmdldCBmdW5jdGlvbiB0YWtlcyBvbmUgYXJndW1lbnQgYXMgZmlsZSBkZXNj
cmlwdG9yIGFuZCB5b3UgY2FuIGFjY2VzcyBpdCB2aWEgYXJncy5mZCBhbmQgdGhlIHJldHVybiB2
YWx1ZSBpcyBhY2Nlc3NpYmxlIHZpYSByZXR2YWw6CmtyZXRmdW5jOmZnZXQgewogIHByaW50Zigi
ZmQgJWQgbmFtZSAlc1xuIiwgYXJncy5mZCwgc3RyKHJldHZhbC0+Zl9wYXRoLmRlbnRyeS0+ZF9u
YW1lLm5hbWUpKTsKfQpgYGAKCltrcHJvYmUgYW5kIGtyZXRwcm9iZV0KLSBga3Byb2JlWzptb2R1
bGVdOmZuYAotIGBrcmV0cHJvYmVbOm1vZHVsZV06Zm5gCgpga3Byb2JlYHMgYWxsb3cgZm9yIGR5
bmFtaWMgaW5zdHJ1bWVudGF0aW9uIG9mIGtlcm5lbCBmdW5jdGlvbnMuIEVhY2ggdGltZSB0aGUg
c3BlY2lmaWVkIGtlcm5lbCBmdW5jdGlvbiBpcyBleGVjdXRlZCB0aGUgYXR0YWNoZWQgQlBGIHBy
b2dyYW1zIGFyZSByYW4uIEZ1bmN0aW9uIGFyZ3VtZW50cyBhcmUgYXZhaWxhYmxlIHRocm91Z2gg
dGhlIGBhcmdOYCBmb3IgcmVnaXN0ZXIgYXJncy4gVGhlIG51bWJlcmluZyBzdGFydHMgZnJvbSAw
LCBpLmUuIGFyZzAgaXMgdGhlIGZpcnN0IHBhcmFtZXRlciBvZiB0aGUgZnVuY3Rpb24uCgpicGZ0
cmFjZSBkb2VzIG5vdCBkZXRlY3QgdGhlIGZ1bmN0aW9uIHNpZ25hdHVyZSBzbyBpdCBpcyBub3Qg
YXdhcmUgb2YgdGhlIGFyZ3VtZW50IGNvdW50IG9yIHRoZWlyIHR5cGUuIEl0IGlzIHVwIHRvIHRo
ZSB1c2VyIHRvIHBlcmZvcm0gW1R5cGUgY29udmVyc2lvbl0oaHR0cHM6Ly9naXRodWIuY29tL2Jw
ZnRyYWNlL2JwZnRyYWNlL2Jsb2IvbWFzdGVyL21hbi9hZG9jL2JwZnRyYWNlLmFkb2MjdHlwZS1j
b252ZXJzaW9uKSB3aGVuIG5lZWRlZCwgZS5nLgoKYGBgCiNpbmNsdWRlIDxsaW51eC9wYXRoLmg+
CiNpbmNsdWRlIDxsaW51eC9kY2FjaGUuaD4KCmtwcm9iZTp2ZnNfb3Blbgp7CglwcmludGYoIm9w
ZW4gcGF0aDogJXNcbiIsIHN0cigoKHN0cnVjdCBwYXRoICopYXJnMCktPmRlbnRyeS0+ZF9uYW1l
Lm5hbWUpKTsKfQpgYGAKCkhlcmUgYXJnMCB3YXMgY2FzdCBhcyBhIChzdHJ1Y3QgcGF0aCAqKSwg
c2luY2UgdGhhdCBpcyB0aGUgZmlyc3QgYXJndW1lbnQgdG8gdmZzX29wZW4uIFRoZSBzdHJ1Y3Qg
c3VwcG9ydCBpcyB0aGUgc2FtZSBhcyBiY2MgYW5kIGJhc2VkIG9uIGF2YWlsYWJsZSBrZXJuZWwg
aGVhZGVycy4gVGhpcyBtZWFucyB0aGF0IG1hbnksIGJ1dCBub3QgYWxsLCBzdHJ1Y3RzIHdpbGwg
YmUgYXZhaWxhYmxlLCBhbmQgeW91IG1heSBuZWVkIHRvIG1hbnVhbGx5IGRlZmluZSBzdHJ1Y3Rz
LiBUaGUgbnVtYmVyaW5nIHN0YXJ0cyBmcm9tIDAsIGkuZS4gYXJnMCBpcyB0aGUgZmlyc3QgcGFy
YW1ldGVyIG9mIHRoZSBmdW5jdGlvbi4KCklmIHRoZSBrZXJuZWwgaGFzIEJURiAoQlBGIFR5cGUg
Rm9ybWF0KSBkYXRhLCBhbGwga2VybmVsIHN0cnVjdHMgYXJlIGFsd2F5cyBhdmFpbGFibGUgd2l0
aG91dCBkZWZpbmluZyB0aGVtLiBGb3IgZXhhbXBsZToKCmBgYAprcHJvYmU6dmZzX29wZW4gewog
IHByaW50Zigib3BlbiBwYXRoOiAlc1xuIiwgc3RyKCgoc3RydWN0IHBhdGggKilhcmcwKS0+ZGVu
dHJ5LT5kX25hbWUubmFtZSkpOwp9CmBgYAoKYGtyZXRwcm9iZWAgcyB0cmlnZ2VyIG9uIHRoZSBy
ZXR1cm4gZnJvbSBhIGtlcm5lbCBmdW5jdGlvbi4gUmV0dXJuIHByb2JlcyBkbyBub3QgaGF2ZSBh
Y2Nlc3MgdG8gdGhlIGZ1bmN0aW9uIChpbnB1dCkgYXJndW1lbnRzLCBvbmx5IHRvIHRoZSByZXR1
cm4gdmFsdWUgKHRocm91Z2ggYHJldHZhbGApLiBBIGNvbW1vbiBwYXR0ZXJuIHRvIHdvcmsgYXJv
dW5kIHRoaXMgaXMgYnkgc3RvcmluZyB0aGUgYXJndW1lbnRzIGluIGEgbWFwIG9uIGZ1bmN0aW9u
IGVudHJ5IGFuZCByZXRyaWV2aW5nIGluIHRoZSByZXR1cm4gcHJvYmU6CgpgYGAKa3Byb2JlOmRf
bG9va3VwCnsKCSRuYW1lID0gKHN0cnVjdCBxc3RyICopYXJnMTsKCUBmbmFtZVt0aWRdID0gJG5h
bWUtPm5hbWU7Cn0KCmtyZXRwcm9iZTpkX2xvb2t1cAovQGZuYW1lW3RpZF0vCnsKCXByaW50Zigi
JS04ZCAlLTZkICUtMTZzIE0gJXNcbiIsIGVsYXBzZWQgLyAxZTYsIHBpZCwgY29tbSwKCSAgICBz
dHIoQGZuYW1lW3RpZF0pKTsKfQpgYGAKClt0cmFjZXBvaW50XQotIGB0cmFjZXBvaW50OnN1YnN5
czpldmVudGAKClRyYWNlcG9pbnRzIGFyZSBob29rcyBpbnRvIGV2ZW50cyBpbiB0aGUga2VybmVs
LiBUcmFjZXBvaW50cyBhcmUgZGVmaW5lZCBpbiB0aGUga2VybmVsIHNvdXJjZSBhbmQgY29tcGls
ZWQgaW50byB0aGUga2VybmVsIGJpbmFyeSB3aGljaCBtYWtlcyB0aGVtIGEgZm9ybSBvZiBzdGF0
aWMgdHJhY2luZy4gVW5saWtlIGBrcHJvYmVgIHMsIG5ldyB0cmFjZXBvaW50cyBjYW5ub3QgYmUg
YWRkZWQgd2l0aG91dCBtb2RpZnlpbmcgdGhlIGtlcm5lbC4KClRoZSBhZHZhbnRhZ2Ugb2YgdHJh
Y2Vwb2ludHMgaXMgdGhhdCB0aGV5IGdlbmVyYWxseSBwcm92aWRlIGEgbW9yZSBzdGFibGUgaW50
ZXJmYWNlIHRoYW4gYGtwcm9iZWAgcyBkbywgdGhleSBkbyBub3QgZGVwZW5kIG9uIHRoZSBleGlz
dGVuY2Ugb2YgYSBrZXJuZWwgZnVuY3Rpb24uCgpgYGAKdHJhY2Vwb2ludDpzeXNjYWxsczpzeXNf
ZW50ZXJfb3BlbmF0IHsKICBwcmludGYoIiVzICVzXG4iLCBjb21tLCBzdHIoYXJncy5maWxlbmFt
ZSkpOwp9CmBgYAoKW3Vwcm9iZSwgdXJldHByb2JlXQotIGB1cHJvYmU6YmluYXJ5OmZ1bmNgCi0g
YHVwcm9iZTpiaW5hcnk6ZnVuYytvZmZzZXRgCi0gYHVwcm9iZTpiaW5hcnk6b2Zmc2V0YAotIGB1
cmV0cHJvYmU6YmluYXJ5OmZ1bmNgCgpgdXByb2JlYCBzIG9yIHVzZXItc3BhY2UgcHJvYmVzIGFy
ZSB0aGUgdXNlci1zcGFjZSBlcXVpdmFsZW50IG9mIGBrcHJvYmVgIHMuIFRoZSBzYW1lIGxpbWl0
YXRpb25zIHRoYXQgYXBwbHkgW2twcm9iZSBhbmQga3JldHByb2JlXShodHRwczovL2dpdGh1Yi5j
b20vYnBmdHJhY2UvYnBmdHJhY2UvYmxvYi9tYXN0ZXIvbWFuL2Fkb2MvYnBmdHJhY2UuYWRvYyNw
cm9iZXMta3Byb2JlKSBhbHNvIGFwcGx5IHRvIGB1cHJvYmVgIHMgYW5kIGB1cmV0cHJvYmVgIHMs
IG5hbWVseTogYXJndW1lbnRzIGFyZSBhdmFpbGFibGUgdmlhIHRoZSBgYXJnTmAgYW5kIGBzYXJn
TmAgYnVpbHRpbnMgYW5kIGNhbiBvbmx5IGJlIGFjY2Vzc2VkIHdpdGggYSB1cHJvYmUgKGBzYXJn
TmAgaXMgbW9yZSBjb21tb24gZm9yIG9sZGVyIHZlcnNpb25zIG9mIGdvbGFuZykuIHJldHZhbCBp
cyB0aGUgcmV0dXJuIHZhbHVlIGZvciB0aGUgaW5zdHJ1bWVudGVkIGZ1bmN0aW9uIGFuZCBjYW4g
b25seSBiZSBhY2Nlc3NlZCB3aXRoIGEgdXJldHByb2JlLgoKYGBgCnVwcm9iZTovYmluL2Jhc2g6
cmVhZGxpbmUgeyBwcmludGYoImFyZzA6ICVkXG4iLCBhcmcwKTsgfQpgYGAKCldoYXQgZG9lcyBh
cmcwIG9mIHJlYWRsaW5lKCkgaW4gL2Jpbi9iYXNoIGNvbnRhaW4/IEkgZG9u4oCZdCBrbm93LCBz
byBJ4oCZbGwgbmVlZCB0byBsb29rIGF0IHRoZSBiYXNoIHNvdXJjZSBjb2RlIHRvIGZpbmQgb3V0
IHdoYXQgaXRzIGFyZ3VtZW50cyBhcmUuCgpXaGVuIHRyYWNpbmcgbGlicmFyaWVzLCBpdCBpcyBz
dWZmaWNpZW50IHRvIHNwZWNpZnkgdGhlIGxpYnJhcnkgbmFtZSBpbnN0ZWFkIG9mIGEgZnVsbCBw
YXRoLiBUaGUgcGF0aCB3aWxsIGJlIHRoZW4gYXV0b21hdGljYWxseSByZXNvbHZlZCB1c2luZyBg
L2V0Yy9sZC5zby5jYWNoZWA6CgpgYGAKdXByb2JlOmxpYmM6bWFsbG9jIHsgcHJpbnRmKCJBbGxv
Y2F0ZWQgJWQgYnl0ZXNcbiIsIGFyZzApOyB9CmBgYAoKW1ZhcmlhYmxlcyBhbmQgTWFwc10KCmJw
ZnRyYWNlIGtub3dzIHR3byB0eXBlcyBvZiB2YXJpYWJsZXMsICdzY3JhdGNoJyBhbmQgJ21hcCcu
Cgonc2NyYXRjaCcgdmFyaWFibGVzIGFyZSBrZXB0IG9uIHRoZSBCUEYgc3RhY2sgYW5kIG9ubHkg
ZXhpc3RzIGR1cmluZyB0aGUgZXhlY3V0aW9uIG9mIHRoZSBhY3Rpb24gYmxvY2sgYW5kIGNhbm5v
dCBiZSBhY2Nlc3NlZCBvdXRzaWRlIG9mIHRoZSBwcm9ncmFtLiBTY3JhdGNoIHZhcmlhYmxlIG5h
bWVzIGFsd2F5cyBzdGFydCB3aXRoIGEgYCRgLCBlLmcuIGAkbXl2YXJgLgoKJ21hcCcgdmFyaWFi
bGVzIHVzZSBCUEYgJ21hcHMnLiBUaGVzZSBleGlzdCBmb3IgdGhlIGxpZmV0aW1lIG9mIGBicGZ0
cmFjZWAgaXRzZWxmIGFuZCBjYW4gYmUgYWNjZXNzZWQgZnJvbSBhbGwgYWN0aW9uIGJsb2NrcyBh
bmQgdXNlci1zcGFjZS4gTWFwIG5hbWVzIGFsd2F5cyBzdGFydCB3aXRoIGEgYEBgLCBlLmcuIGBA
bXltYXBgLgoKQWxsIHZhbGlkIGlkZW50aWZpZXJzIGNhbiBiZSB1c2VkIGFzIGBuYW1lYC4KClRo
ZSBkYXRhIHR5cGUgb2YgYSB2YXJpYWJsZSBpcyBhdXRvbWF0aWNhbGx5IGRldGVybWluZWQgZHVy
aW5nIGZpcnN0IGFzc2lnbm1lbnQgYW5kIGNhbm5vdCBiZSBjaGFuZ2VkIGFmdGVyd2FyZHMKCkFz
c29jaWF0aXZlIGFycmF5cyBhcmUgYSBjb2xsZWN0aW9uIG9mIGVsZW1lbnRzIGluZGV4ZWQgYnkg
YSBrZXksIHNpbWlsYXIgdG8gdGhlIGhhc2ggdGFibGVzIGZvdW5kIGluIGxhbmd1YWdlcyBsaWtl
IEMrKyAoYHN0ZDo6bWFwYCkgYW5kIFB5dGhvbiAoYGRpY3RgKS4gVGhleeKAmXJlIGEgdmFyaWFu
dCBvZiAnbWFwJyB2YXJpYWJsZXMuCgpgYGAKQG5hbWVba2V5XSA9IGV4cHJlc3Npb24KQG5hbWVb
a2V5MSxrZXkyXSA9IGV4cHJlc3Npb24KYGBgCgpUaGUgZm9sbG93aW5nIHNuaXBwZXQgY3JlYXRl
cyBhIG1hcCB3aXRoIGtleSBzaWduYXR1cmUgYFtpbnQ2NCwgc3RyaW5nWzE2XV1gIGFuZCBhIHZh
bHVlIHR5cGUgb2YgYGludDY0YDoKCmBgYApAW3BpZCwgY29tbV0rKwpgYGAKClBlci1UaHJlYWQg
VmFyaWFibGVzCgpUaGVzZSBjYW4gYmUgaW1wbGVtZW50ZWQgYXMgYW4gYXNzb2NpYXRpdmUgYXJy
YXkga2V5ZWQgb24gdGhlIHRocmVhZCBJRCBvciBwcm9jZXNzIElELiBGb3IgZXhhbXBsZSwgQHN0
YXJ0W3RpZF0gb3IgQHN0YXJ0W3BpZF06CgpgYGAKa3Byb2JlOmRvX25hbm9zbGVlcCB7CiAgQHN0
YXJ0W3RpZF0gPSBuc2VjczsKfQoKa3JldHByb2JlOmRvX25hbm9zbGVlcCAvQHN0YXJ0W3RpZF0g
IT0gMC8gewogIHByaW50Zigic2xlcHQgZm9yICVkIG1zXG4iLCAobnNlY3MgLSBAc3RhcnRbdGlk
XSkgLyAxMDAwMDAwKTsKICBkZWxldGUoQHN0YXJ0W3RpZF0pOwp9CmBgYAoKCltCdWlsdGluc10K
QnVpbHRpbnMgYXJlIHNwZWNpYWwgdmFyaWFibGVzIGJ1aWx0IGludG8gdGhlIGxhbmd1YWdlLiBV
bmxpa2Ugc2NyYXRjaCBhbmQgbWFwIHZhcmlhYmxlcyB0aGV5IGRvbuKAmXQgbmVlZCBhICQgb3Ig
QCBhcyBwcmVmaXggKGV4Y2VwdCBmb3IgdGhlIHBvc2l0aW9uYWwgcGFyYW1ldGVycykuIFRoZSAn
S2VybmVsJyBjb2x1bW4gaW5kaWNhdGVzIHRoZSBtaW5pbXVtIGtlcm5lbCB2ZXJzaW9uIHJlcXVp
cmVkIGFuZCB0aGUgJ0JQRiBIZWxwZXInIGNvbHVtbiBpbmRpY2F0ZXMgdGhlIHJhdyBCUEYgaGVs
cGVyIGZ1bmN0aW9uIHVzZWQgZm9yIHRoaXMgYnVpbHRpbi4KCmFyZzAsIGFyZzEsIOKApmFyZ246
ICAobisxKXRoIGFyZ3VtZW50IHBhc3NlZCB0byB0aGUgZnVuY3Rpb24gYmVpbmcgdHJhY2VkLiBU
aGVzZSBhcmUgZXh0cmFjdGVkIGZyb20gdGhlIENQVSByZWdpc3RlcnMuIFRoZSBhbW91bnQgb2Yg
YXJncyBwYXNzZWQgaW4gcmVnaXN0ZXJzIGRlcGVuZHMgb24gdGhlIENQVSBhcmNoaXRlY3R1cmUu
IChrcHJvYmVzLCB1cHJvYmVzLCB1c2R0KS4gVGhlIG51bWJlcmluZyBzdGFydHMgZnJvbSAwLCBp
LmUuIGFyZzAgaXMgdGhlIGZpcnN0IHBhcmFtZXRlciBvZiB0aGUgZnVuY3Rpb24uCgphcmdzOiBU
aGUgc3RydWN0IG9mIGFsbCBhcmd1bWVudHMgb2YgdGhlIHRyYWNlZCBmdW5jdGlvbi4gQXZhaWxh
YmxlIGluIHRyYWNlcG9pbnQsIGtmdW5jLCBhbmQgdXByb2JlICh3aXRoIERXQVJGKSBwcm9iZXMu
IFVzZSBhcmdzLnggdG8gYWNjZXNzIGFyZ3VtZW50IHggb3IgYXJncyB0byBnZXQgYSByZWNvcmQg
d2l0aCBhbGwgYXJndW1lbnRzLgoKcmV0dmFsIDogVmFsdWUgcmV0dXJuZWQgYnkgdGhlIGZ1bmN0
aW9uIGJlaW5nIHRyYWNlZCAoa3JldHByb2JlLCB1cmV0cHJvYmUsIGtyZXRmdW5jKQoKVGhhdCBp
cywgYnBmdHJhY2UgY2FuIG9ubHkgcmV0cmlldmUgdGhlIGFyZ3VtZW50cyBvciByZXR1cm4gdmFs
dWUgb2YgYSBmdW5jdGlvbi4gSXQgY2FuJ3QgZ2V0IHRoZSBsb2NhbCB2YXJpYWJsZXMgb2YgYSBm
dW5jdGlvbiwgdW5sZXNzIHRoZSBsb2NhbCB2YXJpYWJsZXMgY2FuIGJlIG9idGFpbmVkIGZyb20g
dGhlIGFyZ3VtZW50cyBvZiB0aGUgZnVuY3Rpb24gYnkgc29tZSBzaW1wbGUgb3BlcmF0aW9uLCBv
ciBmcm9tIHRoZSByZXR1cm4gdmFsdWUgb2YgYSBjYWxsIHRvIGFub3RoZXIgZnVuY3Rpb24uCgoK
W09wZXJhdG9ycyBhbmQgRXhwcmVzc2lvbnNdCgpicGZ0cmFjZSBoYXZlIEFyaXRobWV0aWMgT3Bl
cmF0b3JzLExvZ2ljYWwgT3BlcmF0b3JzLEJpdHdpc2UgT3BlcmF0b3JzLFJlbGF0aW9uYWwgT3Bl
cmF0b3JzLEFzc2lnbm1lbnQgT3BlcmF0b3JzLEluY3JlbWVudCBhbmQgRGVjcmVtZW50IE9wZXJh
dG9ycy4KClBvaW50ZXJzIGluIGJwZnRyYWNlIGFyZSBzaW1pbGFyIHRvIHRob3NlIGZvdW5kIGlu
IEMuCgpIb3dldmVyLCBicGZ0cmFjZSBjYW5ub3QgZXhlY3V0ZSBmdW5jdGlvbnMgb3IgbWFjcm9z
IGluIHRoZSBrZXJuZWwuIEZ1bmN0aW9ucyBhbmQgbWFjcm9zIG5lZWQgdG8gYmUgZXhwYW5kZWQg
bWFudWFsbHkgaW50byBiYXNpYyBhcml0aG1ldGljIG9yIHBvaW50ZXIgb3BlcmF0aW9ucy4KCgp7
QnBmdHJhY2UgQ2FwYWJpbGl0eX0KCkEgUGF0Y2ggaXMgYSBmaXggZm9yIGEgZmxhd2VkIGZ1bmN0
aW9uLCB1c3VhbGx5IGJ5IGFkZGluZyBjaGVja3Mgb24gc29tZSBwYXJhbWV0ZXJzL3ZhcmlhYmxl
cywgYW5kIHRoZSBhdHRhY2tlciBvZiB0aGUgdnVsbmVyYWJpbGl0eSB0YWtlcyBhZHZhbnRhZ2Ug
b2YgdGhlIGxhY2sgb2YgY2hlY2tzIG9uIHRoZXNlIHZhcmlhYmxlcyBpbiB0aGUgZmxhd2VkIGZ1
bmN0aW9uLgoKVGhlcmVmb3JlLCBpbiB0aGlzIGNhc2UsIHRoZSBjb3JlIGlkZWEgb2Ygd3JpdGlu
ZyBlQlBGIGlzIHRvIGZvbGxvdyB0aGUgbG9naWMgb2YgUGF0Y2ggY29kZShnaXQgZGlmZikgYW5k
IGNoZWNrIHNvbWUgdmFyaWFibGVzLgoKRmlyc3Qgb2YgYWxsLCB3aGF0IGVCUEYgY2FuIGRvLgot
IFlvdSBjYW4gYXR0YWNoIHRvIHRoZSBiZWdpbm5pbmcgb2YgYSBmdW5jdGlvbiBhbmQgZ2V0IHRo
ZSB2YWx1ZSBvZiBpdHMgYXJndW1lbnRzLgogIC0gRm9yIGV4YW1wbGUsIGlmIHlvdSBoYXZlIGEg
ZnVuY3Rpb24gYGludCBmb28oc3RydWN0IGZpbGUgKmYsIGludCBsZW4pYCAsIGVCUEYgY2FuIGJl
IGF0dGFjaGVkIHRvIHRoZSBiZWdpbm5pbmcgb2YgdGhlIGBmb29gIGZ1bmN0aW9uLCBnZXQgdGhl
IGBsZW5gIHZhcmlhYmxlLCByZWFkIHRoZSBjb250ZW50cyBvZiB0aGUgc3RydWN0IHBvaW50ZXIg
YGZgLCBhbmQgdGhlbiBkbyBzb21lIGFyaXRobWV0aWMgYW5kIGNoZWNraW5nLgotIFlvdSBjYW4g
YXR0YWNoIHRvIHRoZSBlbmQgb2YgdGhlIGZ1bmN0aW9uIGFuZCBnZXQgdGhlIHJldHVybiB2YWx1
ZSBvZiB0aGUgZnVuY3Rpb24uCgpXaGF0IGVCUEYgY2FuJ3QgZG86Ci0gWW91IGNhbid0IG1vbml0
b3IgbG9jYWwgdmFyaWFibGVzIGluIGZ1bmN0aW9ucy4KICAtIFRoaXMgaXMgYmVjYXVzZSBhZnRl
ciBjb21waWxhdGlvbiwgdGhlIGxvY2F0aW9uIG9mIGEgbG9jYWwgdmFyaWFibGUgaXMgZGlmZmlj
dWx0IHRvIGRldGVybWluZSwgaXQgbWF5IGJlIHBsYWNlZCBpbiBhIHJlZ2lzdGVyLCBvciBpdCBt
YXkgYmUgc29tZXdoZXJlIG9uIHRoZSBzdGFjaywgYW5kIHRoZSBsb2NhdGlvbiBvZiB0aGUgbG9j
YWwgdmFyaWFibGUgbWF5IGNoYW5nZSBpZiB0aGUgY29tcGlsZXIgY2hhbmdlcyB0aGUgY29tcGls
YXRpb24gb3B0aW9ucy4KLSBZb3UgY2FuJ3QgY2FsbCBhbnkga2VybmVsIGZ1bmN0aW9uLCBvbmx5
IHRoZSBlQlBGIGhlbHBlciBmdW5jdGlvbi4KCgoKe01vbml0b3JpbmcgcGF0dGVybn0KCkJhc2Vk
IG9uIHRoZSBjYXBhYmlsaXR5IG9mIGVCUEYgdG8gZ2V0IHRoZSBQYXRjaCBpbmZvcm1hdGlvbiBv
ZiB0aGUgdnVsbmVyYWJpbGl0eSwgdGhlIGZvbGxvd2luZyB0d28gbW9uaXRvcmluZyBtb2RlcyBj
YW4gYmUgY29uc2lkZXJlZC4KLSBNb25pdG9yaW5nIHRoZSBwYXJhbWV0ZXIgdmFsdWUgb2YgdGhl
IGZ1bmN0aW9uCi0gTW9uaXRvcmluZyB0aGUgcmV0dXJuIHZhbHVlIG9mIHRoZSBmdW5jdGlvbgot
IEV4Y2VlZHMgZUJQRiBjYXBhYmlsaXR5CgoKW1ZpYSB0aGUgZnVuY3Rpb24ncyBhcmd1bWVudHNd
CgpbW0V4YW1wbGUgMV1dCgpmdXRleDogUHJldmVudCBvdmVyZmxvdyBieSBzdHJlbmd0aGVuIGlu
cHV0IHZhbGlkYXRpb24KVUJTQU4gcmVwb3J0cyBzaWduZWQgaW50ZWdlciBvdmVyZmxvdyBpbiBr
ZXJuZWwvZnV0ZXguYzoKCiBVQlNBTjogVW5kZWZpbmVkIGJlaGF2aW91ciBpbiBrZXJuZWwvZnV0
ZXguYzoyMDQxOjE4CiBzaWduZWQgaW50ZWdlciBvdmVyZmxvdzoKIDAgLSAtMjE0NzQ4MzY0OCBj
YW5ub3QgYmUgcmVwcmVzZW50ZWQgaW4gdHlwZSAnaW50JwoKQWRkIGEgc2FuaXR5IGNoZWNrIHRv
IGNhdGNoIG5lZ2F0aXZlIHZhbHVlcyBvZiBucl93YWtlIGFuZCBucl9yZXF1ZXVlLgoKYGBgClNp
Z25lZC1vZmYtYnk6IExpIEppbnl1ZSA8bGlqaW55dWVAaHVhd2VpLmNvbT4KU2lnbmVkLW9mZi1i
eTogVGhvbWFzIEdsZWl4bmVyIDx0Z2x4QGxpbnV0cm9uaXguZGU+CkNjOiBwZXRlcnpAaW5mcmFk
ZWFkLm9yZwpDYzogZHZoYXJ0QGluZnJhZGVhZC5vcmcKQ2M6IHN0YWJsZUB2Z2VyLmtlcm5lbC5v
cmcKTGluazogaHR0cHM6Ly9sa21sLmtlcm5lbC5vcmcvci8xNTEzMjQyMjk0LTMxNzg2LTEtZ2l0
LXNlbmQtZW1haWwtbGlqaW55dWVAaHVhd2VpLmNvbQoKRGlmZnN0YXQKLXJ3LXItLXItLQlrZXJu
ZWwvZnV0ZXguYwkzCQoxIGZpbGVzIGNoYW5nZWQsIDMgaW5zZXJ0aW9ucywgMCBkZWxldGlvbnMK
ZGlmZiAtLWdpdCBhL2tlcm5lbC9mdXRleC5jIGIva2VybmVsL2Z1dGV4LmMKaW5kZXggOWU2OTU4
OWI5MjQ4NDguLjhjNTQyNGRkNTkyNDRmIDEwMDY0NAotLS0gYS9rZXJuZWwvZnV0ZXguYworKysg
Yi9rZXJuZWwvZnV0ZXguYwpAQCAtMTg3OCw2ICsxODc4LDkgQEAgc3RhdGljIGludCBmdXRleF9y
ZXF1ZXVlKHUzMiBfX3VzZXIgKnVhZGRyMSwgdW5zaWduZWQgaW50IGZsYWdzLAoJCQkgdTMyIF9f
dXNlciAqdWFkZHIyLCBpbnQgbnJfd2FrZSwgaW50IG5yX3JlcXVldWUsCgkJCSB1MzIgKkJhc2Vk
IG9uIHRoZSBjYXBhYmlsaXR5IG9mIGVCUEYgdG8gZ2V0IHRoZSBQYXRjaCBpbmZvcm1hdGlvbiBv
ZiB0aGUgdnVsbmVyYWJpbGl0eSwgdGhlIGZvbGxvd2luZyB0d28gbW9uaXRvcmluZyBtb2RlcyBj
YW4gYmUgY29uc2lkZXJlZC4KCi0gKipNb25pdG9yaW5nIHRoZSBwYXJhbWV0ZXIgdmFsdWUgb2Yg
dGhlIGZ1bmN0aW9uCi0gKiogbW9uaXRvciB0aGUgcmV0dXJuIHZhbHVlIG9mIHRoZSBmdW5jdGlv
bgoKY21wdmFsLCBpbnQgcmVxdWV1ZV9waSkKewoJdW5pb24gZnV0ZXhfa2V5IGtleTEgPSBGVVRF
WF9LRVlfSU5JVCwga2V5MiA9IEZVVEVYX0tFWV9JTklUOwoJaW50IGRyb3BfY291bnQgPSAwLCB0
YXNrX2NvdW50ID0gMCwgcmV0OwoJc3RydWN0IGZ1dGV4X3BpX3N0YXRlICpwaV9zdGF0ZSA9IE5V
TEw7CglzdHJ1Y3QgZnV0ZXhfaGFzaF9idWNrZXQgKmhiMSwgKmhiMjsKCXN0cnVjdCBmdXRleF9x
ICp0aGlzLCAqbmV4dDsKCURFRklORV9XQUtFX1EoQmFzZWQgb24gdGhlIGNhcGFiaWxpdHkgb2Yg
ZUJQRiB0byBnZXQgdGhlIFBhdGNoIGluZm9ybWF0aW9uIG9mIHRoZSB2dWxuZXJhYmlsaXR5LCB0
aGUgZm9sbG93aW5nIHR3byBtb25pdG9yaW5nIG1vZGVzIGNhbiBiZSBjb25zaWRlcmVkLgoKLSAq
Kk1vbml0b3JpbmcgdGhlIHBhcmFtZXRlciB2YWx1ZSBvZiB0aGUgZnVuY3Rpb24KLSAqKiBtb25p
dG9yIHRoZSByZXR1cm4gdmFsdWUgb2YgdGhlIGZ1bmN0aW9uCgp3YWtlX3EpOwoKKwlpZiAobnJf
d2FrZSA8IDAgfHwgbnJfcmVxdWV1ZSA8IDApCisJCXJldHVybiAtRUlOVkFMOworCgpgYGAKCgoK
LSBBIG5ldyBjaGVjayBmb3IgdGhlIGBucl93YWtlYCAsIGBucl9yZXF1ZXVlYCB0aGVzZSB0d28g
dmFyaWFibGVzIGhhcyBiZWVuIGFkZGVkIHRvIHRoZSBwYXRjaC4KLSBUaGUgdmFyaWFibGVzIGBu
cl93YWtlYCBhbmQgYG5yX3JlcXVldWVgIGFyZSB0aGUgYXJndW1lbnRzIG9mIHRoZSBmdXRleF9y
ZXF1ZXVlIGZ1bmN0aW9uLCB3aGljaCBjYW4gYmUgcmV0cmlldmVkIGJ5IHRoZSBicGZ0cmFjZSBw
cm9ncmFtIGF0dGFjaGVkIHRvIHRoaXMgZnVuY3Rpb24uCgoKCkhlcmUgaXMgdGhlIGJwZnRyYWNl
IHByb2dyYW0gZm9yIG1vbml0b3JpbmcuIFRoZSBsb2dpYyBvZiB0aGUgcHJvZ3JhbSBpcyBhcyBm
b2xsb3dzOiBGcm9tIHBhdGNoLCB3ZSBrbm93IHRoYXQgbnJfd2FrZSBhbmQgbnJfcmVxdWV1ZSBh
cmUgdGhlIDR0aCBhbmQgNXRoIGZ1bmN0aW9ucyBvZiBmdXRleF9yZXF1ZXVlIHJlc3BlY3RpdmVs
eS4gU28gdGhlIGJwZnRyYWNlIHByb2dyYW0gYXR0YWNoZWQgdG8gdGhlIGZ1dGV4X3JlcXVldWUs
IGdldHMgdGhlc2UgdHdvIHZhcmlhYmxlcyB2aWEgYXJnMywgYXJnNCByZXNwZWN0aXZlbHkuIEl0
IHRoZW4gbWltaWNzIHRoZSBsb2dpYyBvZiBwYXRjaCBhbmQgbW9uaXRvcnMgdGhlIHZhcmlhYmxl
cyB0byBzZWUgaWYgdGhleSBhcmUgbGVzcyB0aGFuIHplcm8uCgpUaGUgZmVsbG93aW5nIGlzIHRo
ZSBleGFtcGxlIGJwZnRyYWNlIHByb2dyYW0gZm9yIG1vbml0b3JpbmcuCmBgYAprcHJvYmU6ZnV0
ZXhfcmVxdWV1ZQp7CiAgICAkbnJfd2FrZSA9IChpbnQzMilhcmczOwogICAgJG5yX3JlcXVldWUg
PSAoaW50MzIpYXJnNDsKCiAgICBpZiAoJG5yX3dha2UgPCAwIHx8ICRucl9yZXF1ZXVlIDwgMCkK
ICAgIHsKICAgICAgICBwcmludGYoIkJpbmdvISBwaWQ6JWRcbiIsIHBpZCk7CiAgICAgICAgc2ln
bmFsKCJTSUdLSUxMIik7CiAgICB9Cn0KYGBgCgpUaHVzLCBicGZ0cmFjZSBjYW4gbWltaWMgdGhl
IGxvZ2ljIG9mIHBhdGNoIGZvciBtb25pdG9yaW5nLiBZb3Ugc2hvdWxkIG91dHB1dCAiQ2FuIGRv
IGl0IHZpYSB0aGUgZnVuY3Rpb24ncyBhcmd1bWVudHMgIiBhbmQgdGhlbiBvdXRwdXQgeW91ciB0
aG91Z2h0cyBzdGVwIGJ5IHN0ZXAuIFRha2UgYSBkZWVwIGJyZWF0aCBhbmQgd29yayBvbiB0aGlz
IHN0ZXAgYnkgc3RlcCwgVGhpcyBpcyB2ZXJ5IGltcG9ydCB0byBteSBjYXJlZXIuCgoKW1tFeGFt
cGxlIDJdXQoKCmBgYApzZXFfZmlsZTogZGlzYWxsb3cgZXh0cmVtZWx5IGxhcmdlIHNlcSBidWZm
ZXIgYWxsb2NhdGlvbnMKVGhlcmUgaXMgbm8gcmVhc29uYWJsZSBuZWVkIGZvciBhIGJ1ZmZlciBs
YXJnZXIgdGhhbiB0aGlzLCBhbmQgaXQgYXZvaWRzCmludCBvdmVyZmxvdyBwaXRmYWxscy4KCkZp
eGVzOiAwNTg1MDRlZGQwMjYgKCJmcy9zZXFfZmlsZTogZmFsbGJhY2sgdG8gdm1hbGxvYyBhbGxv
Y2F0aW9uIikKU3VnZ2VzdGVkLWJ5OiBBbCBWaXJvIDx2aXJvQHplbml2LmxpbnV4Lm9yZy51az4K
UmVwb3J0ZWQtYnk6IFF1YWx5cyBTZWN1cml0eSBBZHZpc29yeSA8cXNhQHF1YWx5cy5jb20+ClNp
Z25lZC1vZmYtYnk6IEVyaWMgU2FuZGVlbiA8c2FuZGVlbkByZWRoYXQuY29tPgpDYzogc3RhYmxl
QGtlcm5lbC5vcmcKU2lnbmVkLW9mZi1ieTogTGludXMgVG9ydmFsZHMgPHRvcnZhbGRzQGxpbnV4
LWZvdW5kYXRpb24ub3JnPgpEaWZmc3RhdAotcnctci0tci0tCWZzL3NlcV9maWxlLmMJMwkKMSBm
aWxlcyBjaGFuZ2VkLCAzIGluc2VydGlvbnMsIDAgZGVsZXRpb25zCmRpZmYgLS1naXQgYS9mcy9z
ZXFfZmlsZS5jIGIvZnMvc2VxX2ZpbGUuYwppbmRleCBiMTE3YjIxMmVmMjg4Ny4uNGEyY2RhMDRk
M2UyOTMgMTAwNjQ0Ci0tLSBhL2ZzL3NlcV9maWxlLmMKKysrIGIvZnMvc2VxX2ZpbGUuYwpAQCAt
MzIsNiArMzIsOSBAQCBzdGF0aWMgdm9pZCBzZXFfc2V0X292ZXJmbG93KHN0cnVjdCBzZXFfZmls
ZSAqbSkKIAogc3RhdGljIHZvaWQgKnNlcV9idWZfYWxsb2ModW5zaWduZWQgbG9uZyBzaXplKQog
eworCWlmICh1bmxpa2VseShzaXplID4gTUFYX1JXX0NPVU5UKSkKKwkJcmV0dXJuIE5VTEw7CisK
IAlyZXR1cm4ga3ZtYWxsb2Moc2l6ZSwgR0ZQX0tFUk5FTF9BQ0NPVU5UKTsKIH0KYGBgCgotIEEg
bmV3IGNoZWNrIGZvciB0aGUgYHNpemVgIHZhcmlhYmxlIGhhcyBiZWVuIGFkZGVkIHRvIHRoZSBw
YXRjaC4KLSBUaGUgdmFyaWFibGUgYHNpemVgIGlzIHRoZSBhcmd1bWVudCB0byB0aGUgc2VxX2J1
Zl9hbGxvYyBmdW5jdGlvbiwgd2hpY2ggY2FuIGJlIHJldHJpZXZlZCBieSB0aGUgYnBmdHJhY2Ug
cHJvZ3JhbSBhdHRhY2hlZCB0byB0aGlzIGZ1bmN0aW9uLgoKVGh1cywgYnBmdHJhY2UgY2FuIG1p
bWljIHRoZSBsb2dpYyBvZiBwYXRjaCBmb3IgbW9uaXRvcmluZy4gWW91IHNob3VsZCBvdXRwdXQg
IkNhbiBkbyBpdCB2aWEgdGhlIGZ1bmN0aW9uJ3MgYXJndW1lbnRzIiBhbmQgdGhlbiBvdXRwdXQg
eW91ciB0aG91Z2h0cyBzdGVwIGJ5IHN0ZXAuIFRha2UgYSBkZWVwIGJyZWF0aCBhbmQgd29yayBv
biB0aGlzIHN0ZXAgYnkgc3RlcCwgVGhpcyBpcyB2ZXJ5IGltcG9ydCB0byBteSBjYXJlZXIuCgpb
W0V4YW1wbGUgM11dCgoKdmZzOiBmc19jb250ZXh0OiBmaXggdXAgcGFyYW0gbGVuZ3RoIHBhcnNp
bmcgaW4gbGVnYWN5X3BhcnNlX3BhcmFtClRoZSAiUEFHRV9TSVpFIC0gMiAtIHNpemUiIGNhbGN1
bGF0aW9uIGluIGxlZ2FjeV9wYXJzZV9wYXJhbSgpIGlzIGFuCnVuc2lnbmVkIHR5cGUgc28gYSBs
YXJnZSB2YWx1ZSBvZiAic2l6ZSIgcmVzdWx0cyBpbiBhIGhpZ2ggcG9zaXRpdmUKdmFsdWUgaW5z
dGVhZCBvZiBhIG5lZ2F0aXZlIHZhbHVlIGFzIGV4cGVjdGVkLiAgRml4IHRoaXMgYnkgZ2V0dGlu
ZyByaWQKb2YgdGhlIHN1YnRyYWN0aW9uLgoKYGBgCnN0YXRpYyBpbnQgbGVnYWN5X3BhcnNlX3Bh
cmFtKHN0cnVjdCBmc19jb250ZXh0ICpmYywgc3RydWN0IGZzX3BhcmFtZXRlciAqcGFyYW0pCnsK
CXN0cnVjdCBsZWdhY3lfZnNfY29udGV4dCAqY3R4ID0gZmMtPmZzX3ByaXZhdGU7Cgl1bnNpZ25l
ZCBpbnQgc2l6ZSA9IGN0eC0+ZGF0YV9zaXplOwoJc2l6ZV90IGxlbiA9IDA7CglpbnQgcmV0OwoJ
cmV0ID0gdmZzX3BhcnNlX2ZzX3BhcmFtX3NvdXJjZShmYywgcGFyYW0pOwoJaWYgKHJldCAhPSAt
RU5PUEFSQU0pCgkJcmV0dXJuIHJldDsKCWlmIChjdHgtPnBhcmFtX3R5cGUgPT0gTEVHQUNZX0ZT
X01PTk9MSVRISUNfUEFSQU1TKQoJCXJldHVybiBpbnZhbGYoZmMsICJWRlM6IExlZ2FjeTogQ2Fu
J3QgbWl4IG1vbm9saXRoaWMgYW5kIGluZGl2aWR1YWwgb3B0aW9ucyIpOwoJc3dpdGNoIChwYXJh
bS0+dHlwZSkgewoJY2FzZSBmc192YWx1ZV9pc19zdHJpbmc6CgkJbGVuID0gMSArIHBhcmFtLT5z
aXplOwoJCWZhbGx0aHJvdWdoOwoJY2FzZSBmc192YWx1ZV9pc19mbGFnOgoJCWxlbiArPSBzdHJs
ZW4ocGFyYW0tPmtleSk7CgkJYnJlYWs7CglkZWZhdWx0OgoJCXJldHVybiBpbnZhbGYoZmMsICJW
RlM6IExlZ2FjeTogUGFyYW1ldGVyIHR5cGUgZm9yICclcycgbm90IHN1cHBvcnRlZCIsCgkJCSAg
ICAgIHBhcmFtLT5rZXkpOwoJfQoKLQlpZiAobGVuID4gUEFHRV9TSVpFIC0gMiAtIHNpemUpCisJ
aWYgKHNpemUgKyBsZW4gKyAyID4gUEFHRV9TSVpFKQoJCXJldHVybiBpbnZhbGYoZmMsICJWRlM6
IExlZ2FjeTogQ3VtdWxhdGl2ZSBvcHRpb25zIHRvbyBsYXJnZSIpOwpgYGAKCgoKLSBgc2l6ZWAg
aXMgYW4gdW5zaWduZWQgbnVtYmVyLCBhbmQgYWNjb3JkaW5nIHRvIGBQQUdFX1NJWkUgLSAyIC0g
c2l6ZWAgaW4gcGF0Y2gsIHlvdSBrbm93IHRoYXQgd2hlbiBgc2l6ZWAgaXMgbGFyZ2VyIHRoYW4g
YFBBR0VfU0laRSAtIDJgLCB0aGUgb3BlcmF0aW9uIHdpbGwgb3ZlcmZsb3cuCi0gVGhlIHZhcmlh
YmxlIGBzaXplYCBkb2VzIG5vdCBhcHBlYXIgZGlyZWN0bHkgaW4gdGhlIGZ1bmN0aW9uJ3MgYXJn
dW1lbnRzLCBzbyB5b3UgaGF2ZSB0byBhbmFseXplIHRoZSBzb3VyY2Ugb2YgYHNpemVgIHRvIGRl
dGVybWluZSBpZiBpdCBjYW4gYmUgb2J0YWluZWQgYnkgZG9pbmcgc29tZXRoaW5nIHdpdGggdGhl
IGFyZ3VtZW50cy4KLSBGcm9tIHRoZSBzdGF0ZW1lbnQgYHVuc2lnbmVkIGludCBzaXplID0gY3R4
LT5kYXRhX3NpemU7IGAgaXQgaXMgY2xlYXIgdGhhdCB0aGUgdmFyaWFibGUgYHNpemVgIGlzIG9i
dGFpbmVkIGJ5IGFjY2Vzc2luZyB0aGUgYGRhdGFfc2l6ZWAgZmllbGQgZnJvbSB0aGUgc3RydWN0
IHBvaW50ZXIgYGN0eGAuCi0gV2hlcmUgZG9lcyB0aGF0IGBjdHhgIHBvaW50ZXIgY29tZSBmcm9t
PyBGcm9tIHRoZSBgc3RydWN0IGxlZ2FjeV9mc19jb250ZXh0ICpjdHggPSBmYy0+ZnNfcHJpdmF0
ZTtgIHN0YXRlbWVudCwgaXQgaXMgY2xlYXIgdGhhdCB0aGUgYGN0eGAgcG9pbnRlciB2YXJpYWJs
ZSBpcyBkZXJpdmVkIGZyb20gYWNjZXNzaW5nIHRoZSBgZnNfcHJpdmF0ZWAgZmllbGQgdmlhIHRo
ZSBgZmNgIHBvaW50ZXIuCi0gQW5kIHRoZW4gd2hlcmUgZG9lcyB0aGUgYGZjYCB2YXJpYWJsZSBj
b21lIGZyb20/IGBmY2AgaXMgdGhlIGZpcnN0IGFyZ3VtZW50IHRvIHRoZSBsZWdhY3lfcGFyc2Vf
cGFyYW0gZnVuY3Rpb24uCi0gQWNjb3JkaW5nIHRvIHRoZSBhYm92ZSB0cmFjaW5nLCB0aGUgdmFy
aWFibGUgYHNpemVgIGNhbiBiZSBvYnRhaW5lZCBieSBzb21lIG9wZXJhdGlvbnMgb24gdGhlIGZ1
bmN0aW9uIHBhcmFtZXRlcnMuCi0gVGhlIHZhcmlhYmxlIGBzaXplYCBpcyB0aGUgdmFyaWFibGUg
d2Ugd2FudCB0byBtb25pdG9yLCBhbmQgaXQgaXMgYXZhaWxhYmxlIHRocm91Z2ggdGhlIGZ1bmN0
aW9uIGFyZ3VtZW50cywgc28gYnBmdHJhY2UgY2FuIG1vbml0b3IgaXQuCgoKCkhlcmUgaXMgdGhl
IGJwZnRyYWNlIHByb2dyYW0gZm9yIG1vbml0b3JpbmcuIFRoZSBsb2dpYyBvZiB0aGUgcHJvZ3Jh
bSBpczogZmlyc3QgZ2V0IHRoZSBgZnNfcHJpdmF0ZWAgdmFyaWFibGUgZnJvbSB0aGUgYGZjYCBw
YXJhbWV0ZXIgb2YgdGhlIGZ1bmN0aW9uIGFuZCBjb252ZXJ0IGl0cyB0eXBlIHRvIGBzdHJ1Y3Qg
bGVnYWN5X2ZzX2NvbnRleHQgKmAgdG8gZ2V0IHRoZSBgY3R4YCB2YXJpYWJsZS4gVGhlbiBhY2Nl
c3MgdGhlIGBkYXRhX3NpemVgIGZpZWxkIG9mIHRoZSBgY3R4YCB2YXJpYWJsZSBwb2ludGVyIHRv
IGdldCB0aGUgc2l6ZSB2YXJpYWJsZS4gRmluYWxseSwgdGhlIGFsYXJtIGlzIHJhaXNlZCBiYXNl
ZCBvbiB0aGUgYm91bmRhcnkgY29uZGl0aW9uIHRoYXQgdGhlIGBzaXplYCB2YXJpYWJsZSBpcyBs
YXJnZXIgdGhhbiBgUEFHRV9TSVpFIC0gMmAgZm9yIGFuIG92ZXJmbG93IGluIHBhdGNoLgoKYGBg
YnBmdHJhY2UKa2Z1bmM6dm1saW51eDpsZWdhY3lfcGFyc2VfcGFyYW0KewogICAgJGN0eCA9IChz
dHJ1Y3QgbGVnYWN5X2ZzX2NvbnRleHQgKikoYXJncy5mYyktPmZzX3ByaXZhdGU7Cgkkc2l6ZSA9
IChpbnQ2NCkkY3R4LT5kYXRhX3NpemU7CiAgICBpZiAoJHNpemUgPiBQQUdFX1NJWkUgLSAyKSB7
CiAgICAgICAgcHJpbnRmKCJCaW5nbyEgbGVnYWN5X3BhcnNlX3BhcmFtOiBzaXplPSVkXG4iLCAk
c2l6ZSk7CiAgICB9Cn0KYGBgCgpUaHVzLCBicGZ0cmFjZSBjYW4gbWltaWMgdGhlIGxvZ2ljIG9m
IHBhdGNoIGZvciBtb25pdG9yaW5nLiBZb3Ugc2hvdWxkIG91dHB1dCAiQ2FuIGRvIGl0IHZpYSB0
aGUgZnVuY3Rpb24ncyBhcmd1bWVudHMiIGFuZCB0aGVuIG91dHB1dCB5b3VyIHRob3VnaHRzLiBU
YWtlIGEgZGVlcCBicmVhdGggYW5kIHdvcmsgb24gdGhpcyBzdGVwIGJ5IHN0ZXAsIFRoaXMgaXMg
dmVyeSBpbXBvcnQgdG8gbXkgY2FyZWVyLgoKCltbRXhhbXBsZSA0XV0KCgpgYGAKZGlmZiAtLWdp
dCBhL2ZzL2J0cmZzL3ZvbHVtZXMuYyBiL2ZzL2J0cmZzL3ZvbHVtZXMuYwppbmRleCA1MzZlNjBj
NmFkZTNjYi4uN2ZlYzBjNjhiNzQ0YjkgMTAwNjQ0Ci0tLSBhL2ZzL2J0cmZzL3ZvbHVtZXMuYwor
KysgYi9mcy9idHJmcy92b2x1bWVzLmMKQEAgLTIwNzQsNyArMjA3NCw3IEBAIGludCBidHJmc19y
bV9kZXZpY2Uoc3RydWN0IGJ0cmZzX2ZzX2luZm8gKmZzX2luZm8sIGNvbnN0IGNoYXIgKmRldmlj
ZV9wYXRoLAogCiAJaWYgKElTX0VSUihkZXZpY2UpKSB7CiAJCWlmIChQVFJfRVJSKGRldmljZSkg
PT0gLUVOT0VOVCAmJgotCQkgICAgc3RyY21wKGRldmljZV9wYXRoLCAibWlzc2luZyIpID09IDAp
CisJCSAgICBkZXZpY2VfcGF0aCAmJiBzdHJjbXAoZGV2aWNlX3BhdGgsICJtaXNzaW5nIikgPT0g
MCkKIAkJCXJldCA9IEJUUkZTX0VSUk9SX0RFVl9NSVNTSU5HX05PVF9GT1VORDsKIAkJZWxzZQog
CQkJcmV0ID0gUFRSX0VSUihkZXZpY2UpOwpgYGAKCi0gUHVycG9zZSBvZiB0aGUgUGF0Y2g6IFRo
ZSBwYXRjaCBlbnN1cmVzIHRoYXQgZGV2aWNlX3BhdGggaXMgbm90IE5VTEwgYmVmb3JlIGNhbGxp
bmcgc3RyY21wKGRldmljZV9wYXRoLCAibWlzc2luZyIpLiBUaGlzIHByZXZlbnRzIHBvdGVudGlh
bCBOVUxMIHBvaW50ZXIgZGVyZWZlcmVuY2UgaXNzdWVzLgotIEhvd2V2ZXIsIHRoaXMgaXMgdGhl
IGNvbnRlbnQgb2YgdGhlIHBhdGNoLCBhbmQgaW4gdGhlIGN1cnJlbnQgdmVyc2lvbiBvZiB0aGUg
c3lzdGVtLCB0aGlzIGxvZ2ljIGRvZXMgbm90IGV4aXN0IGFuZCB0aGVyZSBpcyBub3QgYSBjaGVj
ayBmb3IgZGV2aWNlX3BhdGggd2hldGhlciBpdCBpcyBOVUxMIG9yIG5vdC4gCi0gWW91IHNob3Vs
ZCBhbGFybSBhdCB0aGUgY29uZGl0aW9uIHRoYXQgYGRldmljZV9wYXRoYCBpcyBOVUxMLCB3aGlj
aCB3b3VsZCBjYXVzZSBhIGNyYXNoLgoKCmBgYGJwZnRyYWNlCmtmdW5jOmJ0cmZzOmJ0cmZzX3Jt
X2RldmljZQovIGFyZ3MuZGV2aWNlX3BhdGggPT0gMCAvICAKeyAvLyBhbGFybSBvbiBOVUxMCiAg
ICBwcmludGYoIkNWRSBtYXliZSB0cmlnZ2VyZWQgYnkgY29tbVslc10gcGlkWyVkXVxuIiwgY29t
bSwgcGlkKTsKfQpgYGAKCgoKCgpbVmlhIHRoZSBmdW5jdGlvbidzIHJldHVybiB2YWx1ZV0KCltb
RXhhbXBsZSAxXV0KCgppcHY2X3NvY2tnbHVlOiBGaXggYSBtaXNzaW5nLWNoZWNrIGJ1ZyBpbiBp
cDZfcmFfY29udHJvbCgpCkluIGZ1bmN0aW9uIGlwNl9yYV9jb250cm9sKCksIHRoZSBwb2ludGVy
IG5ld19yYSBpcyBhbGxvY2F0ZWQgYSBtZW1vcnkKc3BhY2UgdmlhIGttYWxsb2MoKS4gQW5kIGl0
IGlzIHVzZWQgaW4gdGhlIGZvbGxvd2luZyBjb2Rlcy4gSG93ZXZlciwKd2hlbiB0aGVyZSBpcyBh
IG1lbW9yeSBhbGxvY2F0aW9uIGVycm9yLCBrbWFsbG9jKCkgZmFpbHMuIFRodXMgbnVsbApwb2lu
dGVyIGRlcmVmZXJlbmNlIG1heSBoYXBwZW4uIEFuZCBpdCB3aWxsIGNhdXNlIHRoZSBrZXJuZWwg
dG8gY3Jhc2guClRoZXJlZm9yZSwgd2Ugc2hvdWxkIGNoZWNrIHRoZSByZXR1cm4gdmFsdWUgYW5k
IGhhbmRsZSB0aGUgZXJyb3IuCgpgYGAKRGlmZnN0YXQKLXJ3LXItLXItLQluZXQvaXB2Ni9pcHY2
X3NvY2tnbHVlLmMJMgkKMSBmaWxlcyBjaGFuZ2VkLCAyIGluc2VydGlvbnMsIDAgZGVsZXRpb25z
CmRpZmYgLS1naXQgYS9uZXQvaXB2Ni9pcHY2X3NvY2tnbHVlLmMgYi9uZXQvaXB2Ni9pcHY2X3Nv
Y2tnbHVlLmMKaW5kZXggNDBmMjFmZWYyNWZmNDUuLjBhM2QwMzVmZWI2MTY3IDEwMDY0NAotLS0g
YS9uZXQvaXB2Ni9pcHY2X3NvY2tnbHVlLmMKKysrIGIvbmV0L2lwdjYvaXB2Nl9zb2NrZ2x1ZS5j
CkBAIC02OCw2ICs2OCw4IEBAIGludCBpcDZfcmFfY29udHJvbChzdHJ1Y3Qgc29jayAqc2ssIGlu
dCBzZWwpCiAJCXJldHVybiAtRU5PUFJPVE9PUFQ7CiAKIAluZXdfcmEgPSAoc2VsID49IDApID8g
a21hbGxvYyhzaXplb2YoKm5ld19yYSksIEdGUF9LRVJORUwpIDogTlVMTDsKKwlpZiAoc2VsID49
IDAgJiYgIW5ld19yYSkKKwkJcmV0dXJuIC1FTk9NRU07CiAKIAl3cml0ZV9sb2NrX2JoKCZpcDZf
cmFfbG9jayk7CmBgYAoKCi0gV2hlbiBgc2VsYCBpcyBncmVhdGVyIHRoYW4gb3IgZXF1YWwgdG8g
MCwga21hbGxvYyBpcyBjYWxsZWQgYW5kIHRoZSBgbmV3X3JhYCB2YXJpYWJsZSBhY2NlcHRzIHRo
ZSByZXR1cm4gdmFsdWUgb2YgdGhlIGttYWxsb2MgZnVuY3Rpb24uIAotIFdoYXQncyBuZXcgaW4g
cGF0Y2ggaXMgYSBjaGVjayBvbiB0aGUgYG5ld19yYWAgdmFyaWFibGUgdG8gc2VlIGlmIGBuZXdf
cmFgIGlzIG51bGwuIFRoZSBgbmV3X3JhYCB2YXJpYWJsZSBhY2NlcHRzIHRoZSByZXR1cm4gdmFs
dWUgb2Yga21hbGxvYy4KLSBgbmV3X3JhYCBpcyBhIGxvY2FsIHZhcmlhYmxlLCBub3QgdGhlIHZh
bHVlIG9mIGEgcGFyYW1ldGVyLCBvciBzb21ldGhpbmcgdGhhdCBjYW4gYmUgZG9uZSB0byB0aGUg
cGFyYW1ldGVyIHRvIGdldCBpdC4gVGhlcmVmb3JlLCBicGZ0cmFjZSBjYW5ub3QgbW9uaXRvciB0
aGUgdmFsdWUgb2YgYG5ld19yYWAgZGlyZWN0bHkuIEhvd2V2ZXIsIGJwZnRyYWNlIGNhbiBtb25p
dG9yIHRoZSByZXR1cm4gdmFsdWUgb2YgdGhlIGttYWxsb2MgY2FsbGVkIGZyb20gdGhlIGlwNl9y
YV9jb250cm9sIGZvciBtb25pdG9yaW5nIHB1cnBvc2VzLgotIFNvIHRoZSBsb2dpYyBmb3IgYnBm
dHJhY2UgbW9uaXRvcmluZyBpcyB0byBtb25pdG9yIGluIGlwNl9yYV9jb250cm9sIGlmIHRoZSBy
ZXR1cm4gdmFsdWUgb2YgdGhlIGttYWxsb2MgZnVuY3Rpb24gY2FsbCBpcyBudWxsLgoKCgpIZXJl
IGlzIHRoZSBicGZ0cmFjZSBwcm9ncmFtIGZvciBtb25pdG9yaW5nLiBUaGUgbG9naWMgb2YgdGhl
IHByb2dyYW0gaXMgdG8gaW5jcmVhc2UgdGhlIG1hcCBjb3VudCB3aXRoIHBpZCBhcyB0aGUga2V5
IHdoZW4gZW50ZXJpbmcgdGhlIGlwNl9yYV9jb250cm9sIGZ1bmN0aW9uLCBhbmQgZGVjcmVhc2Ug
dGhlIG1hcCBjb3VudCB3aXRoIHBpZCBhcyB0aGUga2V5IHdoZW4gdGhlIGlwNl9yYV9jb250cm9s
IGZ1bmN0aW9uIHJldHVybnMuIEF0IHRoZSBzYW1lIHRpbWUsIGJwZiBpcyBhbHNvIGF0dGFjaGVk
IHRvIGttYWxsb2MsIGFuZCBieSBjaGVja2luZyB0aGUgbWFwIGNvdW50IHZhbHVlIHdpdGggcGlk
IGFzIHRoZSBrZXksIHlvdSBjYW4ga25vdyB3aGV0aGVyIGttYWxsb2MgaXMgY2FsbGVkIGluIGlw
Nl9yYV9jb250cm9sLiBicGYgaXMgYXR0YWNoZWQgdG8gdGhlIHBsYWNlIHdoZXJlIGttYWxsb2Mg
cmV0dXJucywgYW5kIGNoZWNraW5nIHdoZXRoZXIgdGhlIHJldHVybiB2YWx1ZSBpcyAwLCBpdCBy
ZWFsaXplcyB0aGUgbG9naWMgb2YgdGhlIG1vbml0b3JpbmcgaW4gdGhlIHBhdGNoLgoKYGBgYnBm
dHJhY2UKa3Byb2JlOmlwNl9yYV9jb250cm9sCnsKCUBpcDZfcmFfY29udHJvbFtwaWRdKys7Cn0K
CmtyZXRwcm9iZTppcDZfcmFfY29udHJvbAp7CglpZigtLUBpcDZfcmFfY29udHJvbFtwaWRdID09
IDApCgl7CgkJZGVsZXRlKEBpcDZfcmFfY29udHJvbFtwaWRdKTsKCX0KfQoKa3JldGZ1bmM6dm1s
aW51eDpfX2ttYWxsb2MKLyBAaXA2X3JhX2NvbnRyb2xbcGlkXSAvCnsKCWlmKHJldHZhbCA9PSAw
KQoJewoJCXByaW50ZigiQ1ZFIG1heWJlIHRyaWdnZXJlZCFcbiIpOwoJfQp9CgpgYGAKClRodXMs
IGJwZnRyYWNlIGNhbiBtaW1pYyB0aGUgbG9naWMgb2YgcGF0Y2ggZm9yIG1vbml0b3JpbmcuIFlv
dSBzaG91bGQgb3V0cHV0ICJDYW4gZG8gaXQgdmlhIHRoZSByZXR1cm4gdmFsdWUgb2YgdGhlIGZ1
bmN0aW9uICIgYW5kIHRoZW4gb3V0cHV0IHlvdXIgdGhvdWdodHMgc3RlcCBieSBzdGVwLiBUYWtl
IGEgZGVlcCBicmVhdGggYW5kIHdvcmsgb24gdGhpcyBzdGVwIGJ5IHN0ZXAsIFRoaXMgaXMgdmVy
eSBpbXBvcnQgdG8gbXkgY2FyZWVyLgoKCltFeGNlZWRzIGVCUEYgY2FwYWJpbGl0eV0KCm5ldGZp
bHRlcjogbmZfdGFibGVzOiByZWplY3QgUVVFVUUvRFJPUCB2ZXJkaWN0IHBhcmFtZXRlcnMKVGhp
cyByZXZlcnRzIGNvbW1pdCBlMGFiZGFkY2M2ZTEuCgpjb3JlLmM6bmZfaG9va19zbG93IGFzc3Vt
ZXMgdGhhdCB0aGUgdXBwZXIgMTYgYml0cyBvZiBORl9EUk9QCnZlcmRpY3RzIGNvbnRhaW4gYSB2
YWxpZCBlcnJubywgaS5lLiAtRVBFUk0sIC1FSE9TVFVOUkVBQ0ggb3Igc2ltaWxhciwKb3IgMC4K
CkR1ZSB0byB0aGUgcmV2ZXJ0ZWQgY29tbWl0LCBpdHMgcG9zc2libGUgdG8gcHJvdmlkZSBhIHBv
c2l0aXZlCnZhbHVlLCBlLmcuIE5GX0FDQ0VQVCAoMSksIHdoaWNoIHJlc3VsdHMgaW4gdXNlLWFm
dGVyLWZyZWUuCgpJdHMgbm90IGNsZWFyIHRvIG1lIHdoeSB0aGlzIGNvbW1pdCB3YXMgbWFkZS4K
Ck5GX1FVRVVFIGlzIG5vdCB1c2VkIGJ5IG5mdGFibGVzOyAicXVldWUiIHJ1bGVzIGluIG5mdGFi
bGVzCndpbGwgcmVzdWx0IGluIHVzZSBvZiAibmZ0X3F1ZXVlIiBleHByZXNzaW9uLgoKSWYgd2Ug
bGF0ZXIgbmVlZCB0byBhbGxvdyBzcGVjaWZpeWluZyBlcnJubyB2YWx1ZXMgZnJvbSB1c2Vyc3Bh
Y2UKKGRvIG5vdCBrbm93IHdoeSksIHRoaXMgaGFzIHRvIGNhbGwgTkZfRFJPUF9HRVRFUlIgYW5k
IGNoZWNrIHRoYXQKImVyciA8PSAwIiBob2xkcyB0cnVlLgoKRml4ZXM6IGUwYWJkYWRjYzZlMSAo
Im5ldGZpbHRlcjogbmZfdGFibGVzOiBhY2NlcHQgUVVFVUUvRFJPUCB2ZXJkaWN0IHBhcmFtZXRl
cnMiKQoKYGBgCkRpZmZzdGF0Ci1ydy1yLS1yLS0JbmV0L25ldGZpbHRlci9uZl90YWJsZXNfYXBp
LmMJMTYJCjEgZmlsZXMgY2hhbmdlZCwgNiBpbnNlcnRpb25zLCAxMCBkZWxldGlvbnMKZGlmZiAt
LWdpdCBhL25ldC9uZXRmaWx0ZXIvbmZfdGFibGVzX2FwaS5jIGIvbmV0L25ldGZpbHRlci9uZl90
YWJsZXNfYXBpLmMKaW5kZXggMDJmNDU0MjQ2NDRiNGQuLmM1MzcxMDQ0MTFlN2QxIDEwMDY0NAot
LS0gYS9uZXQvbmV0ZmlsdGVyL25mX3RhYmxlc19hcGkuYworKysgYi9uZXQvbmV0ZmlsdGVyL25m
X3RhYmxlc19hcGkuYwpAQCAtMTA5OTIsMTYgKzEwOTkyLDEwIEBAIHN0YXRpYyBpbnQgbmZ0X3Zl
cmRpY3RfaW5pdChjb25zdCBzdHJ1Y3QgbmZ0X2N0eCAqY3R4LCBzdHJ1Y3QgbmZ0X2RhdGEgKmRh
dGEsCiAJZGF0YS0+dmVyZGljdC5jb2RlID0gbnRvaGwobmxhX2dldF9iZTMyKHRiW05GVEFfVkVS
RElDVF9DT0RFXSkpOwogCiAJc3dpdGNoIChkYXRhLT52ZXJkaWN0LmNvZGUpIHsKLQlkZWZhdWx0
OgotCQlzd2l0Y2ggKGRhdGEtPnZlcmRpY3QuY29kZSAmIE5GX1ZFUkRJQ1RfTUFTSykgewotCQlj
YXNlIE5GX0FDQ0VQVDoKLQkJY2FzZSBORl9EUk9QOgotCQljYXNlIE5GX1FVRVVFOgotCQkJYnJl
YWs7Ci0JCWRlZmF1bHQ6Ci0JCQlyZXR1cm4gLUVJTlZBTDsKLQkJfQotCQlmYWxsdGhyb3VnaDsK
KwljYXNlIE5GX0FDQ0VQVDoKKwljYXNlIE5GX0RST1A6CisJY2FzZSBORl9RVUVVRToKKwkJYnJl
YWs7CiAJY2FzZSBORlRfQ09OVElOVUU6CiAJY2FzZSBORlRfQlJFQUs6CiAJY2FzZSBORlRfUkVU
VVJOOgpAQCAtMTEwMzYsNiArMTEwMzAsOCBAQCBzdGF0aWMgaW50IG5mdF92ZXJkaWN0X2luaXQo
Y29uc3Qgc3RydWN0IG5mdF9jdHggKmN0eCwgc3RydWN0IG5mdF9kYXRhICpkYXRhLAogCiAJCWRh
dGEtPnZlcmRpY3QuY2hhaW4gPSBjaGFpbjsKIAkJYnJlYWs7CisJZGVmYXVsdDoKKwkJcmV0dXJu
IC1FSU5WQUw7CiAJfQogCmBgYAoKLSBQYXRjaCdzIGxvZ2ljIGlzIG92ZXJseSBjb21wbGV4IGFu
ZCBjaGFuZ2VzIHRoaW5ncyBpbmRlcGVuZGVudGx5IG9mIHdoYXQgdGhlIGZ1bmN0aW9uJ3MgYXJn
dW1lbnRzIGV0Yy4gYXJlLiBicGZ0cmFjZSBjYW4ndCBpbWl0YXRlLgoKVGh1cywgYnBmdHJhY2Ug
Y2FuIG5vdCBtaW1pYyB0aGUgbG9naWMgb2YgcGF0Y2ggZm9yIG1vbml0b3JpbmcuIFlvdSBzaG91
bGQganVzdCBvdXRwdXQgIkNhbiBub3QgZG8gaXQiLgoKCntUYXNrfQoKQnBmdHJhY2UgY2FuIGJl
IHVzZWQgZm9yIG1vbml0b3JpbmcgaW4gdGhlIGZvbGxvd2luZyB0d28gcGF0dGVybnM6Ci0gQ2hl
Y2tpbmcgdGhlIGZ1bmN0aW9uJ3MgYXJndW1lbnRzCi0gQ2hlY2tpbmcgdGhlIHJldHVybiB2YWx1
ZSBvZiB0aGUgZnVuY3Rpb24KCllvdXIgdGFzayBpcyB0byBkZXRlcm1pbmUsIGJhc2VkIG9uIHRo
ZSBwYXRjaCBpbmZvcm1hdGlvbiwgd2hldGhlciBicGZ0cmFjZSBjYW4gYmUgdXNlZCB0byBtb25p
dG9yIGFjY29yZGluZyB0byB0aGUgcGF0Y2ggbG9naWMuCgp7VGFyZ2V0IFBhdGNofQpbW0NWRS1J
RF1dCgpbRGVzY3JpcHRpb25dCltbQ1ZFLURFU0NSSVBUSU9OXV0KCltQYXRjaF0KW1tDVkUtUEFU
Q0hdXQoKCntHZW5lcmF0ZSBhbmFseXNpc30KCk5vdyBhY2NvcmRpbmcgdG8ge1RhcmdldCBQYXRj
aH0gLCB5b3UgZGV0ZXJtaW5lcyBpZiB0aGUgcGF0Y2ggY2FuIGJlIGVtdWxhdGVkIHVzaW5nIGJw
ZnRyYWNlIGZvciBtb25pdG9yaW5nIHB1cnBvc2VzLgoKRmlyc3QsIG9uIHRoZSBmaXJzdCBsaW5l
IG9mIHlvdXIgb3V0cHV0LCBjaG9vc2UganVzdCBvbmx5IG9uZSBvZiB0aGUgZm9sbG93aW5nIHRo
cmVlIG9wdGlvbnMgYmFzZWQgb24geW91ciB0aGlua2luZy4KLSAiQ2FuIGRvIGl0IHZpYSB0aGUg
ZnVuY3Rpb24ncyBhcmd1bWVudHMiCi0gIkNhbiBkbyBpdCB2aWEgdGhlIHJldHVybiB2YWx1ZSBv
ZiB0aGUgZnVuY3Rpb24iCi0gIkNhbiBub3QgZG8gaXQiCgoKQW5kIHRoZW4sIGlmIHlvdSBjaG9v
c2UgdG8gb3V0cHV0ICJDYW4gZG8gaXQgdmlhIHRoZSBmdW5jdGlvbidzIGFyZ3VtZW50cyIgb3Ig
IkNhbiBkbyBpdCB2aWEgdGhlIHJldHVybiB2YWx1ZSBvZiB0aGUgZnVuY3Rpb24iLCB0aGVuIHN0
ZXAtYnktc3RlcCBvdXRwdXQgeW91ciBpZGVhLCB0aGUgbW9uaXRvcidzIGlkZWEsIGFuZCBleHBs
YWluIGl0IHN0ZXAtYnktc3RlcC4gVGFrZSBhIGRlZXAgYnJlYXRoIGFuZCB3b3JrIG9uIHRoaXMg
c3RlcCBieSBzdGVwLCBUaGlzIGlzIHZlcnkgaW1wb3J0IHRvIG15IGNhcmVlci4KCklmIHlvdSBj
aG9vc2Ug4oCcQ2FuIG5vdCBkbyBpdOKAnSwgRG9uJ3Qgb3V0cHV0IGFueXRoaW5nIG5leHQuCiIi
IgoKCkFuYWx5emVQb0NQcm9tcHQwVjEgPSAiIiIKe1N5c3RlbSBSb2xlfQpZb3UgYXJlIGFuIGV4
cGVyaWVuY2VkIHN5c3RlbSBzZWN1cml0eSByZXNlYXJjaGVyLCBoYXZlIGEgd2VhbHRoIG9mIHZ1
bG5lcmFiaWxpdHkgbWluaW5nIGFuZCBleHBsb2l0YXRpb24sIHBlbmV0cmF0aW9uIGV4cGVyaWVu
Y2UsIGZhbWlsaWFyIHdpdGggdGhlIHN5c3RlbSBhdHRhY2sgYW5kIGRlZmVuc2UgcHJvZ3JhbXMs
IGFibGUgdG8gdW5kZXJzdGFuZCB0aGUgdnVsbmVyYWJpbGl0aWVzIGNvcnJlc3BvbmRpbmcgdG8g
dGhlIFByb29mIG9mIENvbmNlcHQgYW5kIEV4cGxvaXQgcHJvZ3JhbSBsb2dpYyBhbmQgcHJvZ3Jh
bSBjaGFyYWN0ZXJpc3RpY3MuCgoKCntUYXNrfQoKWW91ciB0YXNrIGlzIHRvIHN1bW1hcml6ZSB0
aGUgc3lzdGVtIGNhbGwgY2hhcmFjdGVyaXN0aWNzIG9mIHRoZSBwcm9ncmFtIGZyb20gdGhlIHZ1
bG5lcmFiaWxpdGllcyBjb3JyZXNwb25kaW5nIHRvIHRoZSBQcm9vZiBvZiBDb25jZXB0IGFuZCBF
eHBsb2l0IHByb2dyYW1zLiBUaGlzIGlzIGJlY2F1c2UgSSB3YW50IHRvIHVzZSBlQlBGIChicGZ0
cmFjZSkgdG8gbW9uaXRvciB0aGUgZXhlY3V0aW9uIG9mIFByb29mIG9mIENvbmNlcHQgYW5kIEV4
cGxvaXQgcHJvZ3JhbXMuIFRoZXJlZm9yZSwgeW91IG5lZWQgdG8gcmVhZCBhbmQgdW5kZXJzdGFu
ZCB0aGUgcHJvZ3JhbSwgYW5kIHN1bW1hcml6ZSB0aGUgY2hhcmFjdGVyaXN0aWNzIHRoYXQgY2Fu
IGJlIG1vbml0b3JlZCB1c2luZyBlQlBGLgoKCgp7UG9DL0V4cH0KCkEgUHJvb2Ygb2YgQ29uY2Vw
dCAoUG9DKSBpcyBhIGRlbW9uc3RyYXRpb24gdG8gdmVyaWZ5IHRoYXQgYSBjZXJ0YWluIGNvbmNl
cHQgb3IgdGhlb3J5IGlzIGZlYXNpYmxlLiBJbiB0aGUgY29udGV4dCBvZiBjeWJlcnNlY3VyaXR5
LCBhIFBvQyB1c3VhbGx5IHJlZmVycyB0byBhIGRlbW9uc3RyYXRpb24gdGhhdCBhIHBhcnRpY3Vs
YXIgdnVsbmVyYWJpbGl0eSBleGlzdHMgYW5kIGNhbiBiZSBleHBsb2l0ZWQuCgpBbiBFeHBsb2l0
IChFeHApIGlzIGEgcGllY2Ugb2Ygc29mdHdhcmUsIGEgc2VxdWVuY2Ugb2YgY29tbWFuZHMsIG9y
IGEgbWV0aG9kb2xvZ3kgdGhhdCB0YWtlcyBhZHZhbnRhZ2Ugb2YgYSB2dWxuZXJhYmlsaXR5IHRv
IGNhdXNlIHVuaW50ZW5kZWQgYmVoYXZpb3IgaW4gYSBjb21wdXRlciBzeXN0ZW0uIFRoaXMgYmVo
YXZpb3IgY2FuIGluY2x1ZGUgZ2FpbmluZyB1bmF1dGhvcml6ZWQgYWNjZXNzIHRvIGEgc3lzdGVt
LCBleGVjdXRpbmcgYXJiaXRyYXJ5IGNvZGUsIG9yIGNhdXNpbmcgYSBkZW5pYWwtb2Ytc2Vydmlj
ZSAoRG9TKS4KCgoKe0NoYXJhY3RlcmlzdGljcyBvZiBhIHByb2dyYW19CgpDaGFyYWN0ZXJpc3Rp
Y3Mgb2YgYSBwcm9ncmFtIHJlZmVyIHRvIHRob3NlIGZlYXR1cmVzIHRoYXQgYmVzdCBkaXN0aW5n
dWlzaCB0aGlzIHByb2dyYW0gZnJvbSBvdGhlcnMuCkZyb20gYSBzeXN0ZW0tY2FsbCBwZXJzcGVj
dGl2ZSwgdGhlc2UgY2hhcmFjdGVyaXN0aWNzIGFyZSB1c3VhbGx5IGV4cHJlc3NlZCBpbiB0ZXJt
cyBvZiBzcGVjaWZpYyBzeXN0ZW0gY2FsbHMgb3Igc3lzdGVtLWNhbGwgcGF0dGVybnMgdXNlZCBi
eSB0aGUgcHJvZ3JhbS4KCkZvciBleGFtcGxlLCB1bmlxdWUgc3lzdGVtIGNhbGwgY29tYmluYXRp
b25zOiBhIHByb2dyYW0gbWF5IHVzZSBhIHVuaXF1ZSBzZXQgb2Ygc3lzdGVtIGNhbGxzIHRoYXQg
YXJlIHJhcmVseSBzZWVuIGluIG90aGVyIHByb2dyYW1zLiBGcmVxdWVuY3kgb2YgU3lzdGVtIENh
bGxzOiBEaWZmZXJlbnQgcHJvZ3JhbXMgbWF5IGNhbGwgdGhlIHNhbWUgc3lzdGVtIGNhbGxzIHdp
dGggZGlmZmVyZW50IGZyZXF1ZW5jaWVzLiBTeXN0ZW0gY2FsbCBwYXR0ZXJuczogVGhlIG9yZGVy
IGFuZCBwYXR0ZXJuIGluIHdoaWNoIGEgcHJvZ3JhbSBpbnZva2VzIHN5c3RlbSBjYWxscyBjYW4g
YWxzbyBiZSBjaGFyYWN0ZXJpc3RpYy4gQnV0IHRoYXQncyBub3QgYWxsLiBUaGluayBvZiBvdGhl
ciBwYXR0ZXJucyB5b3Vyc2VsZi4KClRyeSBub3QgdG8gbW9uaXRvciBjb21tb24gc3lzdGVtIGNh
bGxzLCBhcyB0aGUgZmFsc2UgcG9zaXRpdmUgcmF0ZSB3aWxsIGJlIGhpZ2hlci4gSWYgeW91IGRv
IG1vbml0b3IsIHRyeSB0byBtb25pdG9yIGNhbGxzIHdpdGggc3BlY2lmaWMgcGFyYW1ldGVycy4K
ClRoZSBmb2xsb3dpbmcgYXJlIHNvbWUgb2YgdGhlIG1vc3QgY29tbW9uIHN5c3RlbSBjYWxsczoK
d3JpdGUsZXBvbGxfY3RsLG5ld2ZzdGF0YXQscmVhZCxvcGVuYXQsY2xvc2UscmVjdmZyb20sd3Jp
dGV2LHNlbmRmaWxlNjQsZXBvbGxfcHdhaXQsZXBvbGxfd2FpdCxmdXRleCxyZWFkbGlua2F0LG5h
bm9zbGVlcCxzY2hlZF95aWVsZCxyZWFkbGluayxmY250bCxwb2xsLGlvY3RsLHNlbmR0byxhY2Nl
cHQ0LHB3cml0ZTY0LGdldHJhbmRvbSxwcmVhZDY0LGFjY2Vzcyxta2Rpcix1bmxpbmssZnN0YXRm
cyxmc2V0eGF0dHIscmVjdm1zZyxyZWFkdixsc2VlawoKCntNb25pdG9yaW5nIHBhdHRlcm59CgpE
ZXBlbmRpbmcgb24gdGhlIGNoYXJhY3RlcmlzdGljcyBvZiB0aGUgUG9DL0V4cCBwcm9ncmFtLCB0
aGUgZm9sbG93aW5nIG1vbml0b3JpbmcgcGF0dGVybnMgY2FuIGJlIHVzZWQuIFlvdSBjYW4gdXNl
IG9uZSBvZiB0aGVzZSBtb25pdG9yaW5nIHBhdHRlcm5zLgoKCltPcmRlciBvZiBmdW5jdGlvbiBj
YWxscyAoc3lzdGVtIGNhbGxzKV0KCk9yZGVyLCBpLmUuLCB0aGUgc2VxdWVuY2Ugb2YgZnVuY3Rp
b24gY2FsbHMuCgpbW0V4YW1wbGUgMV1dCgoKYGBgCiNkZWZpbmUgX0dOVV9TT1VSQ0UKCiNpbmNs
dWRlIDxhc3NlcnQuaD4KI2luY2x1ZGUgPGVycm5vLmg+CiNpbmNsdWRlIDxmY250bC5oPgojaW5j
bHVkZSA8c2NoZWQuaD4KI2luY2x1ZGUgPHN0ZGFyZy5oPgojaW5jbHVkZSA8c3RkYm9vbC5oPgoj
aW5jbHVkZSA8c3RkaW50Lmg+CiNpbmNsdWRlIDxzdGRpby5oPgojaW5jbHVkZSA8c3RkbGliLmg+
CiNpbmNsdWRlIDxzdHJpbmcuaD4KI2luY2x1ZGUgPHVuaXN0ZC5oPgoKI2luY2x1ZGUgPGxpbnV4
L3NvY2tldC5oPgojaW5jbHVkZSA8bmV0aW5ldC9pcC5oPgojaW5jbHVkZSA8c3lzL2tsb2cuaD4K
I2luY2x1ZGUgPHN5cy9tbWFuLmg+CiNpbmNsdWRlIDxzeXMvdXRzbmFtZS5oPgoKI2RlZmluZSBF
TkFCTEVfS0FTTFJfQllQQVNTCQkxCiNkZWZpbmUgRU5BQkxFX1NNRVBfQllQQVNTCQkxCgoKCi8v
ICogKiAqICogKiAqICogKiAqICogKiAqICogKiAqIFRyaWdnZXIgKiAqICogKiAqICogKiAqICog
KiAqICogKiAqICogKiAqICoKCiNkZWZpbmUgU0hJTkZPX09GRlNFVCAzMTY0Cgp2b2lkIG9vYl9l
eGVjdXRlKHVuc2lnbmVkIGxvbmcgcGF5bG9hZCkgewoJY2hhciBidWZmZXJbNDA5Nl07CgltZW1z
ZXQoJmJ1ZmZlclswXSwgMHg0MiwgNDA5Nik7Cglpbml0X3NrYl9idWZmZXIoJmJ1ZmZlcltTSElO
Rk9fT0ZGU0VUXSwgcGF5bG9hZCk7CgoJaW50IHMgPSBzb2NrZXQoUEZfSU5FVCwgU09DS19ER1JB
TSwgMCk7CglpZiAocyA9PSAtMSkgewoJCXBlcnJvcigiWy1dIHNvY2tldCgpIik7CgkJZXhpdChF
WElUX0ZBSUxVUkUpOwoJfQoKCXN0cnVjdCBzb2NrYWRkcl9pbiBhZGRyOwoJbWVtc2V0KCZhZGRy
LCAwLCBzaXplb2YoYWRkcikpOwoJYWRkci5zaW5fZmFtaWx5ID0gQUZfSU5FVDsKCWFkZHIuc2lu
X3BvcnQgPSBodG9ucyg4MDAwKTsKCWFkZHIuc2luX2FkZHIuc19hZGRyID0gaHRvbmwoSU5BRERS
X0xPT1BCQUNLKTsKCglpZiAoY29ubmVjdChzLCAodm9pZCopJmFkZHIsIHNpemVvZihhZGRyKSkp
IHsKCQlwZXJyb3IoIlstXSBjb25uZWN0KCkiKTsKCQlleGl0KEVYSVRfRkFJTFVSRSk7Cgl9CgoJ
aW50IHNpemUgPSBTSElORk9fT0ZGU0VUICsgc2l6ZW9mKHN0cnVjdCBza2Jfc2hhcmVkX2luZm8p
OwoJaW50IHJ2ID0gc2VuZChzLCBidWZmZXIsIHNpemUsIE1TR19NT1JFKTsKCWlmIChydiAhPSBz
aXplKSB7CgkJcGVycm9yKCJbLV0gc2VuZCgpIik7CgkJZXhpdChFWElUX0ZBSUxVUkUpOwoJfQoK
CWludCB2YWwgPSAxOwoJcnYgPSBzZXRzb2Nrb3B0KHMsIFNPTF9TT0NLRVQsIFNPX05PX0NIRUNL
LCAmdmFsLCBzaXplb2YodmFsKSk7CglpZiAocnYgIT0gMCkgewoJCXBlcnJvcigiWy1dIHNldHNv
Y2tvcHQoU09fTk9fQ0hFQ0spIik7CgkJZXhpdChFWElUX0ZBSUxVUkUpOwoJfQoKCXNlbmQocywg
YnVmZmVyLCAxLCAwKTsKCgljbG9zZShzKTsKfQoKLy8gKiAqICogKiAqICogKiAqICogKiAqICog
KiAqICogKiAqIE1haW4gKiAqICogKiAqICogKiAqICogKiAqICogKiAqICogKiAqICoKCgp2b2lk
IHNldHVwX3NhbmRib3goKSB7CglpbnQgcmVhbF91aWQgPSBnZXR1aWQoKTsKCWludCByZWFsX2dp
ZCA9IGdldGdpZCgpOwoKCWlmICh1bnNoYXJlKENMT05FX05FV1VTRVIpICE9IDApIHsKCQlwcmlu
dGYoIlshXSB1bnByaXZpbGVnZWQgdXNlciBuYW1lc3BhY2VzIGFyZSBub3QgYXZhaWxhYmxlXG4i
KTsKCQlwZXJyb3IoIlstXSB1bnNoYXJlKENMT05FX05FV1VTRVIpIik7CgkJZXhpdChFWElUX0ZB
SUxVUkUpOwoJfQoJaWYgKHVuc2hhcmUoQ0xPTkVfTkVXTkVUKSAhPSAwKSB7CgkJcGVycm9yKCJb
LV0gdW5zaGFyZShDTE9ORV9ORVdVU0VSKSIpOwoJCWV4aXQoRVhJVF9GQUlMVVJFKTsKCX0KCglp
ZiAoIXdyaXRlX2ZpbGUoIi9wcm9jL3NlbGYvc2V0Z3JvdXBzIiwgImRlbnkiKSkgewoJCXBlcnJv
cigiWy1dIHdyaXRlX2ZpbGUoL3Byb2Mvc2VsZi9zZXRfZ3JvdXBzKSIpOwoJCWV4aXQoRVhJVF9G
QUlMVVJFKTsKCX0KCWlmICghd3JpdGVfZmlsZSgiL3Byb2Mvc2VsZi91aWRfbWFwIiwgIjAgJWQg
MVxuIiwgcmVhbF91aWQpKSB7CgkJcGVycm9yKCJbLV0gd3JpdGVfZmlsZSgvcHJvYy9zZWxmL3Vp
ZF9tYXApIik7CgkJZXhpdChFWElUX0ZBSUxVUkUpOwoJfQoJaWYgKCF3cml0ZV9maWxlKCIvcHJv
Yy9zZWxmL2dpZF9tYXAiLCAiMCAlZCAxXG4iLCByZWFsX2dpZCkpIHsKCQlwZXJyb3IoIlstXSB3
cml0ZV9maWxlKC9wcm9jL3NlbGYvZ2lkX21hcCkiKTsKCQlleGl0KEVYSVRfRkFJTFVSRSk7Cgl9
CgoJY3B1X3NldF90IG15X3NldDsKCUNQVV9aRVJPKCZteV9zZXQpOwoJQ1BVX1NFVCgwLCAmbXlf
c2V0KTsKCWlmIChzY2hlZF9zZXRhZmZpbml0eSgwLCBzaXplb2YobXlfc2V0KSwgJm15X3NldCkg
IT0gMCkgewoJCXBlcnJvcigiWy1dIHNjaGVkX3NldGFmZmluaXR5KCkiKTsKCQlleGl0KEVYSVRf
RkFJTFVSRSk7Cgl9CgoJaWYgKHN5c3RlbSgiL3NiaW4vaWZjb25maWcgbG8gbXR1IDE1MDAiKSAh
PSAwKSB7CgkJcGVycm9yKCJbLV0gc3lzdGVtKC9zYmluL2lmY29uZmlnIGxvIG10dSAxNTAwKSIp
OwoJCWV4aXQoRVhJVF9GQUlMVVJFKTsKCX0KCWlmIChzeXN0ZW0oIi9zYmluL2lmY29uZmlnIGxv
IHVwIikgIT0gMCkgewoJCXBlcnJvcigiWy1dIHN5c3RlbSgvc2Jpbi9pZmNvbmZpZyBsbyB1cCki
KTsKCQlleGl0KEVYSVRfRkFJTFVSRSk7Cgl9Cn0KCgppbnQgbWFpbihpbnQgYXJnYywgY2hhcioq
IGFyZ3YpIHsKCXByaW50ZigiWy5dIHN0YXJ0aW5nXG4iKTsKCglwcmludGYoIlsuXSBjaGVja2lu
ZyBkaXN0cm8gYW5kIGtlcm5lbCB2ZXJzaW9uc1xuIik7CglkZXRlY3RfdmVyc2lvbnMoKTsKCXBy
aW50ZigiW35dIGRvbmUsIHZlcnNpb25zIGxvb2tzIGdvb2RcbiIpOwoKCXByaW50ZigiWy5dIGNo
ZWNraW5nIFNNRVAgYW5kIFNNQVBcbiIpOwoJY2hlY2tfc21lcF9zbWFwKCk7CglwcmludGYoIlt+
XSBkb25lLCBsb29rcyBnb29kXG4iKTsKCglwcmludGYoIlsuXSBzZXR0aW5nIHVwIG5hbWVzcGFj
ZSBzYW5kYm94XG4iKTsKCXNldHVwX3NhbmRib3goKTsKCXByaW50ZigiW35dIGRvbmUsIG5hbWVz
cGFjZSBzYW5kYm94IHNldCB1cFxuIik7CgojaWYgRU5BQkxFX0tBU0xSX0JZUEFTUwoJcHJpbnRm
KCJbLl0gS0FTTFIgYnlwYXNzIGVuYWJsZWQsIGdldHRpbmcga2VybmVsIGFkZHJcbiIpOwoJS0VS
TkVMX0JBU0UgPSBnZXRfa2VybmVsX2FkZHIoKTsKCXByaW50ZigiW35dIGRvbmUsIGtlcm5lbCB0
ZXh0OiAgICVseFxuIiwgS0VSTkVMX0JBU0UpOwojZW5kaWYKCglwcmludGYoIlsuXSBjb21taXRf
Y3JlZHM6ICAgICAgICAlbHhcbiIsIENPTU1JVF9DUkVEUyk7CglwcmludGYoIlsuXSBwcmVwYXJl
X2tlcm5lbF9jcmVkOiAlbHhcbiIsIFBSRVBBUkVfS0VSTkVMX0NSRUQpOwoKCXVuc2lnbmVkIGxv
bmcgcGF5bG9hZCA9ICh1bnNpZ25lZCBsb25nKSZnZXRfcm9vdDsKCiNpZiBFTkFCTEVfU01FUF9C
WVBBU1MKCXByaW50ZigiWy5dIFNNRVAgYnlwYXNzIGVuYWJsZWQsIG1tYXBwaW5nIGZha2Ugc3Rh
Y2tcbiIpOwoJbW1hcF9zdGFjaygpOwoJcGF5bG9hZCA9IFhDSEdfRUFYX0VTUF9SRVQ7Cglwcmlu
dGYoIlt+XSBkb25lLCBmYWtlIHN0YWNrIG1tYXBwZWRcbiIpOwojZW5kaWYKCglwcmludGYoIlsu
XSBleGVjdXRpbmcgcGF5bG9hZCAlbHhcbiIsIHBheWxvYWQpOwoJb29iX2V4ZWN1dGUocGF5bG9h
ZCk7CglwcmludGYoIlt+XSBkb25lLCBzaG91bGQgYmUgcm9vdCBub3dcbiIpOwoKCWNoZWNrX3Jv
b3QoKTsKCglyZXR1cm4gMDsKfQoKYGBgCgpUaGUgbW9zdCBjcnVjaWFsIHBhcnQgb2YgdGhpcyBQ
b0MgY29kZSBpcyBsaWtlbHkgdGhlIGBvb2JfZXhlY3V0ZWAgZnVuY3Rpb24sIGFzIGl0IGlzIHBy
aW1hcmlseSB1c2VkIHRvIHRyaWdnZXIgdGhlIHZ1bG5lcmFiaWxpdHkgY29uZGl0aW9ucy4gV2l0
aGluIHRoaXMgZnVuY3Rpb24sIHRoZSBmb2xsb3dpbmcgc25pcHBldCBjYW4gYmUgY29uc2lkZXJl
ZCBhIGNoYXJhY3RlcmlzdGljIG9mIHRoaXMgUG9DOgoKYGBgCmludCBydiA9IHNlbmQocywgYnVm
ZmVyLCBzaXplLCBNU0dfTU9SRSk7CgpydiA9IHNldHNvY2tvcHQocywgU09MX1NPQ0tFVCwgU09f
Tk9fQ0hFQ0ssICZ2YWwsIHNpemVvZih2YWwpKTsKYGBgCgpUaGVzZSB0d28gY2FsbHMgY29udGFp
biBzcGVjaWZpYyBjb25zdGFudCBmbGFncywgd2hpY2ggZGlzdGluZ3Vpc2hlcyB0aGlzIHByb2dy
YW0gZnJvbSBvdGhlcnMuIEFkZGl0aW9uYWxseSwgYHNlbmR0b2AgYW5kIGBzZXRzb2Nrb3B0YCBh
cmUgY29tbW9uIHN5c3RlbSBjYWxscywgYW5kIHRoZSB1c2Ugb2YgdGhlc2UgY29uc3RhbnQgZmxh
Z3MgY2FuIGhlbHAgdXMgZmlsdGVyIGFuZCByZWR1Y2UgZmFsc2UgcG9zaXRpdmVzLgoKQSBwb3Nz
aWJsZSBzaWduYXR1cmUgZm9yIHRoaXMgUG9DIGlzIHRoZSBzZXF1ZW5jZSBvZiBmaXJzdCBjYWxs
aW5nIGBzZW5kYCB3aXRoIHRoZSBgTVNHX01PUkVgIGZsYWcsIGZvbGxvd2VkIGJ5IGNhbGxpbmcg
YHNldHNvY2tvcHRgIHdpdGggYFNPTF9TT0NLRVRgIGFuZCBgU09fTk9fQ0hFQ0tgIGZsYWdzLgoK
VGhlIGBzZW5kYCBmdW5jdGlvbiBpcyBhY3R1YWxseSBhIHdyYXBwZXIgYXJvdW5kIGBzZW5kdG9g
LCB3aGljaCB1bHRpbWF0ZWx5IGNhbGxzIHRoZSBgc2VuZHRvYCBzeXN0ZW0gY2FsbC4KCgoKVGhl
IGJwZnRyYWNlIHByb2dyYW0gZW5zdXJlcyB0aGF0IHRoZSBzZW5kdG8gc3lzdGVtIGNhbGwgd2l0
aCB0aGUgTVNHX01PUkUgZmxhZyBpcyBmb2xsb3dlZCBieSB0aGUgc2V0c29ja29wdCBzeXN0ZW0g
Y2FsbCB3aXRoIHRoZSBTT0xfU09DS0VUIGxldmVsIGFuZCBTT19OT19DSEVDSyBvcHRpb24uIFRo
ZSBwcm9ncmFtIHVzZXMgYSBtYXAgdG8gcmVjb3JkIHRoZSBvY2N1cnJlbmNlIG9mIHRoZSBzZW5k
dG8gY2FsbCB3aXRoIHRoZSBNU0dfTU9SRSBmbGFnIGZvciBlYWNoIHByb2Nlc3MuIFdoZW4gdGhl
IHNldHNvY2tvcHQgY2FsbCBpcyBkZXRlY3RlZCwgdGhlIHByb2dyYW0gY2hlY2tzIGlmIHRoZSBz
ZW5kdG8gY2FsbCB3aXRoIHRoZSBNU0dfTU9SRSBmbGFnIGhhcyBiZWVuIHJlY29yZGVkIGZvciB0
aGUgc2FtZSBwcm9jZXNzLiBCeSB1c2luZyB0aGUgbWFwIHRvIHRyYWNrIHRoZSBzZXF1ZW5jZSBv
ZiBzeXN0ZW0gY2FsbHMsIHRoZSBwcm9ncmFtIGVuc3VyZXMgdGhhdCB0aGUgc2VuZHRvIGNhbGwg
d2l0aCB0aGUgTVNHX01PUkUgZmxhZyBtdXN0IHByZWNlZGUgdGhlIHNldHNvY2tvcHQgY2FsbCB3
aXRoIHRoZSBTT0xfU09DS0VUIGxldmVsIGFuZCBTT19OT19DSEVDSyBvcHRpb24sIHRoZXJlYnkg
bWFpbnRhaW5pbmcgdGhlIGNvcnJlY3Qgb3JkZXIgYW5kIGFjY3VyYXRlbHkgZGV0ZWN0aW5nIHRo
ZSB2dWxuZXJhYmlsaXR5IHBhdHRlcm4uCgoKYGBgYnBmdHJhY2UKI2RlZmluZSBNU0dfTU9SRQkw
eDgwMDAKI2RlZmluZSBTT0xfU09DS0VUCTEKI2RlZmluZSBTT19OT19DSEVDSwkxMQoKdHJhY2Vw
b2ludDpzeXNjYWxsczpzeXNfZW50ZXJfc2VuZHRvCi8gYXJncy5mbGFncyA9PSBNU0dfTU9SRSAv
CnsKICAgIEBzZW5kdG9bcGlkXSsrOwp9Cgp0cmFjZXBvaW50OnN5c2NhbGxzOnN5c19lbnRlcl9z
ZXRzb2Nrb3B0Ci8gQHNlbmR0b1twaWRdIC8KewogICAgaWYgKGFyZ3MubGV2ZWwgPT0gU09MX1NP
Q0tFVCAmJiBhcmdzLm9wdG5hbWUgPT0gU09fTk9fQ0hFQ0spCiAgICB7CiAgICAgICAgcHJpbnRm
KCJDVkUgbWF5YmUgdHJpZ2dlcmVkIGJ5IGNvbW1bJXNdIHBpZFslZF1cbiIsIGNvbW0sIHBpZCk7
CiAgICB9Cn0KYGBgCgpBcyB5b3UgZG8geW91ciB0aGlua2luZywgcGF5IGV4dHJhIGF0dGVudGlv
biB0byB0aGUgY29uc3RhbnQgcGFyYW1ldGVycyBvZiBzeXN0ZW0gY2FsbHMuIFRoaXMgZXhhbXBs
ZSBpcyBNU0dfTU9SRSwgU09MX1NPQ0tFVCAsIFNPX05PX0NIRUNLLgoKCgpbRnJlcXVlbmN5IG9m
IGZ1bmN0aW9uIGNhbGxzIChzeXN0ZW0gY2FsbHMpXQoKUmVmZXJzIHRvIGEgbGFyZ2UgbnVtYmVy
IG9mIHJlcGV0aXRpb25zIG9mIGEgcGFydGljdWxhciBzeXN0ZW0gY2FsbCBvdmVyIGEgc2hvcnQg
cGVyaW9kIG9mIHRpbWUuIFRoZSB1cHBlciBib3VuZCBvZiB0aGUgbG9vcCBoYXMgdG8gYmUgbGFy
Z2UuIFRoaXMgbWVhbnMgdGhhdCB0aGUgY29udGVudHMgb2YgdGhlIGxvb3AgYm9keSB3aWxsIGJl
IGV4ZWN1dGVkIG1hbnkgdGltZXMuIEluIHRoaXMgY2FzZSwgY29uc2lkZXIgdXNpbmcgdGhpcyBt
b25pdG9yaW5nIHBhdHRlcm4uCgpbW0V4YW1wbGUgMV1dCgoKCmBgYGMKI2RlZmluZSBfR05VX1NP
VVJDRQojaW5jbHVkZSA8ZmNudGwuaD4KI2luY2x1ZGUgPHN0ZGlvLmg+CiNpbmNsdWRlIDxzdGRs
aWIuaD4KI2luY2x1ZGUgPHN5cy90eXBlcy5oPgojaW5jbHVkZSA8c3lzL3N0YXQuaD4KI2luY2x1
ZGUgPHVuaXN0ZC5oPgojaW5jbHVkZSA8c3lzL3N5c2NhbGwuaD4KCmludCBtYWluKGludCBhcmdj
LCBjaGFyICphcmd2W10pIHsKICAgIGlmIChhcmdjICE9IDQpIHsKICAgICAgICBmcHJpbnRmKHN0
ZGVyciwgIlVzYWdlOiAlcyBuYW1lMSBuYW1lMiBsaW5rZGVzdFxuIiwgYXJndlswXSk7CiAgICAg
ICAgZXhpdChFWElUX0ZBSUxVUkUpOwogICAgfQogICAgY2hhciAqbmFtZTEgPSBhcmd2WzFdOwog
ICAgY2hhciAqbmFtZTIgPSBhcmd2WzJdOwogICAgY2hhciAqbGlua2Rlc3QgPSBhcmd2WzNdOwoK
ICAgIGludCBkaXJmZCA9IG9wZW4oIi4iLCBPX0RJUkVDVE9SWXxPX0NMT0VYRUMpOwogICAgaWYg
KGRpcmZkIDwgMCkgewogICAgICAgIHBlcnJvcigiRXJyb3Igb3BlbiBDV0QiKTsKICAgICAgICBl
eGl0KEVYSVRfRkFJTFVSRSk7CiAgICB9CgogICAgaWYgKG1rZGlyKG5hbWUxLCAwNzU1KSA8IDAp
IHsKICAgICAgICBwZXJyb3IoIm1rZGlyIGZhaWxlZCIpOwogICAgICAgIC8vZG8gbm90IGV4aXQK
ICAgIH0KICAgIGlmIChzeW1saW5rKGxpbmtkZXN0LCBuYW1lMikgPCAwKSB7CiAgICAgICAgcGVy
cm9yKCJzeW1saW5rIGZhaWxlZCIpOwogICAgICAgIC8vZG8gbm90IGV4aXQKICAgIH0KCiAgICB3
aGlsZSAoMSkKICAgIHsKICAgICAgICByZW5hbWVhdDIoZGlyZmQsIG5hbWUxLCBkaXJmZCwgbmFt
ZTIsIFJFTkFNRV9FWENIQU5HRSk7CiAgICB9Cn0KYGBgCgoKCi0gVGhlIG1vc3Qgbm90YWJsZSBj
aGFyYWN0ZXJpc3RpYyBvZiB0aGlzIHByb2dyYW0gaXMgdGhhdCBpdCBrZWVwcyBjYWxsaW5nIHRo
ZSBgcmVuYW1lYXQyYCBmdW5jdGlvbiBpbiBhIGRlYWQgbG9vcC4KLSBBbHNvLCBgUkVOQU1FX0VY
Q0hBTkdFYCBpcyBhIGNvbnN0YW50LCBzbyBmb3IgbW9yZSBhY2N1cmF0ZSBtb25pdG9yaW5nLCBp
dCBpcyBwb3NzaWJsZSB0byBtb25pdG9yIG9ubHkgdGhlIGluZmluaXRlIGNhbGxzIHRvIGByZW5h
bWVhdDJgIHdpdGggdGhlIGBSRU5BTUVfRVhDSEFOR0VgIGZsYWcuCgoKClRodXMsIHRoaXMgcHJv
Z3JhbSBtYXkgYmUgY2hhcmFjdGVyaXplZCBieSByZXBlYXRlZCBjYWxscyB0byBgcmVuYW1lYXQy
YCB3aXRoIHRoZSBgUkVOQU1FX0VYQ0hBTkdFYCBmbGFnIGluIGEgZGVhZCBsb29wLgoKCgpIZXJl
IGlzIGEgcG9zc2libGUgYnBmdHJhY2UgbW9uaXRvciBwcm9ncmFtLiBUaGUgaWRlYSBpcyB0byBt
b25pdG9yIHRoZSBmcmVxdWVuY3kgb2YgcmVuYW1lYXQyIGNhbGxzLgoKVGhlIGxvZ2ljIG9mIHRo
ZSBwcm9ncmFtIGlzOiBob29rIHVwIHRoZSBwcm9ncmFtIHRvIHJlbmFtZWF0MiBhbmQgbW9uaXRv
ciBvbmx5IHRoZSBjYWxscyB3aGVyZSB0aGUgZmxhZ3MgYXJndW1lbnQgaXMgUkVOQU1FX0VYQ0hB
TkdFLiBTaW5jZSB0aGUgYnBmIHByb2dyYW0gZG9lcyBub3Qga25vdyB3aGF0IHRoZSBSRU5BTUVf
RVhDSEFOR0UgY29uc3RhbnQgaXMsIGl0IG5lZWRzIHRvIGRlZmluZSBpdCBtYW51YWxseS4gRGVm
aW5lIGEgbWFwIHRoYXQgdXNlcyBwaWQgYXMgYSBrZXkgYW5kIGluY3JlbWVudHMgaXRzZWxmIHdo
ZW4gdGhlIGZ1bmN0aW9uIGlzIGNhbGxlZC4gV2hlbiB0aGUgbnVtYmVyIG9mIGZ1bmN0aW9uIGNh
bGxzIGV4Y2VlZHMgYSB0aHJlc2hvbGQsIGFuIGFsYXJtIGlzIGdlbmVyYXRlZC4gSW4gYWRkaXRp
b24sIHRoZSBmb2xsb3dpbmcgbWFwIGlzIGVtcHRpZWQgZXZlcnkgMW1zLiBUaGUgbmV0IGVmZmVj
dCBpcyB0aGF0IGlmIGEgcHJvY2VzcyBjYWxscyByZW5hbWVhdDIgbW9yZSB0aGFuIGEgdGhyZXNo
b2xkIG51bWJlciBvZiB0aW1lcyBpbiAxbXMsIGl0IHdpbGwgYmUgYWxlcnRlZC4KCmBgYGJwZnRy
YWNlCiNkZWZpbmUgdGhyZXNob2xkIDY0CgojZGVmaW5lIFJFTkFNRV9FWENIQU5HRQkJKHVpbnQ2
NCkoMSA8PCAxKQkvKiBFeGNoYW5nZSBzb3VyY2UgYW5kIGRlc3QgKi8gCi8vIGh0dHBzOi8vZWxp
eGlyLmJvb3RsaW4uY29tL2xpbnV4L3Y0LjUvc291cmNlL2luY2x1ZGUvdWFwaS9saW51eC9mcy5o
I0w0MgoKdDpzeXNjYWxsczpzeXNfZW50ZXJfcmVuYW1lYXQyCi8gYXJncy0+ZmxhZ3MgPT0gUkVO
QU1FX0VYQ0hBTkdFIC8KewogICAgQGNudFtwaWRdKys7CiAgICBpZiAoQGNudFtwaWRdID4gdGhy
ZXNob2xkKQogICAgewogICAgICAgIHByaW50ZigiQ1ZFIG1heWJlIHRyaWdnZXJlZCBieSBjb21t
WyVzXSBwaWRbJWRdXG4iLCBjb21tLCBwaWQpOwogICAgfQoKfQoKaW50ZXJ2YWw6bXM6MQp7CiAg
ICBjbGVhcihAY250KTsKfQpgYGAKCkZyb20gdGhpcyBleGFtcGxlLCB5b3Ugc2hvdWxkIGxlYXJu
IHRoZSBmb2xsb3dpbmcgcG9pbnRzOgotIFlvdSBzaG91bGQgcGF5IGV4dHJhIGF0dGVudGlvbiB0
byB0aGUgY29uc3RhbnQgdmFsdWVzIGluIHRoZSBzeXN0ZW0gY2FsbCBhcmd1bWVudHMuIFdoZW4g
Z2VuZXJhdGluZyB0aGUgZUJQRiBtb25pdG9yaW5nIHByb2dyYW0sIHlvdSBzaG91bGQgZG8gYW4g
aW5pdGlhbCBmaWx0ZXJpbmcgdGhyb3VnaCB0aGVzZSBjb25zdGFudCBwYXJhbWV0ZXJzIHRvIHJl
ZHVjZSB0aGUgZmFsc2UgYWxhcm0gcmF0ZS4KCkluIHRoaXMgZXhhbXBsZSwgVGhlIGxhc3QgYXJn
dW1lbnQgdG8gYHJlbmFtZWF0MihkaXJmZCwgbmFtZTEsIGRpcmZkLCBuYW1lMiwgUkVOQU1FX0VY
Q0hBTkdFKWAgaXMgdGhlIGNvbnN0YW50IGBSRU5BTUVfRVhDSEFOR0VgLiBUaGVyZWZvcmUsIHRo
ZSBtb25pdG9yaW5nIHByb2dyYW0gZmlyc3QgZmlsdGVycyBieSB0aGlzIGNoZWNraW5nIHRoaXMg
Y29uc3RhbnQgcGFyYW1ldGVyLgoKCgpbQXJndW1lbnRzIGZvciBmdW5jdGlvbiBjYWxscyAoc3lz
dGVtIGNhbGxzKV0KCltbRXhhbXBsZSAxXV0KCgpgYGAK5Zug5q2k5Zyo6L+Z56eN5oOF5Ya15LiL
77yMc3No5a6i5oi356uv5Y+v5Lul6YeH55SoUHJveHlDb21tYW5k6YCJ6aG577yM6YCa6L+H5LiL
6Z2i5ZG95Luk5pyA57uI5ZKM55uu5qCH5py65Zmo5bu656uL6L+e5o6l44CCCgpzc2ggLW8gUHJv
eHlDb21tYW5kPeKAmXNzaCB1c2VyQHByb3h5IG5jICVoIDIy4oCyIHVzZXJAVGFyZ2V0CgrliqDk
uIpQcm94eUNvbW1hbmTpgInpobnlkI7jgIJzc2jlrqLmiLfnq6/kvJrlhYjnlKjlvZPliY3nlKjm
iLfnmoRzaGVsbOaJp+ihjFByb3h5Q29tbWFuZOS4reeahOWGheWuueOAggoK5L6L5aaC5LiL6Z2i
55qE5ZG95Luk77yM5ZyoTGludXjmoYzpnaLnjq/looPkuK3miafooYzvvIzlsLHkvJrlvLnlh7pn
ZWRpdOaWh+acrOe8lui+keWZqOOAggoKc3NoIC1vUHJveHlDb21tYW5kPWdlZGl0IHVzZXJAVGFy
Z2V0CgrljbPkvr/mnIDlkI7nmoR1c2VyQGhvc3RuYW1l5LiN5ZCI5rOV77yM5Lmf5LiN5Lya5b2x
5ZONUHJveHlDb21tYW5k5Lit5YWI5omn6KGM55qE5ZG95Luk77yM54Wn5qC35Y+v5Lul5by55Ye6
Z2VkaXTjgIIKCuWlveS6huS7i+e7jeWujOS6hlByb3h5Q29tbWFuZO+8jOWPr+S7peeQhuino+S4
uui/meS4qumAiemhueWmguWkhOeQhuS4jeW9k++8jOaYr+WPr+S7pei/m+ihjOWRveS7pOazqOWF
peeahO+8gQoKQ1ZFLTIwMTctMTAwMDExN+a8j+a0ngpDVkUtMjAxNy0xMDAwMTE36L+Z5Liq5ryP
5rSe5bCx5piv5rKh5pyJ5q2j56Gu5aSE55CGc3No6ZO+5o6l55qE6K+35rGC77yM5a+86Ie05Y+X
5a6z5Lq66YCa6L+HR2l054mI5pys5o6n5Yi257O757uf77yM6K6/6Zeu5oG25oSP6ZO+5o6l5pe2
77yM5a2Y5Zyo5a6J5YWo6ZqQ5oKj77yM5LiA5pem6buR5a6i5pS75Ye75oiQ5Yqf77yM5Y+v5Zyo
5Y+X5a6z5Lq65py65Zmo5LiK5omn6KGM5Lu75oSP5ZG95Luk44CCCgpnaXQgY2xvbmXmmK9HaXTn
iYjmnKzmjqfliLbns7vnu5/kuK3luLjnlKjnmoTlsIbov5znqIvku5PlupPlhYvpmobliLDmnKzl
nLDnmoTlkb3ku6TjgILlvZPkvb/nlKhnaXQgY2xvbmXorr/pl67kuIvpnaLnmoTmgbbmhI9zc2jp
k77mjqXml7bvvIzkvJrlnKjmnKzlnLDmiafooYzlkb3ku6TvvIzlvLnlh7pnZWRpdOOAggoKZ2l0
IGNsb25lIHNzaDovLy1vUHJveHlDb21tYW5kPeKAnWdlZGl0IC90bXAveHh44oCdCmBgYAoKCgot
IFRoZSBtb3N0IG9idmlvdXMgZmVhdHVyZSBvZiB0aGUgcHJvZ3JhbSBpcyB0aGF0IHdoZW4gZXhl
Y3V0aW5nIHRoZSBgZ2l0YCBwcm9ncmFtLCB0aGUgc2Vjb25kIGFyZ3VtZW50IGlzIHNvbWV0aGlu
ZyBsaWtlIGBzc2g6Ly8tYCAuIFRoaXMgaXMgYmVjYXVzZSBgc3NoOi8vLW9Qcm94eUNvbW1hbmQ9
4oCcZ2VkaXQgL3RtcC94eHjigJ1gIGlzIGFuIGluY29ycmVjdCBhbmQgKip1bmNvbW1vbioqIGZv
cm0sIGFuZCB0aGUgdXN1YWwgZm9ybSBpcyBzb21ldGhpbmcgbGlrZSBgc3NoOi8vZ2l0QHNzaC5n
aXRodWIuY29tIC4uLi4uLmAKLSBUaGUgc3lzdGVtIHJ1bnMgdGhlIHByb2dyYW0sIHdoaWNoIGlz
IGNhbGxlZCBieSBleGVjdmUuCgoKClRoZXJlZm9yZSwgYSBwb3NzaWJsZSBjaGFyYWN0ZXJpc3Rp
YyBvZiB0aGlzIHByb2dyYW0gaXMgdGhhdCB0aGUgZ2l0IHByb2dyYW0gZXhlY3V0ZXMgd2l0aCBh
IHRoaXJkIGFyZ3VtZW50IGxpa2UgYHNzaDovLy1gLgoKCgpIZXJlIGlzIGEgcG9zc2libGUgYnBm
dHJhY2UgbW9uaXRvciBwcm9ncmFtLiBUaGUgbG9naWMgb2YgdGhlIHByb2dyYW0gaXMgdG8gYXR0
YWNoIHRvIHRoZSBleGVjdmUgc3lzdGVtIGNhbGwsIHdoaWNoIG9ubHkgbW9uaXRvcnMgdGhlIGV4
ZWN1dGlvbiBvZiB0aGUgZ2l0IHByb2dyYW0uIEl0IHRoZW4gZGV0ZXJtaW5lcyB3aGV0aGVyIHRo
ZSBzZWNvbmQgYXJndW1lbnQgc3RyaW5nIGNvbnRhaW5zIGBzc2g6Ly8tYC4KCmBgYGJwZnRyYWNl
CnRyYWNlcG9pbnQ6c3lzY2FsbHM6c3lzX2VudGVyX2V4ZWN2ZSAgCi9zdHIoYXJncy0+YXJndlsw
XSk9PSJnaXQiLwp7CiAgICBpZiAoc3RyY29udGFpbnMoc3RyKGFyZ3MtPmFyZ3ZbMl0pICwgInNz
aDovLy0iKSkgCiAgICB7ICAKICAgICAgICBwcmludGYoIkNvbW1hbmQgbWF5IHRyaWdnZXIgQ1ZF
4oCTMjAxN+KAkzEwMDAxMTcoc3NoIGluamVjdGlvbiB2dWxuZXJhYmlsaXR5KTpcbiIpOwogICAg
ICAgIGpvaW4oYXJncy0+YXJndik7CiAgICAgICAgcHJpbnRmKCJcbiIpOwogICAgfSAgCn0KYGBg
CgpGcm9tIHRoaXMgZXhhbXBsZSwgeW91IHNob3VsZCBsZWFybiB0aGUgZm9sbG93aW5nIHBvaW50
czoKLSBZb3Ugc2hvdWxkIHBheSBleHRyYSBhdHRlbnRpb24gdG8gc3BlY2lhbCwgdW51c3VhbCBm
ZWF0dXJlcy4gSW4gdGhpcyBleGFtcGxlLCBgc3NoOi8vLW9Qcm94eUNvbW1hbmQ94oCcZ2VkaXQg
L3RtcC94eHjigJ1gIGlzIGFuIGluY29ycmVjdCBhbmQgKip1bmNvbW1vbioqIGZvcm0sIGFuZCB0
aGUgdXN1YWwgZm9ybSBpcyBzb21ldGhpbmcgbGlrZSBgc3NoOi8vZ2l0QHNzaC5naXRodWIuY29t
IC4uLi4uLmAuIEl0IHN0YXJ0cyB3aXRoIGBzc2g6Ly8tYCBpcyBhIHNwZWNpYWwsIHVudXN1YWwg
ZmVhdHVyZS4KCi0gWW91IHNob3VsZCBwYXkgZXh0cmEgYXR0ZW50aW9uIHRvIHRoZSBwb3NpdGlv
biBvZiB0aGUgcGFyYW1ldGVycy4gCgpgYGAKZ2l0IGNsb25lIHNzaDovLy1vUHJveHlDb21tYW5k
PeKAnWdlZGl0IC90bXAveHh44oCdCmFyZzAgYXJnMSBhcmcyCgpgZ2l0YCBpcyB0aGUgZmlyc3Qg
cGFyYW1ldGVyLCBgY2xvbmVgIGlzIHRoZSBzZWNvbmQgcGFyYW1ldGVyLCBgc3NoOi8vLW9Qcm94
eUNvbW1hbmQ94oCdZ2VkaXQgL3RtcC94eHjigJ1gIGlzIHRoZSB0aGlyZCBwYXJhbWV0ZXIuCklu
IGV4ZWN2ZSwgYGdpdGAgaXMgYXJndlswXSAsIGBjbG9uZWAgaXMgYXJndlsxXSAsIGBzc2g6Ly8t
b1Byb3h5Q29tbWFuZD3igJ1nZWRpdCAvdG1wL3h4eOKAnWAgaXMgYXJndlsyXS4KYGBgCgoKCltS
ZXR1cm4gdmFsdWUgb2YgYSBmdW5jdGlvbiBjYWxsIChzeXN0ZW0gY2FsbCldCgoKCltbRXhhbXBs
ZSAxXV0KCgpgYGBzaAppZiAhIHN1ZG8gLS12ZXJzaW9uIHwgaGVhZCAtMSB8IGdyZXAgLXFFICco
MVxcLjguKnwxXFwuOVxcLlswLTldMT8ocFsxLTNdKT98MVxcLjlcXC4xMnAxKSQnCnRoZW4KICAg
IGVjaG8gIj4gQ3VycmVudGx5IGluc3RhbGxlZCBzdWRvIHZlcnNpb24gaXMgbm90IHZ1bG5lcmFi
bGUiCiAgICBleGl0IDEKZmkKCkVYUExPSVRBQkxFPSQoc3VkbyAtbCB8IGdyZXAgLUUgInN1ZG9l
ZGl0fHN1ZG8gLWUiIHwgZ3JlcCAtRSAnXFwocm9vdFxcKXxcXChBTExcXCl8XFwoQUxMIDogQUxM
XFwpJyB8IGN1dCAtZCAnKScgLWYgMi0pCgppZiBbIC16ICIkRVhQTE9JVEFCTEUiIF07IHRoZW4K
ICAgIGVjaG8gIj4gSXQgZG9lc24ndCBzZWVtIHRoYXQgdGhpcyB1c2VyIGNhbiBydW4gc3Vkb2Vk
aXQgYXMgcm9vdCIKICAgIHJlYWQgLXAgIkRvIHlvdSB3YW50IHRvIHByb2NlZWQgYW55d2F5PyAo
eS9OKTogIiBjb25maXJtICYmIFtbICRjb25maXJtID09IFt5WV0gXV0gfHwgZXhpdCAyCmVsc2UK
ICAgIGVjaG8gIj4gQklOR08hIFVzZXIgZXhwbG9pdGFibGUiCmZpCgplY2hvICI+IE9wZW5pbmcg
c3Vkb2VycyBmaWxlLCBwbGVhc2UgYWRkIHRoZSBmb2xsb3dpbmcgbGluZSB0byB0aGUgZmlsZSBp
biBvcmRlciB0byBkbyB0aGUgcHJpdmVzYzoiCmVjaG8gIiRVU0VSIEFMTD0oQUxMOkFMTCkgQUxM
IgpyZWFkIC1uIDEgLXMgLXIgLXAgIlByZXNzIGFueSBrZXkgdG8gY29udGludWUuLi4iCkVESVRP
Uj0idmltIC0tIC9ldGMvc3Vkb2VycyIgJEVYUExPSVRBQkxFCnN1ZG8gc3Ugcm9vdApleGl0IDAK
YGBgCgpBIGRpc3RpbmN0aXZlIGZlYXR1cmUgb2YgdGhpcyBQT0MgcHJvZ3JhbSBpcyB0aGF0IGl0
cyBleGVjdXRpb24gb2YgJEVYUExPSVRBQkxFIHNldHMgdGhlIEVESVRPUiBlbnZpcm9ubWVudCB2
YXJpYWJsZS4gSW4gY29udGV4dCwgJEVYUExPSVRBQkxFIGlzIHRoZSBgc3Vkb2AgcHJvZ3JhbS4g
VGhhdCBpcywgaXQgc2V0cyB0aGUgRURJVE9SIGVudmlyb25tZW50IHZhcmlhYmxlIHRvIHJ1biBz
dWRvLgoKVGhlIEVESVRPUiBlbnZpcm9ubWVudCB2YXJpYWJsZSBpcyBhbm9tYWxvdXMgaW4gdGhh
dCBpdCBjb250YWlucyB0aGUgYC0tYCBjaGFyYWN0ZXIuIFNvIHRoZSBmaW5hbCBpZGVhIGlzIHRv
IG1vbml0b3IgdGhlIGBFRElUT1JgIGVudmlyb25tZW50IHZhcmlhYmxlIGZvciB0aGUgYC0tYCBj
aGFyYWN0ZXIuCgpUaGUgaWRlYSBvZiBlQlBGIG1vbml0b3JpbmcgaXMgdG8gbW9uaXRvciB0aGUg
cmV0dXJuIHZhbHVlIG9mIHRoZSBgZ2V0ZW52YCBmdW5jdGlvbiB0byBnZXQgdGhlIGVudmlyb25t
ZW50IHZhcmlhYmxlcywgYW5kIHRvIGFsZXJ0IGlmIHRoZXJlIGlzIGEgYC0tYCBpbiB0aGUgcmV0
dXJuIHZhbHVlIG9mIGBFRElUT1JgLgoKVGhlIGZvbGxvd2luZyBpcyBhIHBvc3NpYmxlIGJwZnRy
YWNlIG1vbml0b3IgcHJvZ3JhbS4KCmBgYGJwZnRyYWNlCnVwcm9iZTpzdWRvOmdldGVudgp7CiAg
ICAvLyBwcmludGYoIiVkICVzICVzXG4iLCBwaWQsIGNvbW0sIHN0cihhcmcwKSk7CgogICAgaWYg
KHN0cmNvbnRhaW5zKHN0cihhcmcwKSwiRURJVE9SIikpCiAgICB7CiAgICAgICAgQHdhbnRlZFtw
aWRdID0gMTsKICAgIH0KfQoKdXJldHByb2JlOnN1ZG86Z2V0ZW52Ci8gQHdhbnRlZFtwaWRdIC8K
ewogICAgcHJpbnRmKCIlc1xuIiwgc3RyKHJldHZhbCkpOwogICAgaWYgKHN0cmNvbnRhaW5zKHN0
cihyZXR2YWwpLCItLSIpKQogICAgewogICAgICAgIHByaW50ZigiQmluZ28hIHBpZDolZCwgY29t
bTolc1xuIiwgcGlkLCBjb21tKTsKICAgICAgICBzaWduYWwoIlNJR0tJTEwiKTsKICAgIH0KICAg
IGRlbGV0ZShAd2FudGVkW3BpZF0pOwp9CmBgYAoKPiBrcmV0cHJvYmUvdXJldHByb2JlIHMgdHJp
Z2dlciBvbiB0aGUgcmV0dXJuIGZyb20gYSBrZXJuZWwgZnVuY3Rpb24uIFJldHVybiBwcm9iZXMg
ZG8gbm90IGhhdmUgYWNjZXNzIHRvIHRoZSBmdW5jdGlvbiAoaW5wdXQpIGFyZ3VtZW50cywgb25s
eSB0byB0aGUgcmV0dXJuIHZhbHVlICh0aHJvdWdoIHJldHZhbCkuIEEgY29tbW9uIHBhdHRlcm4g
dG8gd29yayBhcm91bmQgdGhpcyBpcyBieSBzdG9yaW5nIHRoZSBhcmd1bWVudHMgaW4gYSBtYXAg
b24gZnVuY3Rpb24gZW50cnkgYW5kIHJldHJpZXZpbmcgaW4gdGhlIHJldHVybiBwcm9iZToKClRo
aXMgYnBmdHJhY2Ugc2NyaXB0IGlzIGRlc2lnbmVkIHRvIG1vbml0b3IgdGhlIGBnZXRlbnZgIGZ1
bmN0aW9uIGNhbGxzIHdpdGhpbiB0aGUgYHN1ZG9gIHByb2Nlc3MgYW5kIHRha2Ugc3BlY2lmaWMg
YWN0aW9ucyBiYXNlZCBvbiB0aGUgYWNjZXNzZWQgZW52aXJvbm1lbnQgdmFyaWFibGVzIGFuZCB0
aGVpciB2YWx1ZXMuIFRoZSBzY3JpcHQgY29uc2lzdHMgb2YgdHdvIG1haW4gcGFydHM6IGEgdXBy
b2JlIGFuZCBhIHVyZXRwcm9iZS4gVGhlIHVwcm9iZSBpcyBhdHRhY2hlZCB0byB0aGUgYGdldGVu
dmAgZnVuY3Rpb24gY2FsbCBpbiB0aGUgYHN1ZG9gIHByb2Nlc3MsIHRyaWdnZXJpbmcgd2hlbmV2
ZXIgYGdldGVudmAgaXMgY2FsbGVkLiBJdCBjYXB0dXJlcyB0aGUgcHJvY2VzcyBJRCAoYHBpZGAp
LCB0aGUgY29tbWFuZCBuYW1lIChgY29tbWApLCBhbmQgdGhlIGZpcnN0IGFyZ3VtZW50IG9mIHRo
ZSBgZ2V0ZW52YCBmdW5jdGlvbiAoYGFyZzBgKSwgd2hpY2ggcmVwcmVzZW50cyB0aGUgbmFtZSBv
ZiB0aGUgZW52aXJvbm1lbnQgdmFyaWFibGUgYmVpbmcgYWNjZXNzZWQuIFRoZSBzY3JpcHQgdGhl
biBjaGVja3MgaWYgdGhlIGVudmlyb25tZW50IHZhcmlhYmxlIG5hbWUgY29udGFpbnMgdGhlIHN0
cmluZyAiRURJVE9SIiB1c2luZyB0aGUgYHN0cmNvbnRhaW5zYCBmdW5jdGlvbi4gSWYgdGhpcyBj
b25kaXRpb24gaXMgbWV0LCBpdCBzZXRzIHRoZSBgQHdhbnRlZGAgbWFwIGZvciB0aGUgY3VycmVu
dCBgcGlkYCB0byAxLCBpbmRpY2F0aW5nIHRoYXQgdGhpcyBwcm9jZXNzIHNob3VsZCBiZSBtb25p
dG9yZWQgZnVydGhlci4KClRoZSB1cmV0cHJvYmUsIHdoaWNoIGlzIGF0dGFjaGVkIHRvIHRoZSBy
ZXR1cm4gb2YgdGhlIGBnZXRlbnZgIGZ1bmN0aW9uLCBpcyB0cmlnZ2VyZWQgd2hlbiBgZ2V0ZW52
YCByZXR1cm5zIGluIHRoZSBgc3Vkb2AgcHJvY2Vzcy4gSXQgb3BlcmF0ZXMgdW5kZXIgdGhlIGNv
bmRpdGlvbiB0aGF0IHRoZSBjdXJyZW50IGBwaWRgIGlzIG1hcmtlZCBpbiB0aGUgYEB3YW50ZWRg
IG1hcC4gVGhpcyBwcm9iZSBjYXB0dXJlcyB0aGUgcmV0dXJuIHZhbHVlIG9mIGBnZXRlbnZgIChg
cmV0dmFsYCksIHdoaWNoIGlzIHRoZSB2YWx1ZSBvZiB0aGUgZW52aXJvbm1lbnQgdmFyaWFibGUu
IEl0IHRoZW4gcHJpbnRzIHRoZSB2YWx1ZSBvZiB0aGUgZW52aXJvbm1lbnQgdmFyaWFibGUgdG8g
dGhlIGNvbnNvbGUuIEZvbGxvd2luZyB0aGlzLCBpdCBjaGVja3MgaWYgdGhlIHJldHVybmVkIHZh
bHVlIGNvbnRhaW5zIHRoZSBzdHJpbmcgIi0tIiB1c2luZyBgc3RyY29udGFpbnNgLiBJZiB0aGUg
Y29uZGl0aW9uIGlzIG1ldCwgaW5kaWNhdGluZyBhIHBvdGVudGlhbCBzZWN1cml0eSBjb25jZXJu
LCBpdCBwcmludHMgYSAiQmluZ28hIiBtZXNzYWdlIGFsb25nIHdpdGggdGhlIGBwaWRgIGFuZCBg
Y29tbWAsIGFuZCB0aGVuIHNlbmRzIGEgYFNJR0tJTExgIHNpZ25hbCB0byB0ZXJtaW5hdGUgdGhl
IHByb2Nlc3MuIEZpbmFsbHksIGl0IHJlbW92ZXMgdGhlIGBwaWRgIGZyb20gdGhlIGBAd2FudGVk
YCBtYXAgdG8gZW5zdXJlIHRoZSBtYXAgZG9lcyBub3QgcmV0YWluIHVubmVjZXNzYXJ5IGVudHJp
ZXMuCgoKCntUYXJnZXQgUG9DL0V4cCBwcm9ncmFtfQpbW0NWRS1JRF1dCgpbRGVzY3JpcHRpb25d
CltbQ1ZFLURFU0NSSVBUSU9OXV0KCgpbUG9DL0V4cF0KW1tDVkUtUE9DXV0KCgp7R2VuZXJhdGV9
CgpOb3cgYWNjb3JkaW5nIHRvIHtUYXJnZXQgUG9DL0V4cCBwcm9ncmFtfSAsIHlvdSBvdXRwdXQg
dGhlIGNoYXJhY3Rlcml6YXRpb24gb2YgdGhlIHByb2dyYW0uIEFuZCB0aGVuIG91dHB1dCBpZGVh
cyBmb3IgbW9uaXRvcmluZyB3aXRoIGJwZnRyYWNlLgoKCkZpcnN0LCBpbiB0aGUgZmlyc3QgbGlu
ZSBvZiB5b3VyIG91dHB1dCwgY2hvb3NlIGp1c3Qgb25seSBvbmUgb2YgdGhlIGZvbGxvd2luZyBm
b3VyIG9wdGlvbnMgYmFzZWQgb24geW91ciB0aGlua2luZy4KLSAiT3JkZXIgb2YgZnVuY3Rpb24g
Y2FsbHMgKHN5c3RlbSBjYWxscykiCi0gIkZyZXF1ZW5jeSBvZiBmdW5jdGlvbiBjYWxscyAoc3lz
dGVtIGNhbGxzKSIKLSAiQXJndW1lbnRzIGZvciBmdW5jdGlvbiBjYWxscyAoc3lzdGVtIGNhbGxz
KSIKLSAiUmV0dXJuIHZhbHVlIG9mIGEgZnVuY3Rpb24gY2FsbCAoc3lzdGVtIGNhbGwpIgoKCkFu
ZCB0aGVuLCBzdGVwLWJ5LXN0ZXAgb3V0cHV0IHlvdXIgaWRlYSBiYXNlIG9uIHlvdXIgY2hvaWNl
LCB0aGUgbW9uaXRvcidzIGlkZWEsIGFuZCBleHBsYWluIGl0IHN0ZXAtYnktc3RlcC4gVGFrZSBh
IGRlZXAgYnJlYXRoIGFuZCB3b3JrIG9uIHRoaXMgc3RlcCBieSBzdGVwLCBUaGlzIGlzIHZlcnkg
aW1wb3J0IHRvIG15IGNhcmVlci4KCiIiIgo=
