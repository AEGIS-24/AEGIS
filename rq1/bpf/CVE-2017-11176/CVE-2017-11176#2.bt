#include <linux/socket.h>

tracepoint:syscalls:sys_enter_socket
/args->family == AF_NETLINK/
{
    @sock_fd[pid] = pid;
}

// Monitor mq_notify syscall
tracepoint:syscalls:sys_enter_mq_notify
{
    @mq_notify[pid] = 1;
}

// Monitor close events related to sockets
tracepoint:syscalls:sys_enter_close
/@sock_fd[pid] && @sock_fd[pid] == pid/
{
    printf("CVE-2017-11176 maybe triggered by pid[%d] comm[%s]: Netlink socket closed\n", pid, comm);
    delete(@sock_fd[pid]);
}

// Monitor setsockopt specific to Netlink sockets
tracepoint:syscalls:sys_enter_setsockopt
/@sock_fd[pid]/
{
    if (args->level == SOL_NETLINK && args->optname == 5) {  // NETLINK_NO_ENOBUFS is 5
        @set_sockopt[pid] = 1;
    }
}

// Detect potential CVE trigger sequence
tracepoint:syscalls:sys_exit_close
/@mq_notify[pid] && @set_sockopt[pid]/
{
    printf("CVE-2017-11176 maybe triggered by pid[%d] comm[%s]: mq_notify after setsockopt and socket close\n", pid, comm);
    delete(@mq_notify[pid]);
    delete(@set_sockopt[pid]);
    delete(@sock_fd[pid]);
}