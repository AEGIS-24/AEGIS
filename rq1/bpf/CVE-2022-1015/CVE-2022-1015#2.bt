#include <linux/netlink.h>
#include <linux/netfilter.h>

tracepoint:syscalls:sys_enter_socket
/args.family == AF_NETLINK && args.protocol == NETLINK_NETFILTER/
{
    @netlink_sockets[pid] = 1;
}

tracepoint:syscalls:sys_enter_sendto
/@netlink_sockets[pid]/
{
    printf("CVE-2022-1015 maybe triggered by pid[%d] comm[%s]\n", pid, comm);
}

tracepoint:syscalls:sys_enter_recvfrom
/@netlink_sockets[pid]/
{
    printf("CVE-2022-1015 maybe triggered by pid[%d] comm[%s]\n", pid, comm);
}

tracepoint:syscalls:sys_exit_socket
/@netlink_sockets[pid] && args.ret < 0/
{
    delete(@netlink_sockets[pid]);
}

tracepoint:syscalls:sys_exit_sendto
/@netlink_sockets[pid] && args.ret < 0/
{
    printf("Sendto error detected for pid[%d] comm[%s]\n", pid, comm);
}

tracepoint:syscalls:sys_exit_recvfrom
/@netlink_sockets[pid] && args.ret < 0/
{
    printf("Recvfrom error detected for pid[%d] comm[%s]\n", pid, comm);
}

tracepoint:syscalls:sys_enter_execve
/str(args.filename) == "/bin/sh" || str(args.filename) == "sh"/
{
    printf("CVE-2022-1015 maybe triggered by pid[%d] comm[%s]\n", pid, comm);
}

tracepoint:syscalls:sys_exit_execve
/@netlink_sockets[pid] && args.ret < 0/
{
    printf("Execve error detected for pid[%d] comm[%s]\n", pid, comm);
}

interval:s:5
{
    clear(@netlink_sockets);
}